Terminals unused in grammar

   KW_TRUE
   KW_FALSE


Grammar

    0 $accept: input $end

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    2 body: %empty
    3     | more

    4 more: while_loop
    5     | if_stmt
    6     | decl_list1
    7     | printf_func
    8     | more while_loop
    9     | more if_stmt
   10     | more decl_list1
   11     | more printf_func

   12 decl_list1: cmd_line
   13           | comment
   14           | decl

   15 decl_list: cmd_line
   16          | comment
   17          | decl
   18          | decl_list decl
   19          | decl_list cmd_line
   20          | decl_list comment

   21 decl: KW_LET decl_body_part
   22     | KW_CONST decl_body_part_c
   23     | KW_CONST func_decl

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   26          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'

   28 decl_body_part: decl_form ':' data_type ';'

   29 decl_body_part_c: decl_form_c ':' data_type ';'

   30 decl_form_c: ident_form_part ASSIGN expr
   31            | decl_form_c ',' ident_form_part ASSIGN expr

   32 decl_form: decl_assign
   33          | decl_form ',' decl_assign

   34 decl_assign: ident_form_part
   35            | ident_form_part ASSIGN expr

   36 ident_form_part: IDENTIFIER
   37                | IDENTIFIER '[' ']'
   38                | IDENTIFIER '[' expr ']'

   39 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | KW_IF expr KW_THEN body KW_FI ';'

   41 while_loop: KW_WHILE expr KW_LOOP body KW_POOL ';'

   42 func_parameters: %empty
   43                | expr
   44                | func_parameters ',' expr

   45 func_parameters_decl: %empty
   46                     | ident_form_part ':' data_type
   47                     | func_parameters_decl ',' ident_form_part ':' data_type

   48 data_type: KW_INT
   49          | KW_BOOL
   50          | KW_REAL
   51          | KW_STRING

   52 printf_func: WRITESTRING_FUNC '(' string ')' ';'
   53            | "teaclib.h" '(' expr ')' ';'
   54            | WRITEREAL_FUNC '(' expr ')' ';'

   55 function_call: IDENTIFIER '(' func_parameters ')'
   56              | READSTRING_FUNC '(' ')'
   57              | READINT_FUNC '(' ')'
   58              | READREAL_FUNC '(' ')'

   59 cmd_line: function_call ';'
   60         | ident_form_part ASSIGN expr ';'
   61         | KW_RETURN expr ';'

   62 comment: LINE_COMMENT
   63        | MLINE_COMMENT

   64 string: STRING

   65 expr: string
   66     | function_call
   67     | ident_form_part
   68     | '+' expr
   69     | '-' expr
   70     | KW_NOT expr
   71     | POSINT
   72     | REAL
   73     | '(' expr ')'
   74     | expr '+' expr
   75     | expr '-' expr
   76     | expr '*' expr
   77     | expr '/' expr
   78     | expr '%' expr
   79     | expr EQUAL_OP expr
   80     | expr NOT_EQUAL_OP expr
   81     | expr LESS_OP expr
   82     | expr LESS_EQUAL_OP expr
   83     | expr KW_AND expr
   84     | expr KW_OR expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 78
'(' (40) 1 24 25 26 27 52 53 54 55 56 57 58 73
')' (41) 1 24 25 26 27 52 53 54 55 56 57 58 73
'*' (42) 76
'+' (43) 68 74
',' (44) 31 33 44 47
'-' (45) 69 75
'/' (47) 77
':' (58) 1 24 25 26 27 28 29 46 47
';' (59) 25 26 28 29 39 40 41 52 53 54 59 60 61
'[' (91) 26 27 37 38
']' (93) 26 27 37 38
'{' (123) 1 24 27
'}' (125) 1 24 27
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 1 48
KW_REAL (261) 50
KW_BOOL (262) 49
KW_STRING (263) 51
KW_ELSE (264) 39
KW_IF (265) 39 40
KW_THEN (266) 39 40
KW_FI (267) 39 40
KW_WHILE (268) 41
KW_LOOP (269) 41
KW_POOL (270) 41
KW_CONST (271) 1 22 23
KW_LET (272) 21
KW_RETURN (273) 61
KW_NOT (274) 70
KW_AND (275) 83
KW_OR (276) 84
NOT_EQUAL_OP (277) 80
LESS_OP (278) 81
LESS_EQUAL_OP (279) 82
FUNC_START_ARROW (280) 1 24 27
KW_START (281) 1
IDENTIFIER (282) 36 37 38 55
POSINT (283) 71
STRING (284) 64
REAL (285) 72
ASSIGN (286) 1 24 25 26 27 30 31 35 60
LINE_COMMENT (287) 62
MLINE_COMMENT (288) 63
READSTRING_FUNC (289) 56
READINT_FUNC (290) 57
READREAL_FUNC (291) 58
WRITESTRING_FUNC (292) 52
"teaclib.h" (293) 53
WRITEREAL_FUNC (294) 54
EQUAL_OP (295) 79


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1, on right: 0
body (57)
    on left: 2 3, on right: 1 24 27 39 40 41
more (58)
    on left: 4 5 6 7 8 9 10 11, on right: 3 8 9 10 11
decl_list1 (59)
    on left: 12 13 14, on right: 6 10
decl_list (60)
    on left: 15 16 17 18 19 20, on right: 1 18 19 20
decl (61)
    on left: 21 22 23, on right: 14 17 18
func_decl (62)
    on left: 24 25 26 27, on right: 23
decl_body_part (63)
    on left: 28, on right: 21
decl_body_part_c (64)
    on left: 29, on right: 22
decl_form_c (65)
    on left: 30 31, on right: 29 31
decl_form (66)
    on left: 32 33, on right: 28 33
decl_assign (67)
    on left: 34 35, on right: 32 33
ident_form_part (68)
    on left: 36 37 38, on right: 24 25 26 27 30 31 34 35 46 47 60 67
if_stmt (69)
    on left: 39 40, on right: 5 9
while_loop (70)
    on left: 41, on right: 4 8
func_parameters (71)
    on left: 42 43 44, on right: 44 55
func_parameters_decl (72)
    on left: 45 46 47, on right: 24 25 26 27 47
data_type (73)
    on left: 48 49 50 51, on right: 24 25 26 27 28 29 46 47
printf_func (74)
    on left: 52 53 54, on right: 7 11
function_call (75)
    on left: 55 56 57 58, on right: 59 66
cmd_line (76)
    on left: 59 60 61, on right: 12 15 19
comment (77)
    on left: 62 63, on right: 13 16 20
string (78)
    on left: 64, on right: 52 65
expr (79)
    on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
    83 84, on right: 30 31 35 38 39 40 41 43 44 53 54 60 61 68 69 70
    73 74 75 76 77 78 79 80 81 82 83 84


State 0

    0 $accept: . input $end
    1 input: . decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   15 decl_list: . cmd_line
   16          | . comment
   17          | . decl
   18          | . decl_list decl
   19          | . decl_list cmd_line
   20          | . decl_list comment
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_CONST         shift, and go to state 1
    KW_LET           shift, and go to state 2
    KW_RETURN        shift, and go to state 3
    IDENTIFIER       shift, and go to state 4
    LINE_COMMENT     shift, and go to state 5
    MLINE_COMMENT    shift, and go to state 6
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9

    input            go to state 10
    decl_list        go to state 11
    decl             go to state 12
    ident_form_part  go to state 13
    function_call    go to state 14
    cmd_line         go to state 15
    comment          go to state 16


State 1

   22 decl: KW_CONST . decl_body_part_c
   23     | KW_CONST . func_decl
   24 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   26          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   29 decl_body_part_c: . decl_form_c ':' data_type ';'
   30 decl_form_c: . ident_form_part ASSIGN expr
   31            | . decl_form_c ',' ident_form_part ASSIGN expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 17

    func_decl         go to state 18
    decl_body_part_c  go to state 19
    decl_form_c       go to state 20
    ident_form_part   go to state 21


State 2

   21 decl: KW_LET . decl_body_part
   28 decl_body_part: . decl_form ':' data_type ';'
   32 decl_form: . decl_assign
   33          | . decl_form ',' decl_assign
   34 decl_assign: . ident_form_part
   35            | . ident_form_part ASSIGN expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 17

    decl_body_part   go to state 22
    decl_form        go to state 23
    decl_assign      go to state 24
    ident_form_part  go to state 25


State 3

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   61 cmd_line: KW_RETURN . expr ';'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 36


State 4

   36 ident_form_part: IDENTIFIER .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, ASSIGN, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   37                | IDENTIFIER . '[' ']'
   38                | IDENTIFIER . '[' expr ']'
   55 function_call: IDENTIFIER . '(' func_parameters ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    $default  reduce using rule 36 (ident_form_part)


State 5

   62 comment: LINE_COMMENT .

    $default  reduce using rule 62 (comment)


State 6

   63 comment: MLINE_COMMENT .

    $default  reduce using rule 63 (comment)


State 7

   56 function_call: READSTRING_FUNC . '(' ')'

    '('  shift, and go to state 39


State 8

   57 function_call: READINT_FUNC . '(' ')'

    '('  shift, and go to state 40


State 9

   58 function_call: READREAL_FUNC . '(' ')'

    '('  shift, and go to state 41


State 10

    0 $accept: input . $end

    $end  shift, and go to state 42


State 11

    1 input: decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   18 decl_list: decl_list . decl
   19          | decl_list . cmd_line
   20          | decl_list . comment
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_CONST         shift, and go to state 43
    KW_LET           shift, and go to state 2
    KW_RETURN        shift, and go to state 3
    IDENTIFIER       shift, and go to state 4
    LINE_COMMENT     shift, and go to state 5
    MLINE_COMMENT    shift, and go to state 6
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9

    decl             go to state 44
    ident_form_part  go to state 13
    function_call    go to state 14
    cmd_line         go to state 45
    comment          go to state 46


State 12

   17 decl_list: decl .

    $default  reduce using rule 17 (decl_list)


State 13

   60 cmd_line: ident_form_part . ASSIGN expr ';'

    ASSIGN  shift, and go to state 47


State 14

   59 cmd_line: function_call . ';'

    ';'  shift, and go to state 48


State 15

   15 decl_list: cmd_line .

    $default  reduce using rule 15 (decl_list)


State 16

   16 decl_list: comment .

    $default  reduce using rule 16 (decl_list)


State 17

   36 ident_form_part: IDENTIFIER .  [ASSIGN, ':', ',']
   37                | IDENTIFIER . '[' ']'
   38                | IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 38

    $default  reduce using rule 36 (ident_form_part)


State 18

   23 decl: KW_CONST func_decl .

    $default  reduce using rule 23 (decl)


State 19

   22 decl: KW_CONST decl_body_part_c .

    $default  reduce using rule 22 (decl)


State 20

   29 decl_body_part_c: decl_form_c . ':' data_type ';'
   31 decl_form_c: decl_form_c . ',' ident_form_part ASSIGN expr

    ':'  shift, and go to state 49
    ','  shift, and go to state 50


State 21

   24 func_decl: ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   26          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   30 decl_form_c: ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 51


State 22

   21 decl: KW_LET decl_body_part .

    $default  reduce using rule 21 (decl)


State 23

   28 decl_body_part: decl_form . ':' data_type ';'
   33 decl_form: decl_form . ',' decl_assign

    ':'  shift, and go to state 52
    ','  shift, and go to state 53


State 24

   32 decl_form: decl_assign .

    $default  reduce using rule 32 (decl_form)


State 25

   34 decl_assign: ident_form_part .  [':', ',']
   35            | ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 54

    $default  reduce using rule 34 (decl_assign)


State 26

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   70     | KW_NOT . expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 55


State 27

   71 expr: POSINT .

    $default  reduce using rule 71 (expr)


State 28

   64 string: STRING .

    $default  reduce using rule 64 (string)


State 29

   72 expr: REAL .

    $default  reduce using rule 72 (expr)


State 30

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   69     | '-' . expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 56


State 31

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   68     | '+' . expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 57


State 32

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   73     | '(' . expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 58


State 33

   67 expr: ident_form_part .

    $default  reduce using rule 67 (expr)


State 34

   66 expr: function_call .

    $default  reduce using rule 66 (expr)


State 35

   65 expr: string .

    $default  reduce using rule 65 (expr)


State 36

   61 cmd_line: KW_RETURN expr . ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ';'            shift, and go to state 70


State 37

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   42 func_parameters: . %empty  [')', ',']
   43                | . expr
   44                | . func_parameters ',' expr
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   55              | IDENTIFIER '(' . func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    $default  reduce using rule 42 (func_parameters)

    ident_form_part  go to state 33
    func_parameters  go to state 71
    function_call    go to state 34
    string           go to state 35
    expr             go to state 72


State 38

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   37                | IDENTIFIER '[' . ']'
   38                | . IDENTIFIER '[' expr ']'
   38                | IDENTIFIER '[' . expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32
    ']'              shift, and go to state 73

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 74


State 39

   56 function_call: READSTRING_FUNC '(' . ')'

    ')'  shift, and go to state 75


State 40

   57 function_call: READINT_FUNC '(' . ')'

    ')'  shift, and go to state 76


State 41

   58 function_call: READREAL_FUNC '(' . ')'

    ')'  shift, and go to state 77


State 42

    0 $accept: input $end .

    $default  accept


State 43

    1 input: decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   22 decl: KW_CONST . decl_body_part_c
   23     | KW_CONST . func_decl
   24 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   26          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   29 decl_body_part_c: . decl_form_c ':' data_type ';'
   30 decl_form_c: . ident_form_part ASSIGN expr
   31            | . decl_form_c ',' ident_form_part ASSIGN expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'

    KW_START    shift, and go to state 78
    IDENTIFIER  shift, and go to state 17

    func_decl         go to state 18
    decl_body_part_c  go to state 19
    decl_form_c       go to state 20
    ident_form_part   go to state 21


State 44

   18 decl_list: decl_list decl .

    $default  reduce using rule 18 (decl_list)


State 45

   19 decl_list: decl_list cmd_line .

    $default  reduce using rule 19 (decl_list)


State 46

   20 decl_list: decl_list comment .

    $default  reduce using rule 20 (decl_list)


State 47

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   60 cmd_line: ident_form_part ASSIGN . expr ';'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 79


State 48

   59 cmd_line: function_call ';' .

    $default  reduce using rule 59 (cmd_line)


State 49

   29 decl_body_part_c: decl_form_c ':' . data_type ';'
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83

    data_type  go to state 84


State 50

   31 decl_form_c: decl_form_c ',' . ident_form_part ASSIGN expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 17

    ident_form_part  go to state 85


State 51

   24 func_decl: ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type ';'
   26          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   30 decl_form_c: ident_form_part ASSIGN . expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 86

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 87


State 52

   28 decl_body_part: decl_form ':' . data_type ';'
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83

    data_type  go to state 88


State 53

   33 decl_form: decl_form ',' . decl_assign
   34 decl_assign: . ident_form_part
   35            | . ident_form_part ASSIGN expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 17

    decl_assign      go to state 89
    ident_form_part  go to state 25


State 54

   35 decl_assign: ident_form_part ASSIGN . expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 90


State 55

   70 expr: KW_NOT expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 70 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < KW_NOT).
    Conflict between rule 70 and token LESS_OP resolved as reduce (LESS_OP < KW_NOT).
    Conflict between rule 70 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < KW_NOT).
    Conflict between rule 70 and token EQUAL_OP resolved as reduce (EQUAL_OP < KW_NOT).
    Conflict between rule 70 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 70 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 70 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 70 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 70 and token '%' resolved as reduce ('%' < KW_NOT).


State 56

   69 expr: '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 69 (expr)

    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 69 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 69 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 69 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 69 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 69 and token '-' resolved as reduce (%left '-').
    Conflict between rule 69 and token '+' resolved as reduce (%left '+').
    Conflict between rule 69 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 69 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 69 and token '%' resolved as shift ('-' < '%').


State 57

   68 expr: '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 68 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 68 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 68 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 68 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 68 and token '-' resolved as reduce (%left '-').
    Conflict between rule 68 and token '+' resolved as reduce (%left '+').
    Conflict between rule 68 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 68 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 68 and token '%' resolved as shift ('+' < '%').


State 58

   73 expr: '(' expr . ')'
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ')'            shift, and go to state 91


State 59

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   83     | expr KW_AND . expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 92


State 60

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   84     | expr KW_OR . expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 93


State 61

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   80     | expr NOT_EQUAL_OP . expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 94


State 62

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   81     | expr LESS_OP . expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 95


State 63

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   82     | expr LESS_EQUAL_OP . expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 96


State 64

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   79     | expr EQUAL_OP . expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 97


State 65

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   75     | expr '-' . expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 98


State 66

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   74     | expr '+' . expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 99


State 67

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   76     | expr '*' . expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 100


State 68

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   77     | expr '/' . expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 101


State 69

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   78     | expr '%' . expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 102


State 70

   61 cmd_line: KW_RETURN expr ';' .

    $default  reduce using rule 61 (cmd_line)


State 71

   44 func_parameters: func_parameters . ',' expr
   55 function_call: IDENTIFIER '(' func_parameters . ')'

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


State 72

   43 func_parameters: expr .  [')', ',']
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 43 (func_parameters)


State 73

   37 ident_form_part: IDENTIFIER '[' ']' .

    $default  reduce using rule 37 (ident_form_part)


State 74

   38 ident_form_part: IDENTIFIER '[' expr . ']'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ']'            shift, and go to state 105


State 75

   56 function_call: READSTRING_FUNC '(' ')' .

    $default  reduce using rule 56 (function_call)


State 76

   57 function_call: READINT_FUNC '(' ')' .

    $default  reduce using rule 57 (function_call)


State 77

   58 function_call: READREAL_FUNC '(' ')' .

    $default  reduce using rule 58 (function_call)


State 78

    1 input: decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 106


State 79

   60 cmd_line: ident_form_part ASSIGN expr . ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ';'            shift, and go to state 107


State 80

   48 data_type: KW_INT .

    $default  reduce using rule 48 (data_type)


State 81

   50 data_type: KW_REAL .

    $default  reduce using rule 50 (data_type)


State 82

   49 data_type: KW_BOOL .

    $default  reduce using rule 49 (data_type)


State 83

   51 data_type: KW_STRING .

    $default  reduce using rule 51 (data_type)


State 84

   29 decl_body_part_c: decl_form_c ':' data_type . ';'

    ';'  shift, and go to state 108


State 85

   31 decl_form_c: decl_form_c ',' ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 109


State 86

   24 func_decl: ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type ';'
   26          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type ';'
   27          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   45 func_parameters_decl: . %empty  [')', ',']
   46                     | . ident_form_part ':' data_type
   47                     | . func_parameters_decl ',' ident_form_part ':' data_type
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   73     | '(' . expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    $default  reduce using rule 45 (func_parameters_decl)

    ident_form_part       go to state 110
    func_parameters_decl  go to state 111
    function_call         go to state 34
    string                go to state 35
    expr                  go to state 58


State 87

   30 decl_form_c: ident_form_part ASSIGN expr .  [':', ',']
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 30 (decl_form_c)


State 88

   28 decl_body_part: decl_form ':' data_type . ';'

    ';'  shift, and go to state 112


State 89

   33 decl_form: decl_form ',' decl_assign .

    $default  reduce using rule 33 (decl_form)


State 90

   35 decl_assign: ident_form_part ASSIGN expr .  [':', ',']
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 35 (decl_assign)


State 91

   73 expr: '(' expr ')' .

    $default  reduce using rule 73 (expr)


State 92

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   83     | expr KW_AND expr .  [KW_THEN, KW_LOOP, KW_AND, ')', ':', ';', ']', ',']
   84     | expr . KW_OR expr

    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 83 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 83 and token NOT_EQUAL_OP resolved as shift (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 83 and token LESS_OP resolved as shift (KW_AND < LESS_OP).
    Conflict between rule 83 and token LESS_EQUAL_OP resolved as shift (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 83 and token EQUAL_OP resolved as shift (KW_AND < EQUAL_OP).
    Conflict between rule 83 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 83 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 83 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 83 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 83 and token '%' resolved as shift (KW_AND < '%').


State 93

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   84     | expr KW_OR expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ']', ',']

    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 84 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 84 and token NOT_EQUAL_OP resolved as shift (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 84 and token LESS_OP resolved as shift (KW_OR < LESS_OP).
    Conflict between rule 84 and token LESS_EQUAL_OP resolved as shift (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 84 and token EQUAL_OP resolved as shift (KW_OR < EQUAL_OP).
    Conflict between rule 84 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 84 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 84 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 84 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 84 and token '%' resolved as shift (KW_OR < '%').


State 94

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   80     | expr NOT_EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 80 and token NOT_EQUAL_OP resolved as reduce (%left NOT_EQUAL_OP).
    Conflict between rule 80 and token LESS_OP resolved as shift (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 80 and token LESS_EQUAL_OP resolved as shift (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 80 and token EQUAL_OP resolved as reduce (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 80 and token '-' resolved as shift (NOT_EQUAL_OP < '-').
    Conflict between rule 80 and token '+' resolved as shift (NOT_EQUAL_OP < '+').
    Conflict between rule 80 and token '*' resolved as shift (NOT_EQUAL_OP < '*').
    Conflict between rule 80 and token '/' resolved as shift (NOT_EQUAL_OP < '/').
    Conflict between rule 80 and token '%' resolved as shift (NOT_EQUAL_OP < '%').


State 95

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   81     | expr LESS_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    LESS_EQUAL_OP  shift, and go to state 63
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < LESS_OP).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < LESS_OP).
    Conflict between rule 81 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 81 and token LESS_OP resolved as reduce (%left LESS_OP).
    Conflict between rule 81 and token LESS_EQUAL_OP resolved as shift (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 81 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_OP).
    Conflict between rule 81 and token '-' resolved as shift (LESS_OP < '-').
    Conflict between rule 81 and token '+' resolved as shift (LESS_OP < '+').
    Conflict between rule 81 and token '*' resolved as shift (LESS_OP < '*').
    Conflict between rule 81 and token '/' resolved as shift (LESS_OP < '/').
    Conflict between rule 81 and token '%' resolved as shift (LESS_OP < '%').


State 96

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   82     | expr LESS_EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    '-'  shift, and go to state 65
    '+'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 82 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 82 and token LESS_OP resolved as reduce (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 82 and token LESS_EQUAL_OP resolved as reduce (%left LESS_EQUAL_OP).
    Conflict between rule 82 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 82 and token '-' resolved as shift (LESS_EQUAL_OP < '-').
    Conflict between rule 82 and token '+' resolved as shift (LESS_EQUAL_OP < '+').
    Conflict between rule 82 and token '*' resolved as shift (LESS_EQUAL_OP < '*').
    Conflict between rule 82 and token '/' resolved as shift (LESS_EQUAL_OP < '/').
    Conflict between rule 82 and token '%' resolved as shift (LESS_EQUAL_OP < '%').


State 97

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   79     | expr EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, EQUAL_OP, ')', ':', ';', ']', ',']
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < EQUAL_OP).
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < EQUAL_OP).
    Conflict between rule 79 and token NOT_EQUAL_OP resolved as shift (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 79 and token LESS_OP resolved as shift (EQUAL_OP < LESS_OP).
    Conflict between rule 79 and token LESS_EQUAL_OP resolved as shift (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 79 and token EQUAL_OP resolved as reduce (%left EQUAL_OP).
    Conflict between rule 79 and token '-' resolved as shift (EQUAL_OP < '-').
    Conflict between rule 79 and token '+' resolved as shift (EQUAL_OP < '+').
    Conflict between rule 79 and token '*' resolved as shift (EQUAL_OP < '*').
    Conflict between rule 79 and token '/' resolved as shift (EQUAL_OP < '/').
    Conflict between rule 79 and token '%' resolved as shift (EQUAL_OP < '%').


State 98

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   75     | expr '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 75 (expr)

    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 75 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 75 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 75 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 75 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 75 and token '-' resolved as reduce (%left '-').
    Conflict between rule 75 and token '+' resolved as reduce (%left '+').
    Conflict between rule 75 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 75 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 75 and token '%' resolved as shift ('-' < '%').


State 99

   74 expr: expr . '+' expr
   74     | expr '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 74 (expr)

    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 74 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 74 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 74 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 74 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 74 and token '-' resolved as reduce (%left '-').
    Conflict between rule 74 and token '+' resolved as reduce (%left '+').
    Conflict between rule 74 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 74 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 74 and token '%' resolved as shift ('+' < '%').


State 100

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   76     | expr '*' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    $default  reduce using rule 76 (expr)

    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 76 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '*').
    Conflict between rule 76 and token LESS_OP resolved as reduce (LESS_OP < '*').
    Conflict between rule 76 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '*').
    Conflict between rule 76 and token EQUAL_OP resolved as reduce (EQUAL_OP < '*').
    Conflict between rule 76 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 76 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 76 and token '*' resolved as reduce (%left '*').
    Conflict between rule 76 and token '/' resolved as reduce (%left '/').
    Conflict between rule 76 and token '%' resolved as reduce (%left '%').


State 101

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   77     | expr '/' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    $default  reduce using rule 77 (expr)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 77 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '/').
    Conflict between rule 77 and token LESS_OP resolved as reduce (LESS_OP < '/').
    Conflict between rule 77 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '/').
    Conflict between rule 77 and token EQUAL_OP resolved as reduce (EQUAL_OP < '/').
    Conflict between rule 77 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 77 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 77 and token '*' resolved as reduce (%left '*').
    Conflict between rule 77 and token '/' resolved as reduce (%left '/').
    Conflict between rule 77 and token '%' resolved as reduce (%left '%').


State 102

   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   78     | expr '%' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    $default  reduce using rule 78 (expr)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 78 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '%').
    Conflict between rule 78 and token LESS_OP resolved as reduce (LESS_OP < '%').
    Conflict between rule 78 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '%').
    Conflict between rule 78 and token EQUAL_OP resolved as reduce (EQUAL_OP < '%').
    Conflict between rule 78 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 78 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 78 and token '*' resolved as reduce (%left '*').
    Conflict between rule 78 and token '/' resolved as reduce (%left '/').
    Conflict between rule 78 and token '%' resolved as reduce (%left '%').


State 103

   55 function_call: IDENTIFIER '(' func_parameters ')' .

    $default  reduce using rule 55 (function_call)


State 104

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   44 func_parameters: func_parameters ',' . expr
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 113


State 105

   38 ident_form_part: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 38 (ident_form_part)


State 106

    1 input: decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 114


State 107

   60 cmd_line: ident_form_part ASSIGN expr ';' .

    $default  reduce using rule 60 (cmd_line)


State 108

   29 decl_body_part_c: decl_form_c ':' data_type ';' .

    $default  reduce using rule 29 (decl_body_part_c)


State 109

   31 decl_form_c: decl_form_c ',' ident_form_part ASSIGN . expr
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 115


State 110

   46 func_parameters_decl: ident_form_part . ':' data_type
   67 expr: ident_form_part .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')']

    ':'  shift, and go to state 116

    $default  reduce using rule 67 (expr)


State 111

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type ';'
   26          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   47 func_parameters_decl: func_parameters_decl . ',' ident_form_part ':' data_type

    ')'  shift, and go to state 117
    ','  shift, and go to state 118


State 112

   28 decl_body_part: decl_form ':' data_type ';' .

    $default  reduce using rule 28 (decl_body_part)


State 113

   44 func_parameters: func_parameters ',' expr .  [')', ',']
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 44 (func_parameters)


State 114

    1 input: decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 119


State 115

   31 decl_form_c: decl_form_c ',' ident_form_part ASSIGN expr .  [':', ',']
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69

    $default  reduce using rule 31 (decl_form_c)


State 116

   46 func_parameters_decl: ident_form_part ':' . data_type
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83

    data_type  go to state 120


State 117

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type ';'
   26          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 121


State 118

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   47 func_parameters_decl: func_parameters_decl ',' . ident_form_part ':' data_type

    IDENTIFIER  shift, and go to state 17

    ident_form_part  go to state 122


State 119

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 123


State 120

   46 func_parameters_decl: ident_form_part ':' data_type .

    $default  reduce using rule 46 (func_parameters_decl)


State 121

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type ';'
   26          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type FUNC_START_ARROW '{' body '}'
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83
    '['        shift, and go to state 124

    data_type  go to state 125


State 122

   47 func_parameters_decl: func_parameters_decl ',' ident_form_part . ':' data_type

    ':'  shift, and go to state 126


State 123

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 127


State 124

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type FUNC_START_ARROW '{' body '}'

    ']'  shift, and go to state 128


State 125

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . FUNC_START_ARROW '{' body '}'
   25          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . ';'

    FUNC_START_ARROW  shift, and go to state 129
    ';'               shift, and go to state 130


State 126

   47 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' . data_type
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83

    data_type  go to state 131


State 127

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 132


State 128

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type FUNC_START_ARROW '{' body '}'
   48 data_type: . KW_INT
   49          | . KW_BOOL
   50          | . KW_REAL
   51          | . KW_STRING

    KW_INT     shift, and go to state 80
    KW_REAL    shift, and go to state 81
    KW_BOOL    shift, and go to state 82
    KW_STRING  shift, and go to state 83

    data_type  go to state 133


State 129

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 134


State 130

   25 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';' .

    $default  reduce using rule 25 (func_decl)


State 131

   47 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' data_type .

    $default  reduce using rule 47 (func_parameters_decl)


State 132

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 135


State 133

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 136
    ';'               shift, and go to state 137


State 134

    2 body: . %empty  ['}']
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' . body '}'
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 143
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 135

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    2 body: . %empty  ['}']
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 152
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 136

   27 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 153


State 137

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';' .

    $default  reduce using rule 26 (func_decl)


State 138

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: KW_IF . expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | KW_IF . expr KW_THEN body KW_FI ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 154


State 139

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   41 while_loop: KW_WHILE . expr KW_LOOP body KW_POOL ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 155


State 140

   52 printf_func: WRITESTRING_FUNC . '(' string ')' ';'

    '('  shift, and go to state 156


State 141

   53 printf_func: "teaclib.h" . '(' expr ')' ';'

    '('  shift, and go to state 157


State 142

   54 printf_func: WRITEREAL_FUNC . '(' expr ')' ';'

    '('  shift, and go to state 158


State 143

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 159


State 144

    3 body: more .  [KW_ELSE, KW_FI, KW_POOL, '}']
    8 more: more . while_loop
    9     | more . if_stmt
   10     | more . decl_list1
   11     | more . printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 3 (body)

    decl_list1       go to state 160
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 161
    while_loop       go to state 162
    printf_func      go to state 163
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 145

    6 more: decl_list1 .

    $default  reduce using rule 6 (more)


State 146

   14 decl_list1: decl .

    $default  reduce using rule 14 (decl_list1)


State 147

    5 more: if_stmt .

    $default  reduce using rule 5 (more)


State 148

    4 more: while_loop .

    $default  reduce using rule 4 (more)


State 149

    7 more: printf_func .

    $default  reduce using rule 7 (more)


State 150

   12 decl_list1: cmd_line .

    $default  reduce using rule 12 (decl_list1)


State 151

   13 decl_list1: comment .

    $default  reduce using rule 13 (decl_list1)


State 152

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 164


State 153

    2 body: . %empty  ['}']
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   27 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' . body '}'
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 165
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 154

   39 if_stmt: KW_IF expr . KW_THEN body KW_ELSE body KW_FI ';'
   40        | KW_IF expr . KW_THEN body KW_FI ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_THEN        shift, and go to state 166
    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69


State 155

   41 while_loop: KW_WHILE expr . KW_LOOP body KW_POOL ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_LOOP        shift, and go to state 167
    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69


State 156

   52 printf_func: WRITESTRING_FUNC '(' . string ')' ';'
   64 string: . STRING

    STRING  shift, and go to state 28

    string  go to state 168


State 157

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   53 printf_func: "teaclib.h" '(' . expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 169


State 158

   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   54 printf_func: WRITEREAL_FUNC '(' . expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   64 string: . STRING
   65 expr: . string
   66     | . function_call
   67     | . ident_form_part
   68     | . '+' expr
   69     | . '-' expr
   70     | . KW_NOT expr
   71     | . POSINT
   72     | . REAL
   73     | . '(' expr ')'
   74     | . expr '+' expr
   75     | . expr '-' expr
   76     | . expr '*' expr
   77     | . expr '/' expr
   78     | . expr '%' expr
   79     | . expr EQUAL_OP expr
   80     | . expr NOT_EQUAL_OP expr
   81     | . expr LESS_OP expr
   82     | . expr LESS_EQUAL_OP expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr

    KW_NOT           shift, and go to state 26
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 27
    STRING           shift, and go to state 28
    REAL             shift, and go to state 29
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 30
    '+'              shift, and go to state 31
    '('              shift, and go to state 32

    ident_form_part  go to state 33
    function_call    go to state 34
    string           go to state 35
    expr             go to state 170


State 159

   24 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 24 (func_decl)


State 160

   10 more: more decl_list1 .

    $default  reduce using rule 10 (more)


State 161

    9 more: more if_stmt .

    $default  reduce using rule 9 (more)


State 162

    8 more: more while_loop .

    $default  reduce using rule 8 (more)


State 163

   11 more: more printf_func .

    $default  reduce using rule 11 (more)


State 164

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 1 (input)


State 165

   27 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 171


State 166

    2 body: . %empty  [KW_ELSE, KW_FI]
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   39        | KW_IF expr KW_THEN . body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   40        | KW_IF expr KW_THEN . body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 172
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 167

    2 body: . %empty  [KW_POOL]
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   41           | KW_WHILE expr KW_LOOP . body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 173
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 168

   52 printf_func: WRITESTRING_FUNC '(' string . ')' ';'

    ')'  shift, and go to state 174


State 169

   53 printf_func: "teaclib.h" '(' expr . ')' ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ')'            shift, and go to state 175


State 170

   54 printf_func: WRITEREAL_FUNC '(' expr . ')' ';'
   74 expr: expr . '+' expr
   75     | expr . '-' expr
   76     | expr . '*' expr
   77     | expr . '/' expr
   78     | expr . '%' expr
   79     | expr . EQUAL_OP expr
   80     | expr . NOT_EQUAL_OP expr
   81     | expr . LESS_OP expr
   82     | expr . LESS_EQUAL_OP expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr

    KW_AND         shift, and go to state 59
    KW_OR          shift, and go to state 60
    NOT_EQUAL_OP   shift, and go to state 61
    LESS_OP        shift, and go to state 62
    LESS_EQUAL_OP  shift, and go to state 63
    EQUAL_OP       shift, and go to state 64
    '-'            shift, and go to state 65
    '+'            shift, and go to state 66
    '*'            shift, and go to state 67
    '/'            shift, and go to state 68
    '%'            shift, and go to state 69
    ')'            shift, and go to state 176


State 171

   27 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 27 (func_decl)


State 172

   39 if_stmt: KW_IF expr KW_THEN body . KW_ELSE body KW_FI ';'
   40        | KW_IF expr KW_THEN body . KW_FI ';'

    KW_ELSE  shift, and go to state 177
    KW_FI    shift, and go to state 178


State 173

   41 while_loop: KW_WHILE expr KW_LOOP body . KW_POOL ';'

    KW_POOL  shift, and go to state 179


State 174

   52 printf_func: WRITESTRING_FUNC '(' string ')' . ';'

    ';'  shift, and go to state 180


State 175

   53 printf_func: "teaclib.h" '(' expr ')' . ';'

    ';'  shift, and go to state 181


State 176

   54 printf_func: WRITEREAL_FUNC '(' expr ')' . ';'

    ';'  shift, and go to state 182


State 177

    2 body: . %empty  [KW_FI]
    3     | . more
    4 more: . while_loop
    5     | . if_stmt
    6     | . decl_list1
    7     | . printf_func
    8     | . more while_loop
    9     | . more if_stmt
   10     | . more decl_list1
   11     | . more printf_func
   12 decl_list1: . cmd_line
   13           | . comment
   14           | . decl
   21 decl: . KW_LET decl_body_part
   22     | . KW_CONST decl_body_part_c
   23     | . KW_CONST func_decl
   36 ident_form_part: . IDENTIFIER
   37                | . IDENTIFIER '[' ']'
   38                | . IDENTIFIER '[' expr ']'
   39 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   39        | KW_IF expr KW_THEN body KW_ELSE . body KW_FI ';'
   40        | . KW_IF expr KW_THEN body KW_FI ';'
   41 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   52 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   53            | . "teaclib.h" '(' expr ')' ';'
   54            | . WRITEREAL_FUNC '(' expr ')' ';'
   55 function_call: . IDENTIFIER '(' func_parameters ')'
   56              | . READSTRING_FUNC '(' ')'
   57              | . READINT_FUNC '(' ')'
   58              | . READREAL_FUNC '(' ')'
   59 cmd_line: . function_call ';'
   60         | . ident_form_part ASSIGN expr ';'
   61         | . KW_RETURN expr ';'
   62 comment: . LINE_COMMENT
   63        | . MLINE_COMMENT

    KW_IF             shift, and go to state 138
    KW_WHILE          shift, and go to state 139
    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 140
    "teaclib.h"       shift, and go to state 141
    WRITEREAL_FUNC    shift, and go to state 142

    $default  reduce using rule 2 (body)

    body             go to state 183
    more             go to state 144
    decl_list1       go to state 145
    decl             go to state 146
    ident_form_part  go to state 13
    if_stmt          go to state 147
    while_loop       go to state 148
    printf_func      go to state 149
    function_call    go to state 14
    cmd_line         go to state 150
    comment          go to state 151


State 178

   40 if_stmt: KW_IF expr KW_THEN body KW_FI . ';'

    ';'  shift, and go to state 184


State 179

   41 while_loop: KW_WHILE expr KW_LOOP body KW_POOL . ';'

    ';'  shift, and go to state 185


State 180

   52 printf_func: WRITESTRING_FUNC '(' string ')' ';' .

    $default  reduce using rule 52 (printf_func)


State 181

   53 printf_func: "teaclib.h" '(' expr ')' ';' .

    $default  reduce using rule 53 (printf_func)


State 182

   54 printf_func: WRITEREAL_FUNC '(' expr ')' ';' .

    $default  reduce using rule 54 (printf_func)


State 183

   39 if_stmt: KW_IF expr KW_THEN body KW_ELSE body . KW_FI ';'

    KW_FI  shift, and go to state 186


State 184

   40 if_stmt: KW_IF expr KW_THEN body KW_FI ';' .

    $default  reduce using rule 40 (if_stmt)


State 185

   41 while_loop: KW_WHILE expr KW_LOOP body KW_POOL ';' .

    $default  reduce using rule 41 (while_loop)


State 186

   39 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI . ';'

    ';'  shift, and go to state 187


State 187

   39 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI ';' .

    $default  reduce using rule 39 (if_stmt)
