Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_RETURN
   STRING


Grammar

    0 $accept: input $end

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    2 body: %empty
    3     | decl_list

    4 decl_list: cmd_line
    5          | decl
    6          | decl_list decl
    7          | decl_list cmd_line

    8 decl: KW_LET decl_body_part
    9     | KW_CONST decl_body_part_c
   10     | KW_CONST func_decl

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   13          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'

   15 decl_body_part: decl_form ':' data_type ';'

   16 decl_body_part_c: decl_form_c ':' data_type ';'

   17 decl_form_c: ident_form_part ASSIGN expr
   18            | decl_form_c ',' ident_form_part ASSIGN expr

   19 decl_form: decl_assign
   20          | decl_form ',' decl_assign

   21 decl_assign: ident_form_part
   22            | ident_form_part ASSIGN expr

   23 ident_form_part: IDENTIFIER
   24                | IDENTIFIER '[' ']'
   25                | IDENTIFIER '[' expr ']'

   26 func_parameters: %empty
   27                | expr
   28                | func_parameters ',' expr

   29 func_parameters_decl: %empty
   30                     | ident_form_part ':' data_type
   31                     | func_parameters_decl ',' ident_form_part ':' data_type

   32 data_type: KW_INT
   33          | KW_BOOL
   34          | KW_REAL
   35          | KW_STRING

   36 function_call: IDENTIFIER '(' func_parameters ')'

   37 cmd_line: ident_form_part ASSIGN expr ';'

   38 expr: function_call
   39     | ident_form_part
   40     | '+' expr
   41     | '-' expr
   42     | KW_NOT expr
   43     | POSINT
   44     | REAL
   45     | '(' expr ')'
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '%' expr
   51     | expr EQUAL_OP expr
   52     | expr NOT_EQUAL_OP expr
   53     | expr LESS_OP expr
   54     | expr LESS_EQUAL_OP expr
   55     | expr KW_AND expr
   56     | expr KW_OR expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 50
'(' (40) 1 11 12 13 14 36 45
')' (41) 1 11 12 13 14 36 45
'*' (42) 48
'+' (43) 40 46
',' (44) 18 20 28 31
'-' (45) 41 47
'/' (47) 49
':' (58) 1 11 12 13 14 15 16 30 31
';' (59) 12 13 15 16 37
'[' (91) 13 14 24 25
']' (93) 13 14 24 25
'{' (123) 1 11 14
'}' (125) 1 11 14
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 1 32
KW_REAL (261) 34
KW_BOOL (262) 33
KW_STRING (263) 35
KW_ELSE (264)
KW_IF (265)
KW_THEN (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271) 1 9 10
KW_LET (272) 8
KW_RETURN (273)
KW_NOT (274) 42
KW_AND (275) 55
KW_OR (276) 56
NOT_EQUAL_OP (277) 52
LESS_OP (278) 53
LESS_EQUAL_OP (279) 54
FUNC_START_ARROW (280) 1 11 14
KW_START (281) 1
IDENTIFIER (282) 23 24 25 36
POSINT (283) 43
STRING (284)
REAL (285) 44
ASSIGN (286) 1 11 12 13 14 17 18 22 37
EQUAL_OP (287) 51


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
input (48)
    on left: 1, on right: 0
body (49)
    on left: 2 3, on right: 1
decl_list (50)
    on left: 4 5 6 7, on right: 1 3 6 7
decl (51)
    on left: 8 9 10, on right: 5 6
func_decl (52)
    on left: 11 12 13 14, on right: 10
decl_body_part (53)
    on left: 15, on right: 8
decl_body_part_c (54)
    on left: 16, on right: 9
decl_form_c (55)
    on left: 17 18, on right: 16 18
decl_form (56)
    on left: 19 20, on right: 15 20
decl_assign (57)
    on left: 21 22, on right: 19 20
ident_form_part (58)
    on left: 23 24 25, on right: 11 12 13 14 17 18 21 22 30 31 37 39
func_parameters (59)
    on left: 26 27 28, on right: 28 36
func_parameters_decl (60)
    on left: 29 30 31, on right: 11 12 13 14 31
data_type (61)
    on left: 32 33 34 35, on right: 11 12 13 14 15 16 30 31
function_call (62)
    on left: 36, on right: 38
cmd_line (63)
    on left: 37, on right: 4 7
expr (64)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56, on right: 17 18 22 25 27 28 37 40 41 42 45 46 47 48 49 50 51
    52 53 54 55 56


State 0

    0 $accept: . input $end
    1 input: . decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    4 decl_list: . cmd_line
    5          | . decl
    6          | . decl_list decl
    7          | . decl_list cmd_line
    8 decl: . KW_LET decl_body_part
    9     | . KW_CONST decl_body_part_c
   10     | . KW_CONST func_decl
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   37 cmd_line: . ident_form_part ASSIGN expr ';'

    KW_CONST    shift, and go to state 1
    KW_LET      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    input            go to state 4
    decl_list        go to state 5
    decl             go to state 6
    ident_form_part  go to state 7
    cmd_line         go to state 8


State 1

    9 decl: KW_CONST . decl_body_part_c
   10     | KW_CONST . func_decl
   11 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   13          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   16 decl_body_part_c: . decl_form_c ':' data_type ';'
   17 decl_form_c: . ident_form_part ASSIGN expr
   18            | . decl_form_c ',' ident_form_part ASSIGN expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    func_decl         go to state 9
    decl_body_part_c  go to state 10
    decl_form_c       go to state 11
    ident_form_part   go to state 12


State 2

    8 decl: KW_LET . decl_body_part
   15 decl_body_part: . decl_form ':' data_type ';'
   19 decl_form: . decl_assign
   20          | . decl_form ',' decl_assign
   21 decl_assign: . ident_form_part
   22            | . ident_form_part ASSIGN expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    decl_body_part   go to state 13
    decl_form        go to state 14
    decl_assign      go to state 15
    ident_form_part  go to state 16


State 3

   23 ident_form_part: IDENTIFIER .  [ASSIGN, ':', ',']
   24                | IDENTIFIER . '[' ']'
   25                | IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 17

    $default  reduce using rule 23 (ident_form_part)


State 4

    0 $accept: input . $end

    $end  shift, and go to state 18


State 5

    1 input: decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    6 decl_list: decl_list . decl
    7          | decl_list . cmd_line
    8 decl: . KW_LET decl_body_part
    9     | . KW_CONST decl_body_part_c
   10     | . KW_CONST func_decl
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   37 cmd_line: . ident_form_part ASSIGN expr ';'

    KW_CONST    shift, and go to state 19
    KW_LET      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    decl             go to state 20
    ident_form_part  go to state 7
    cmd_line         go to state 21


State 6

    5 decl_list: decl .

    $default  reduce using rule 5 (decl_list)


State 7

   37 cmd_line: ident_form_part . ASSIGN expr ';'

    ASSIGN  shift, and go to state 22


State 8

    4 decl_list: cmd_line .

    $default  reduce using rule 4 (decl_list)


State 9

   10 decl: KW_CONST func_decl .

    $default  reduce using rule 10 (decl)


State 10

    9 decl: KW_CONST decl_body_part_c .

    $default  reduce using rule 9 (decl)


State 11

   16 decl_body_part_c: decl_form_c . ':' data_type ';'
   18 decl_form_c: decl_form_c . ',' ident_form_part ASSIGN expr

    ':'  shift, and go to state 23
    ','  shift, and go to state 24


State 12

   11 func_decl: ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   13          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   17 decl_form_c: ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 25


State 13

    8 decl: KW_LET decl_body_part .

    $default  reduce using rule 8 (decl)


State 14

   15 decl_body_part: decl_form . ':' data_type ';'
   20 decl_form: decl_form . ',' decl_assign

    ':'  shift, and go to state 26
    ','  shift, and go to state 27


State 15

   19 decl_form: decl_assign .

    $default  reduce using rule 19 (decl_form)


State 16

   21 decl_assign: ident_form_part .  [':', ',']
   22            | ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 28

    $default  reduce using rule 21 (decl_assign)


State 17

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   24                | IDENTIFIER '[' . ']'
   25                | . IDENTIFIER '[' expr ']'
   25                | IDENTIFIER '[' . expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35
    ']'         shift, and go to state 36

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 39


State 18

    0 $accept: input $end .

    $default  accept


State 19

    1 input: decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    9 decl: KW_CONST . decl_body_part_c
   10     | KW_CONST . func_decl
   11 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   13          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   16 decl_body_part_c: . decl_form_c ':' data_type ';'
   17 decl_form_c: . ident_form_part ASSIGN expr
   18            | . decl_form_c ',' ident_form_part ASSIGN expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'

    KW_START    shift, and go to state 40
    IDENTIFIER  shift, and go to state 3

    func_decl         go to state 9
    decl_body_part_c  go to state 10
    decl_form_c       go to state 11
    ident_form_part   go to state 12


State 20

    6 decl_list: decl_list decl .

    $default  reduce using rule 6 (decl_list)


State 21

    7 decl_list: decl_list cmd_line .

    $default  reduce using rule 7 (decl_list)


State 22

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   37 cmd_line: ident_form_part ASSIGN . expr ';'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 41


State 23

   16 decl_body_part_c: decl_form_c ':' . data_type ';'
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45

    data_type  go to state 46


State 24

   18 decl_form_c: decl_form_c ',' . ident_form_part ASSIGN expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    ident_form_part  go to state 47


State 25

   11 func_decl: ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type ';'
   13          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   17 decl_form_c: ident_form_part ASSIGN . expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 48

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 49


State 26

   15 decl_body_part: decl_form ':' . data_type ';'
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45

    data_type  go to state 50


State 27

   20 decl_form: decl_form ',' . decl_assign
   21 decl_assign: . ident_form_part
   22            | . ident_form_part ASSIGN expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    decl_assign      go to state 51
    ident_form_part  go to state 16


State 28

   22 decl_assign: ident_form_part ASSIGN . expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 52


State 29

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   42     | KW_NOT . expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 53


State 30

   23 ident_form_part: IDENTIFIER .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   24                | IDENTIFIER . '[' ']'
   25                | IDENTIFIER . '[' expr ']'
   36 function_call: IDENTIFIER . '(' func_parameters ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 17

    $default  reduce using rule 23 (ident_form_part)


State 31

   43 expr: POSINT .

    $default  reduce using rule 43 (expr)


State 32

   44 expr: REAL .

    $default  reduce using rule 44 (expr)


State 33

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   41     | '-' . expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 55


State 34

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   40     | '+' . expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 56


State 35

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   45     | '(' . expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 57


State 36

   24 ident_form_part: IDENTIFIER '[' ']' .

    $default  reduce using rule 24 (ident_form_part)


State 37

   39 expr: ident_form_part .

    $default  reduce using rule 39 (expr)


State 38

   38 expr: function_call .

    $default  reduce using rule 38 (expr)


State 39

   25 ident_form_part: IDENTIFIER '[' expr . ']'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68
    ']'            shift, and go to state 69


State 40

    1 input: decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 70


State 41

   37 cmd_line: ident_form_part ASSIGN expr . ';'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68
    ';'            shift, and go to state 71


State 42

   32 data_type: KW_INT .

    $default  reduce using rule 32 (data_type)


State 43

   34 data_type: KW_REAL .

    $default  reduce using rule 34 (data_type)


State 44

   33 data_type: KW_BOOL .

    $default  reduce using rule 33 (data_type)


State 45

   35 data_type: KW_STRING .

    $default  reduce using rule 35 (data_type)


State 46

   16 decl_body_part_c: decl_form_c ':' data_type . ';'

    ';'  shift, and go to state 72


State 47

   18 decl_form_c: decl_form_c ',' ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 73


State 48

   11 func_decl: ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type ';'
   13          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type ';'
   14          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   29 func_parameters_decl: . %empty  [')', ',']
   30                     | . ident_form_part ':' data_type
   31                     | . func_parameters_decl ',' ident_form_part ':' data_type
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   45     | '(' . expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    $default  reduce using rule 29 (func_parameters_decl)

    ident_form_part       go to state 74
    func_parameters_decl  go to state 75
    function_call         go to state 38
    expr                  go to state 57


State 49

   17 decl_form_c: ident_form_part ASSIGN expr .  [':', ',']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 17 (decl_form_c)


State 50

   15 decl_body_part: decl_form ':' data_type . ';'

    ';'  shift, and go to state 76


State 51

   20 decl_form: decl_form ',' decl_assign .

    $default  reduce using rule 20 (decl_form)


State 52

   22 decl_assign: ident_form_part ASSIGN expr .  [':', ',']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 22 (decl_assign)


State 53

   42 expr: KW_NOT expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 42 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < KW_NOT).
    Conflict between rule 42 and token LESS_OP resolved as reduce (LESS_OP < KW_NOT).
    Conflict between rule 42 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < KW_NOT).
    Conflict between rule 42 and token EQUAL_OP resolved as reduce (EQUAL_OP < KW_NOT).
    Conflict between rule 42 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 42 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 42 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 42 and token '%' resolved as reduce ('%' < KW_NOT).


State 54

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   26 func_parameters: . %empty  [')', ',']
   27                | . expr
   28                | . func_parameters ',' expr
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   36              | IDENTIFIER '(' . func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    $default  reduce using rule 26 (func_parameters)

    ident_form_part  go to state 37
    func_parameters  go to state 77
    function_call    go to state 38
    expr             go to state 78


State 55

   41 expr: '-' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 41 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 41 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 41 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 41 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('-' < '%').


State 56

   40 expr: '+' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 40 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 40 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 40 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 40 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('+' < '%').


State 57

   45 expr: '(' expr . ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68
    ')'            shift, and go to state 79


State 58

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   55     | expr KW_AND . expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 80


State 59

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr
   56     | expr KW_OR . expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 81


State 60

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   52     | expr NOT_EQUAL_OP . expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 82


State 61

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   53     | expr LESS_OP . expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 83


State 62

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   54     | expr LESS_EQUAL_OP . expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 84


State 63

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   51     | expr EQUAL_OP . expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 85


State 64

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   47     | expr '-' . expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 86


State 65

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   46     | expr '+' . expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 87


State 66

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   48     | expr '*' . expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 88


State 67

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   49     | expr '/' . expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 89


State 68

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   50     | expr '%' . expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 90


State 69

   25 ident_form_part: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 25 (ident_form_part)


State 70

    1 input: decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 91


State 71

   37 cmd_line: ident_form_part ASSIGN expr ';' .

    $default  reduce using rule 37 (cmd_line)


State 72

   16 decl_body_part_c: decl_form_c ':' data_type ';' .

    $default  reduce using rule 16 (decl_body_part_c)


State 73

   18 decl_form_c: decl_form_c ',' ident_form_part ASSIGN . expr
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 92


State 74

   30 func_parameters_decl: ident_form_part . ':' data_type
   39 expr: ident_form_part .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')']

    ':'  shift, and go to state 93

    $default  reduce using rule 39 (expr)


State 75

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type ';'
   13          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   31 func_parameters_decl: func_parameters_decl . ',' ident_form_part ':' data_type

    ')'  shift, and go to state 94
    ','  shift, and go to state 95


State 76

   15 decl_body_part: decl_form ':' data_type ';' .

    $default  reduce using rule 15 (decl_body_part)


State 77

   28 func_parameters: func_parameters . ',' expr
   36 function_call: IDENTIFIER '(' func_parameters . ')'

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


State 78

   27 func_parameters: expr .  [')', ',']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 27 (func_parameters)


State 79

   45 expr: '(' expr ')' .

    $default  reduce using rule 45 (expr)


State 80

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   55     | expr KW_AND expr .  [KW_AND, ')', ':', ';', ']', ',']
   56     | expr . KW_OR expr

    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 55 (expr)

    Conflict between rule 55 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 55 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 55 and token NOT_EQUAL_OP resolved as shift (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 55 and token LESS_OP resolved as shift (KW_AND < LESS_OP).
    Conflict between rule 55 and token LESS_EQUAL_OP resolved as shift (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 55 and token EQUAL_OP resolved as shift (KW_AND < EQUAL_OP).
    Conflict between rule 55 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 55 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 55 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 55 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 55 and token '%' resolved as shift (KW_AND < '%').


State 81

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr
   56     | expr KW_OR expr .  [KW_AND, KW_OR, ')', ':', ';', ']', ',']

    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 56 (expr)

    Conflict between rule 56 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 56 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 56 and token NOT_EQUAL_OP resolved as shift (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 56 and token LESS_OP resolved as shift (KW_OR < LESS_OP).
    Conflict between rule 56 and token LESS_EQUAL_OP resolved as shift (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 56 and token EQUAL_OP resolved as shift (KW_OR < EQUAL_OP).
    Conflict between rule 56 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 56 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 56 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 56 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 56 and token '%' resolved as shift (KW_OR < '%').


State 82

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   52     | expr NOT_EQUAL_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 52 and token NOT_EQUAL_OP resolved as reduce (%left NOT_EQUAL_OP).
    Conflict between rule 52 and token LESS_OP resolved as shift (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 52 and token LESS_EQUAL_OP resolved as shift (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 52 and token EQUAL_OP resolved as reduce (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 52 and token '-' resolved as shift (NOT_EQUAL_OP < '-').
    Conflict between rule 52 and token '+' resolved as shift (NOT_EQUAL_OP < '+').
    Conflict between rule 52 and token '*' resolved as shift (NOT_EQUAL_OP < '*').
    Conflict between rule 52 and token '/' resolved as shift (NOT_EQUAL_OP < '/').
    Conflict between rule 52 and token '%' resolved as shift (NOT_EQUAL_OP < '%').


State 83

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   53     | expr LESS_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    LESS_EQUAL_OP  shift, and go to state 62
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < LESS_OP).
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < LESS_OP).
    Conflict between rule 53 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 53 and token LESS_OP resolved as reduce (%left LESS_OP).
    Conflict between rule 53 and token LESS_EQUAL_OP resolved as shift (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 53 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_OP).
    Conflict between rule 53 and token '-' resolved as shift (LESS_OP < '-').
    Conflict between rule 53 and token '+' resolved as shift (LESS_OP < '+').
    Conflict between rule 53 and token '*' resolved as shift (LESS_OP < '*').
    Conflict between rule 53 and token '/' resolved as shift (LESS_OP < '/').
    Conflict between rule 53 and token '%' resolved as shift (LESS_OP < '%').


State 84

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   54     | expr LESS_EQUAL_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 54 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 54 and token LESS_OP resolved as reduce (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 54 and token LESS_EQUAL_OP resolved as reduce (%left LESS_EQUAL_OP).
    Conflict between rule 54 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 54 and token '-' resolved as shift (LESS_EQUAL_OP < '-').
    Conflict between rule 54 and token '+' resolved as shift (LESS_EQUAL_OP < '+').
    Conflict between rule 54 and token '*' resolved as shift (LESS_EQUAL_OP < '*').
    Conflict between rule 54 and token '/' resolved as shift (LESS_EQUAL_OP < '/').
    Conflict between rule 54 and token '%' resolved as shift (LESS_EQUAL_OP < '%').


State 85

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   51     | expr EQUAL_OP expr .  [KW_AND, KW_OR, EQUAL_OP, ')', ':', ';', ']', ',']
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < EQUAL_OP).
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < EQUAL_OP).
    Conflict between rule 51 and token NOT_EQUAL_OP resolved as shift (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 51 and token LESS_OP resolved as shift (EQUAL_OP < LESS_OP).
    Conflict between rule 51 and token LESS_EQUAL_OP resolved as shift (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 51 and token EQUAL_OP resolved as reduce (%left EQUAL_OP).
    Conflict between rule 51 and token '-' resolved as shift (EQUAL_OP < '-').
    Conflict between rule 51 and token '+' resolved as shift (EQUAL_OP < '+').
    Conflict between rule 51 and token '*' resolved as shift (EQUAL_OP < '*').
    Conflict between rule 51 and token '/' resolved as shift (EQUAL_OP < '/').
    Conflict between rule 51 and token '%' resolved as shift (EQUAL_OP < '%').


State 86

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 47 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 47 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 47 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 47 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 47 and token '-' resolved as reduce (%left '-').
    Conflict between rule 47 and token '+' resolved as reduce (%left '+').
    Conflict between rule 47 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 47 and token '%' resolved as shift ('-' < '%').


State 87

   46 expr: expr . '+' expr
   46     | expr '+' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 46 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 46 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 46 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 46 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 46 and token '-' resolved as reduce (%left '-').
    Conflict between rule 46 and token '+' resolved as reduce (%left '+').
    Conflict between rule 46 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('+' < '%').


State 88

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 48 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '*').
    Conflict between rule 48 and token LESS_OP resolved as reduce (LESS_OP < '*').
    Conflict between rule 48 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '*').
    Conflict between rule 48 and token EQUAL_OP resolved as reduce (EQUAL_OP < '*').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 48 and token '*' resolved as reduce (%left '*').
    Conflict between rule 48 and token '/' resolved as reduce (%left '/').
    Conflict between rule 48 and token '%' resolved as reduce (%left '%').


State 89

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 49 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '/').
    Conflict between rule 49 and token LESS_OP resolved as reduce (LESS_OP < '/').
    Conflict between rule 49 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '/').
    Conflict between rule 49 and token EQUAL_OP resolved as reduce (EQUAL_OP < '/').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').


State 90

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   50     | expr '%' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 50 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '%').
    Conflict between rule 50 and token LESS_OP resolved as reduce (LESS_OP < '%').
    Conflict between rule 50 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '%').
    Conflict between rule 50 and token EQUAL_OP resolved as reduce (EQUAL_OP < '%').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').


State 91

    1 input: decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 98


State 92

   18 decl_form_c: decl_form_c ',' ident_form_part ASSIGN expr .  [':', ',']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 18 (decl_form_c)


State 93

   30 func_parameters_decl: ident_form_part ':' . data_type
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45

    data_type  go to state 99


State 94

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type ';'
   13          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type FUNC_START_ARROW '{' '}'

    ':'  shift, and go to state 100


State 95

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   31 func_parameters_decl: func_parameters_decl ',' . ident_form_part ':' data_type

    IDENTIFIER  shift, and go to state 3

    ident_form_part  go to state 101


State 96

   36 function_call: IDENTIFIER '(' func_parameters ')' .

    $default  reduce using rule 36 (function_call)


State 97

   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   28 func_parameters: func_parameters ',' . expr
   36 function_call: . IDENTIFIER '(' func_parameters ')'
   38 expr: . function_call
   39     | . ident_form_part
   40     | . '+' expr
   41     | . '-' expr
   42     | . KW_NOT expr
   43     | . POSINT
   44     | . REAL
   45     | . '(' expr ')'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr EQUAL_OP expr
   52     | . expr NOT_EQUAL_OP expr
   53     | . expr LESS_OP expr
   54     | . expr LESS_EQUAL_OP expr
   55     | . expr KW_AND expr
   56     | . expr KW_OR expr

    KW_NOT      shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    POSINT      shift, and go to state 31
    REAL        shift, and go to state 32
    '-'         shift, and go to state 33
    '+'         shift, and go to state 34
    '('         shift, and go to state 35

    ident_form_part  go to state 37
    function_call    go to state 38
    expr             go to state 102


State 98

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 103


State 99

   30 func_parameters_decl: ident_form_part ':' data_type .

    $default  reduce using rule 30 (func_parameters_decl)


State 100

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type ';'
   13          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type FUNC_START_ARROW '{' '}'
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45
    '['        shift, and go to state 104

    data_type  go to state 105


State 101

   31 func_parameters_decl: func_parameters_decl ',' ident_form_part . ':' data_type

    ':'  shift, and go to state 106


State 102

   28 func_parameters: func_parameters ',' expr .  [')', ',']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . EQUAL_OP expr
   52     | expr . NOT_EQUAL_OP expr
   53     | expr . LESS_OP expr
   54     | expr . LESS_EQUAL_OP expr
   55     | expr . KW_AND expr
   56     | expr . KW_OR expr

    KW_AND         shift, and go to state 58
    KW_OR          shift, and go to state 59
    NOT_EQUAL_OP   shift, and go to state 60
    LESS_OP        shift, and go to state 61
    LESS_EQUAL_OP  shift, and go to state 62
    EQUAL_OP       shift, and go to state 63
    '-'            shift, and go to state 64
    '+'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67
    '%'            shift, and go to state 68

    $default  reduce using rule 28 (func_parameters)


State 103

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 107


State 104

   13 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type FUNC_START_ARROW '{' '}'

    ']'  shift, and go to state 108


State 105

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . FUNC_START_ARROW '{' '}'
   12          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . ';'

    FUNC_START_ARROW  shift, and go to state 109
    ';'               shift, and go to state 110


State 106

   31 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' . data_type
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45

    data_type  go to state 111


State 107

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 112


State 108

   13 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type FUNC_START_ARROW '{' '}'
   32 data_type: . KW_INT
   33          | . KW_BOOL
   34          | . KW_REAL
   35          | . KW_STRING

    KW_INT     shift, and go to state 42
    KW_REAL    shift, and go to state 43
    KW_BOOL    shift, and go to state 44
    KW_STRING  shift, and go to state 45

    data_type  go to state 113


State 109

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW . '{' '}'

    '{'  shift, and go to state 114


State 110

   12 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';' .

    $default  reduce using rule 12 (func_decl)


State 111

   31 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' data_type .

    $default  reduce using rule 31 (func_parameters_decl)


State 112

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 115


State 113

   13 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . ';'
   14          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . FUNC_START_ARROW '{' '}'

    FUNC_START_ARROW  shift, and go to state 116
    ';'               shift, and go to state 117


State 114

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' . '}'

    '}'  shift, and go to state 118


State 115

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    2 body: . %empty  ['}']
    3     | . decl_list
    4 decl_list: . cmd_line
    5          | . decl
    6          | . decl_list decl
    7          | . decl_list cmd_line
    8 decl: . KW_LET decl_body_part
    9     | . KW_CONST decl_body_part_c
   10     | . KW_CONST func_decl
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   37 cmd_line: . ident_form_part ASSIGN expr ';'

    KW_CONST    shift, and go to state 1
    KW_LET      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 2 (body)

    body             go to state 119
    decl_list        go to state 120
    decl             go to state 6
    ident_form_part  go to state 7
    cmd_line         go to state 8


State 116

   14 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW . '{' '}'

    '{'  shift, and go to state 121


State 117

   13 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';' .

    $default  reduce using rule 13 (func_decl)


State 118

   11 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' '}' .

    $default  reduce using rule 11 (func_decl)


State 119

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 122


State 120

    3 body: decl_list .  ['}']
    6 decl_list: decl_list . decl
    7          | decl_list . cmd_line
    8 decl: . KW_LET decl_body_part
    9     | . KW_CONST decl_body_part_c
   10     | . KW_CONST func_decl
   23 ident_form_part: . IDENTIFIER
   24                | . IDENTIFIER '[' ']'
   25                | . IDENTIFIER '[' expr ']'
   37 cmd_line: . ident_form_part ASSIGN expr ';'

    KW_CONST    shift, and go to state 1
    KW_LET      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 3 (body)

    decl             go to state 20
    ident_form_part  go to state 7
    cmd_line         go to state 21


State 121

   14 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' . '}'

    '}'  shift, and go to state 123


State 122

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 1 (input)


State 123

   14 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}' .

    $default  reduce using rule 14 (func_decl)
