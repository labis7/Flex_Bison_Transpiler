Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_RETURN


Grammar

    0 $accept: input $end

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    2 body: %empty
    3     | more

    4 more: decl_list1
    5     | printf_func
    6     | more decl_list1
    7     | more printf_func

    8 decl_list1: cmd_line
    9           | comment
   10           | decl

   11 decl_list: cmd_line
   12          | comment
   13          | decl
   14          | decl_list decl
   15          | decl_list cmd_line
   16          | decl_list comment

   17 decl: KW_LET decl_body_part
   18     | KW_CONST decl_body_part_c
   19     | KW_CONST func_decl

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   22          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'

   24 decl_body_part: decl_form ':' data_type ';'

   25 decl_body_part_c: decl_form_c ':' data_type ';'

   26 decl_form_c: ident_form_part ASSIGN expr
   27            | decl_form_c ',' ident_form_part ASSIGN expr

   28 decl_form: decl_assign
   29          | decl_form ',' decl_assign

   30 decl_assign: ident_form_part
   31            | ident_form_part ASSIGN expr

   32 ident_form_part: IDENTIFIER
   33                | IDENTIFIER '[' ']'
   34                | IDENTIFIER '[' expr ']'

   35 func_parameters: %empty
   36                | expr
   37                | func_parameters ',' expr

   38 func_parameters_decl: %empty
   39                     | ident_form_part ':' data_type
   40                     | func_parameters_decl ',' ident_form_part ':' data_type

   41 data_type: KW_INT
   42          | KW_BOOL
   43          | KW_REAL
   44          | KW_STRING

   45 printf_func: WRITESTRING_FUNC '(' string ')' ';'
   46            | WRITEINT_FUNC '(' expr ')' ';'
   47            | WRITEREAL_FUNC '(' expr ')' ';'

   48 function_call: IDENTIFIER '(' func_parameters ')'
   49              | READSTRING_FUNC '(' ')'
   50              | READINT_FUNC '(' ')'
   51              | READREAL_FUNC '(' ')'

   52 cmd_line: ident_form_part ASSIGN expr ';'

   53 comment: LINE_COMMENT
   54        | MLINE_COMMENT

   55 string: STRING

   56 expr: string
   57     | function_call
   58     | ident_form_part
   59     | '+' expr
   60     | '-' expr
   61     | KW_NOT expr
   62     | POSINT
   63     | REAL
   64     | '(' expr ')'
   65     | expr '+' expr
   66     | expr '-' expr
   67     | expr '*' expr
   68     | expr '/' expr
   69     | expr '%' expr
   70     | expr EQUAL_OP expr
   71     | expr NOT_EQUAL_OP expr
   72     | expr LESS_OP expr
   73     | expr LESS_EQUAL_OP expr
   74     | expr KW_AND expr
   75     | expr KW_OR expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 69
'(' (40) 1 20 21 22 23 45 46 47 48 49 50 51 64
')' (41) 1 20 21 22 23 45 46 47 48 49 50 51 64
'*' (42) 67
'+' (43) 59 65
',' (44) 27 29 37 40
'-' (45) 60 66
'/' (47) 68
':' (58) 1 20 21 22 23 24 25 39 40
';' (59) 21 22 24 25 45 46 47 52
'[' (91) 22 23 33 34
']' (93) 22 23 33 34
'{' (123) 1 20 23
'}' (125) 1 20 23
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 1 41
KW_REAL (261) 43
KW_BOOL (262) 42
KW_STRING (263) 44
KW_ELSE (264)
KW_IF (265)
KW_THEN (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271) 1 18 19
KW_LET (272) 17
KW_RETURN (273)
KW_NOT (274) 61
KW_AND (275) 74
KW_OR (276) 75
NOT_EQUAL_OP (277) 71
LESS_OP (278) 72
LESS_EQUAL_OP (279) 73
FUNC_START_ARROW (280) 1 20 23
KW_START (281) 1
IDENTIFIER (282) 32 33 34 48
POSINT (283) 62
STRING (284) 55
REAL (285) 63
ASSIGN (286) 1 20 21 22 23 26 27 31 52
LINE_COMMENT (287) 53
MLINE_COMMENT (288) 54
READSTRING_FUNC (289) 49
READINT_FUNC (290) 50
READREAL_FUNC (291) 51
WRITESTRING_FUNC (292) 45
WRITEINT_FUNC (293) 46
WRITEREAL_FUNC (294) 47
EQUAL_OP (295) 70


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1, on right: 0
body (57)
    on left: 2 3, on right: 1 20 23
more (58)
    on left: 4 5 6 7, on right: 3 6 7
decl_list1 (59)
    on left: 8 9 10, on right: 4 6
decl_list (60)
    on left: 11 12 13 14 15 16, on right: 1 14 15 16
decl (61)
    on left: 17 18 19, on right: 10 13 14
func_decl (62)
    on left: 20 21 22 23, on right: 19
decl_body_part (63)
    on left: 24, on right: 17
decl_body_part_c (64)
    on left: 25, on right: 18
decl_form_c (65)
    on left: 26 27, on right: 25 27
decl_form (66)
    on left: 28 29, on right: 24 29
decl_assign (67)
    on left: 30 31, on right: 28 29
ident_form_part (68)
    on left: 32 33 34, on right: 20 21 22 23 26 27 30 31 39 40 52 58
func_parameters (69)
    on left: 35 36 37, on right: 37 48
func_parameters_decl (70)
    on left: 38 39 40, on right: 20 21 22 23 40
data_type (71)
    on left: 41 42 43 44, on right: 20 21 22 23 24 25 39 40
printf_func (72)
    on left: 45 46 47, on right: 5 7
function_call (73)
    on left: 48 49 50 51, on right: 57
cmd_line (74)
    on left: 52, on right: 8 11 15
comment (75)
    on left: 53 54, on right: 9 12 16
string (76)
    on left: 55, on right: 45 56
expr (77)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74 75, on right: 26 27 31 34 36 37 46 47 52 59 60 61 64 65 66 67
    68 69 70 71 72 73 74 75


State 0

    0 $accept: . input $end
    1 input: . decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   11 decl_list: . cmd_line
   12          | . comment
   13          | . decl
   14          | . decl_list decl
   15          | . decl_list cmd_line
   16          | . decl_list comment
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST       shift, and go to state 1
    KW_LET         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    LINE_COMMENT   shift, and go to state 4
    MLINE_COMMENT  shift, and go to state 5

    input            go to state 6
    decl_list        go to state 7
    decl             go to state 8
    ident_form_part  go to state 9
    cmd_line         go to state 10
    comment          go to state 11


State 1

   18 decl: KW_CONST . decl_body_part_c
   19     | KW_CONST . func_decl
   20 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   22          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   25 decl_body_part_c: . decl_form_c ':' data_type ';'
   26 decl_form_c: . ident_form_part ASSIGN expr
   27            | . decl_form_c ',' ident_form_part ASSIGN expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    func_decl         go to state 12
    decl_body_part_c  go to state 13
    decl_form_c       go to state 14
    ident_form_part   go to state 15


State 2

   17 decl: KW_LET . decl_body_part
   24 decl_body_part: . decl_form ':' data_type ';'
   28 decl_form: . decl_assign
   29          | . decl_form ',' decl_assign
   30 decl_assign: . ident_form_part
   31            | . ident_form_part ASSIGN expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    decl_body_part   go to state 16
    decl_form        go to state 17
    decl_assign      go to state 18
    ident_form_part  go to state 19


State 3

   32 ident_form_part: IDENTIFIER .  [ASSIGN, ':', ',']
   33                | IDENTIFIER . '[' ']'
   34                | IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 20

    $default  reduce using rule 32 (ident_form_part)


State 4

   53 comment: LINE_COMMENT .

    $default  reduce using rule 53 (comment)


State 5

   54 comment: MLINE_COMMENT .

    $default  reduce using rule 54 (comment)


State 6

    0 $accept: input . $end

    $end  shift, and go to state 21


State 7

    1 input: decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   14 decl_list: decl_list . decl
   15          | decl_list . cmd_line
   16          | decl_list . comment
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST       shift, and go to state 22
    KW_LET         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    LINE_COMMENT   shift, and go to state 4
    MLINE_COMMENT  shift, and go to state 5

    decl             go to state 23
    ident_form_part  go to state 9
    cmd_line         go to state 24
    comment          go to state 25


State 8

   13 decl_list: decl .

    $default  reduce using rule 13 (decl_list)


State 9

   52 cmd_line: ident_form_part . ASSIGN expr ';'

    ASSIGN  shift, and go to state 26


State 10

   11 decl_list: cmd_line .

    $default  reduce using rule 11 (decl_list)


State 11

   12 decl_list: comment .

    $default  reduce using rule 12 (decl_list)


State 12

   19 decl: KW_CONST func_decl .

    $default  reduce using rule 19 (decl)


State 13

   18 decl: KW_CONST decl_body_part_c .

    $default  reduce using rule 18 (decl)


State 14

   25 decl_body_part_c: decl_form_c . ':' data_type ';'
   27 decl_form_c: decl_form_c . ',' ident_form_part ASSIGN expr

    ':'  shift, and go to state 27
    ','  shift, and go to state 28


State 15

   20 func_decl: ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   22          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   26 decl_form_c: ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 29


State 16

   17 decl: KW_LET decl_body_part .

    $default  reduce using rule 17 (decl)


State 17

   24 decl_body_part: decl_form . ':' data_type ';'
   29 decl_form: decl_form . ',' decl_assign

    ':'  shift, and go to state 30
    ','  shift, and go to state 31


State 18

   28 decl_form: decl_assign .

    $default  reduce using rule 28 (decl_form)


State 19

   30 decl_assign: ident_form_part .  [':', ',']
   31            | ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 30 (decl_assign)


State 20

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   33                | IDENTIFIER '[' . ']'
   34                | . IDENTIFIER '[' expr ']'
   34                | IDENTIFIER '[' . expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43
    ']'              shift, and go to state 44

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 48


State 21

    0 $accept: input $end .

    $default  accept


State 22

    1 input: decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   18 decl: KW_CONST . decl_body_part_c
   19     | KW_CONST . func_decl
   20 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   22          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   25 decl_body_part_c: . decl_form_c ':' data_type ';'
   26 decl_form_c: . ident_form_part ASSIGN expr
   27            | . decl_form_c ',' ident_form_part ASSIGN expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'

    KW_START    shift, and go to state 49
    IDENTIFIER  shift, and go to state 3

    func_decl         go to state 12
    decl_body_part_c  go to state 13
    decl_form_c       go to state 14
    ident_form_part   go to state 15


State 23

   14 decl_list: decl_list decl .

    $default  reduce using rule 14 (decl_list)


State 24

   15 decl_list: decl_list cmd_line .

    $default  reduce using rule 15 (decl_list)


State 25

   16 decl_list: decl_list comment .

    $default  reduce using rule 16 (decl_list)


State 26

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   52 cmd_line: ident_form_part ASSIGN . expr ';'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 50


State 27

   25 decl_body_part_c: decl_form_c ':' . data_type ';'
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54

    data_type  go to state 55


State 28

   27 decl_form_c: decl_form_c ',' . ident_form_part ASSIGN expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    ident_form_part  go to state 56


State 29

   20 func_decl: ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type ';'
   22          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   26 decl_form_c: ident_form_part ASSIGN . expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 57

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 58


State 30

   24 decl_body_part: decl_form ':' . data_type ';'
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54

    data_type  go to state 59


State 31

   29 decl_form: decl_form ',' . decl_assign
   30 decl_assign: . ident_form_part
   31            | . ident_form_part ASSIGN expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 3

    decl_assign      go to state 60
    ident_form_part  go to state 19


State 32

   31 decl_assign: ident_form_part ASSIGN . expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 61


State 33

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   61     | KW_NOT . expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 62


State 34

   32 ident_form_part: IDENTIFIER .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   33                | IDENTIFIER . '[' ']'
   34                | IDENTIFIER . '[' expr ']'
   48 function_call: IDENTIFIER . '(' func_parameters ')'

    '('  shift, and go to state 63
    '['  shift, and go to state 20

    $default  reduce using rule 32 (ident_form_part)


State 35

   62 expr: POSINT .

    $default  reduce using rule 62 (expr)


State 36

   55 string: STRING .

    $default  reduce using rule 55 (string)


State 37

   63 expr: REAL .

    $default  reduce using rule 63 (expr)


State 38

   49 function_call: READSTRING_FUNC . '(' ')'

    '('  shift, and go to state 64


State 39

   50 function_call: READINT_FUNC . '(' ')'

    '('  shift, and go to state 65


State 40

   51 function_call: READREAL_FUNC . '(' ')'

    '('  shift, and go to state 66


State 41

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   60     | '-' . expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 67


State 42

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   59     | '+' . expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 68


State 43

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   64     | '(' . expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 69


State 44

   33 ident_form_part: IDENTIFIER '[' ']' .

    $default  reduce using rule 33 (ident_form_part)


State 45

   58 expr: ident_form_part .

    $default  reduce using rule 58 (expr)


State 46

   57 expr: function_call .

    $default  reduce using rule 57 (expr)


State 47

   56 expr: string .

    $default  reduce using rule 56 (expr)


State 48

   34 ident_form_part: IDENTIFIER '[' expr . ']'
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80
    ']'            shift, and go to state 81


State 49

    1 input: decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 82


State 50

   52 cmd_line: ident_form_part ASSIGN expr . ';'
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80
    ';'            shift, and go to state 83


State 51

   41 data_type: KW_INT .

    $default  reduce using rule 41 (data_type)


State 52

   43 data_type: KW_REAL .

    $default  reduce using rule 43 (data_type)


State 53

   42 data_type: KW_BOOL .

    $default  reduce using rule 42 (data_type)


State 54

   44 data_type: KW_STRING .

    $default  reduce using rule 44 (data_type)


State 55

   25 decl_body_part_c: decl_form_c ':' data_type . ';'

    ';'  shift, and go to state 84


State 56

   27 decl_form_c: decl_form_c ',' ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 85


State 57

   20 func_decl: ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type ';'
   22          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type ';'
   23          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   38 func_parameters_decl: . %empty  [')', ',']
   39                     | . ident_form_part ':' data_type
   40                     | . func_parameters_decl ',' ident_form_part ':' data_type
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   64     | '(' . expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    $default  reduce using rule 38 (func_parameters_decl)

    ident_form_part       go to state 86
    func_parameters_decl  go to state 87
    function_call         go to state 46
    string                go to state 47
    expr                  go to state 69


State 58

   26 decl_form_c: ident_form_part ASSIGN expr .  [':', ',']
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 26 (decl_form_c)


State 59

   24 decl_body_part: decl_form ':' data_type . ';'

    ';'  shift, and go to state 88


State 60

   29 decl_form: decl_form ',' decl_assign .

    $default  reduce using rule 29 (decl_form)


State 61

   31 decl_assign: ident_form_part ASSIGN expr .  [':', ',']
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 31 (decl_assign)


State 62

   61 expr: KW_NOT expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 61 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 61 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < KW_NOT).
    Conflict between rule 61 and token LESS_OP resolved as reduce (LESS_OP < KW_NOT).
    Conflict between rule 61 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < KW_NOT).
    Conflict between rule 61 and token EQUAL_OP resolved as reduce (EQUAL_OP < KW_NOT).
    Conflict between rule 61 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 61 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 61 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 61 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 61 and token '%' resolved as reduce ('%' < KW_NOT).


State 63

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   35 func_parameters: . %empty  [')', ',']
   36                | . expr
   37                | . func_parameters ',' expr
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   48              | IDENTIFIER '(' . func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    $default  reduce using rule 35 (func_parameters)

    ident_form_part  go to state 45
    func_parameters  go to state 89
    function_call    go to state 46
    string           go to state 47
    expr             go to state 90


State 64

   49 function_call: READSTRING_FUNC '(' . ')'

    ')'  shift, and go to state 91


State 65

   50 function_call: READINT_FUNC '(' . ')'

    ')'  shift, and go to state 92


State 66

   51 function_call: READREAL_FUNC '(' . ')'

    ')'  shift, and go to state 93


State 67

   60 expr: '-' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 60 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 60 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 60 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 60 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 60 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 60 and token '-' resolved as reduce (%left '-').
    Conflict between rule 60 and token '+' resolved as reduce (%left '+').
    Conflict between rule 60 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('-' < '%').


State 68

   59 expr: '+' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 59 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 59 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 59 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 59 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 59 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 59 and token '-' resolved as reduce (%left '-').
    Conflict between rule 59 and token '+' resolved as reduce (%left '+').
    Conflict between rule 59 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 59 and token '%' resolved as shift ('+' < '%').


State 69

   64 expr: '(' expr . ')'
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80
    ')'            shift, and go to state 94


State 70

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   74     | expr KW_AND . expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 95


State 71

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr
   75     | expr KW_OR . expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 96


State 72

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   71     | expr NOT_EQUAL_OP . expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 97


State 73

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   72     | expr LESS_OP . expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 98


State 74

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   73     | expr LESS_EQUAL_OP . expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 99


State 75

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   70     | expr EQUAL_OP . expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 100


State 76

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   66     | expr '-' . expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 101


State 77

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   65     | expr '+' . expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 102


State 78

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   67     | expr '*' . expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 103


State 79

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   68     | expr '/' . expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 104


State 80

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   69     | expr '%' . expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 105


State 81

   34 ident_form_part: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 34 (ident_form_part)


State 82

    1 input: decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 106


State 83

   52 cmd_line: ident_form_part ASSIGN expr ';' .

    $default  reduce using rule 52 (cmd_line)


State 84

   25 decl_body_part_c: decl_form_c ':' data_type ';' .

    $default  reduce using rule 25 (decl_body_part_c)


State 85

   27 decl_form_c: decl_form_c ',' ident_form_part ASSIGN . expr
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 107


State 86

   39 func_parameters_decl: ident_form_part . ':' data_type
   58 expr: ident_form_part .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')']

    ':'  shift, and go to state 108

    $default  reduce using rule 58 (expr)


State 87

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type ';'
   22          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'
   40 func_parameters_decl: func_parameters_decl . ',' ident_form_part ':' data_type

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


State 88

   24 decl_body_part: decl_form ':' data_type ';' .

    $default  reduce using rule 24 (decl_body_part)


State 89

   37 func_parameters: func_parameters . ',' expr
   48 function_call: IDENTIFIER '(' func_parameters . ')'

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


State 90

   36 func_parameters: expr .  [')', ',']
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 36 (func_parameters)


State 91

   49 function_call: READSTRING_FUNC '(' ')' .

    $default  reduce using rule 49 (function_call)


State 92

   50 function_call: READINT_FUNC '(' ')' .

    $default  reduce using rule 50 (function_call)


State 93

   51 function_call: READREAL_FUNC '(' ')' .

    $default  reduce using rule 51 (function_call)


State 94

   64 expr: '(' expr ')' .

    $default  reduce using rule 64 (expr)


State 95

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   74     | expr KW_AND expr .  [KW_AND, ')', ':', ';', ']', ',']
   75     | expr . KW_OR expr

    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 74 (expr)

    Conflict between rule 74 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 74 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 74 and token NOT_EQUAL_OP resolved as shift (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 74 and token LESS_OP resolved as shift (KW_AND < LESS_OP).
    Conflict between rule 74 and token LESS_EQUAL_OP resolved as shift (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 74 and token EQUAL_OP resolved as shift (KW_AND < EQUAL_OP).
    Conflict between rule 74 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 74 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 74 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 74 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 74 and token '%' resolved as shift (KW_AND < '%').


State 96

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr
   75     | expr KW_OR expr .  [KW_AND, KW_OR, ')', ':', ';', ']', ',']

    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 75 (expr)

    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 75 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 75 and token NOT_EQUAL_OP resolved as shift (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 75 and token LESS_OP resolved as shift (KW_OR < LESS_OP).
    Conflict between rule 75 and token LESS_EQUAL_OP resolved as shift (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 75 and token EQUAL_OP resolved as shift (KW_OR < EQUAL_OP).
    Conflict between rule 75 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 75 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 75 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 75 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 75 and token '%' resolved as shift (KW_OR < '%').


State 97

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   71     | expr NOT_EQUAL_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 71 (expr)

    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 71 and token NOT_EQUAL_OP resolved as reduce (%left NOT_EQUAL_OP).
    Conflict between rule 71 and token LESS_OP resolved as shift (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 71 and token LESS_EQUAL_OP resolved as shift (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 71 and token EQUAL_OP resolved as reduce (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 71 and token '-' resolved as shift (NOT_EQUAL_OP < '-').
    Conflict between rule 71 and token '+' resolved as shift (NOT_EQUAL_OP < '+').
    Conflict between rule 71 and token '*' resolved as shift (NOT_EQUAL_OP < '*').
    Conflict between rule 71 and token '/' resolved as shift (NOT_EQUAL_OP < '/').
    Conflict between rule 71 and token '%' resolved as shift (NOT_EQUAL_OP < '%').


State 98

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   72     | expr LESS_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    LESS_EQUAL_OP  shift, and go to state 74
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 72 (expr)

    Conflict between rule 72 and token KW_AND resolved as reduce (KW_AND < LESS_OP).
    Conflict between rule 72 and token KW_OR resolved as reduce (KW_OR < LESS_OP).
    Conflict between rule 72 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 72 and token LESS_OP resolved as reduce (%left LESS_OP).
    Conflict between rule 72 and token LESS_EQUAL_OP resolved as shift (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 72 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_OP).
    Conflict between rule 72 and token '-' resolved as shift (LESS_OP < '-').
    Conflict between rule 72 and token '+' resolved as shift (LESS_OP < '+').
    Conflict between rule 72 and token '*' resolved as shift (LESS_OP < '*').
    Conflict between rule 72 and token '/' resolved as shift (LESS_OP < '/').
    Conflict between rule 72 and token '%' resolved as shift (LESS_OP < '%').


State 99

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   73     | expr LESS_EQUAL_OP expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 73 (expr)

    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 73 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 73 and token LESS_OP resolved as reduce (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 73 and token LESS_EQUAL_OP resolved as reduce (%left LESS_EQUAL_OP).
    Conflict between rule 73 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 73 and token '-' resolved as shift (LESS_EQUAL_OP < '-').
    Conflict between rule 73 and token '+' resolved as shift (LESS_EQUAL_OP < '+').
    Conflict between rule 73 and token '*' resolved as shift (LESS_EQUAL_OP < '*').
    Conflict between rule 73 and token '/' resolved as shift (LESS_EQUAL_OP < '/').
    Conflict between rule 73 and token '%' resolved as shift (LESS_EQUAL_OP < '%').


State 100

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   70     | expr EQUAL_OP expr .  [KW_AND, KW_OR, EQUAL_OP, ')', ':', ';', ']', ',']
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < EQUAL_OP).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < EQUAL_OP).
    Conflict between rule 70 and token NOT_EQUAL_OP resolved as shift (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 70 and token LESS_OP resolved as shift (EQUAL_OP < LESS_OP).
    Conflict between rule 70 and token LESS_EQUAL_OP resolved as shift (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 70 and token EQUAL_OP resolved as reduce (%left EQUAL_OP).
    Conflict between rule 70 and token '-' resolved as shift (EQUAL_OP < '-').
    Conflict between rule 70 and token '+' resolved as shift (EQUAL_OP < '+').
    Conflict between rule 70 and token '*' resolved as shift (EQUAL_OP < '*').
    Conflict between rule 70 and token '/' resolved as shift (EQUAL_OP < '/').
    Conflict between rule 70 and token '%' resolved as shift (EQUAL_OP < '%').


State 101

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   66     | expr '-' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 66 (expr)

    Conflict between rule 66 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 66 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 66 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 66 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 66 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 66 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 66 and token '-' resolved as reduce (%left '-').
    Conflict between rule 66 and token '+' resolved as reduce (%left '+').
    Conflict between rule 66 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('-' < '%').


State 102

   65 expr: expr . '+' expr
   65     | expr '+' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 65 (expr)

    Conflict between rule 65 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 65 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 65 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 65 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 65 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 65 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 65 and token '-' resolved as reduce (%left '-').
    Conflict between rule 65 and token '+' resolved as reduce (%left '+').
    Conflict between rule 65 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 65 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 65 and token '%' resolved as shift ('+' < '%').


State 103

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   67     | expr '*' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    $default  reduce using rule 67 (expr)

    Conflict between rule 67 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 67 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 67 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '*').
    Conflict between rule 67 and token LESS_OP resolved as reduce (LESS_OP < '*').
    Conflict between rule 67 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '*').
    Conflict between rule 67 and token EQUAL_OP resolved as reduce (EQUAL_OP < '*').
    Conflict between rule 67 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 67 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 67 and token '*' resolved as reduce (%left '*').
    Conflict between rule 67 and token '/' resolved as reduce (%left '/').
    Conflict between rule 67 and token '%' resolved as reduce (%left '%').


State 104

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   68     | expr '/' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 68 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '/').
    Conflict between rule 68 and token LESS_OP resolved as reduce (LESS_OP < '/').
    Conflict between rule 68 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '/').
    Conflict between rule 68 and token EQUAL_OP resolved as reduce (EQUAL_OP < '/').
    Conflict between rule 68 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 68 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 68 and token '*' resolved as reduce (%left '*').
    Conflict between rule 68 and token '/' resolved as reduce (%left '/').
    Conflict between rule 68 and token '%' resolved as reduce (%left '%').


State 105

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   69     | expr '%' expr .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    $default  reduce using rule 69 (expr)

    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 69 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '%').
    Conflict between rule 69 and token LESS_OP resolved as reduce (LESS_OP < '%').
    Conflict between rule 69 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '%').
    Conflict between rule 69 and token EQUAL_OP resolved as reduce (EQUAL_OP < '%').
    Conflict between rule 69 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 69 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 69 and token '*' resolved as reduce (%left '*').
    Conflict between rule 69 and token '/' resolved as reduce (%left '/').
    Conflict between rule 69 and token '%' resolved as reduce (%left '%').


State 106

    1 input: decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 113


State 107

   27 decl_form_c: decl_form_c ',' ident_form_part ASSIGN expr .  [':', ',']
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 27 (decl_form_c)


State 108

   39 func_parameters_decl: ident_form_part ':' . data_type
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54

    data_type  go to state 114


State 109

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type ';'
   22          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 115


State 110

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   40 func_parameters_decl: func_parameters_decl ',' . ident_form_part ':' data_type

    IDENTIFIER  shift, and go to state 3

    ident_form_part  go to state 116


State 111

   48 function_call: IDENTIFIER '(' func_parameters ')' .

    $default  reduce using rule 48 (function_call)


State 112

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   37 func_parameters: func_parameters ',' . expr
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 117


State 113

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 118


State 114

   39 func_parameters_decl: ident_form_part ':' data_type .

    $default  reduce using rule 39 (func_parameters_decl)


State 115

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type ';'
   22          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type FUNC_START_ARROW '{' body '}'
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54
    '['        shift, and go to state 119

    data_type  go to state 120


State 116

   40 func_parameters_decl: func_parameters_decl ',' ident_form_part . ':' data_type

    ':'  shift, and go to state 121


State 117

   37 func_parameters: func_parameters ',' expr .  [')', ',']
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80

    $default  reduce using rule 37 (func_parameters)


State 118

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 122


State 119

   22 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type FUNC_START_ARROW '{' body '}'

    ']'  shift, and go to state 123


State 120

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . FUNC_START_ARROW '{' body '}'
   21          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . ';'

    FUNC_START_ARROW  shift, and go to state 124
    ';'               shift, and go to state 125


State 121

   40 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' . data_type
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54

    data_type  go to state 126


State 122

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 127


State 123

   22 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type FUNC_START_ARROW '{' body '}'
   41 data_type: . KW_INT
   42          | . KW_BOOL
   43          | . KW_REAL
   44          | . KW_STRING

    KW_INT     shift, and go to state 51
    KW_REAL    shift, and go to state 52
    KW_BOOL    shift, and go to state 53
    KW_STRING  shift, and go to state 54

    data_type  go to state 128


State 124

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 129


State 125

   21 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';' .

    $default  reduce using rule 21 (func_decl)


State 126

   40 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' data_type .

    $default  reduce using rule 40 (func_parameters_decl)


State 127

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 130


State 128

   22 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . ';'
   23          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 131
    ';'               shift, and go to state 132


State 129

    2 body: . %empty  ['}']
    3     | . more
    4 more: . decl_list1
    5     | . printf_func
    6     | . more decl_list1
    7     | . more printf_func
    8 decl_list1: . cmd_line
    9           | . comment
   10           | . decl
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' . body '}'
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   45 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   46            | . WRITEINT_FUNC '(' expr ')' ';'
   47            | . WRITEREAL_FUNC '(' expr ')' ';'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    IDENTIFIER        shift, and go to state 3
    LINE_COMMENT      shift, and go to state 4
    MLINE_COMMENT     shift, and go to state 5
    WRITESTRING_FUNC  shift, and go to state 133
    WRITEINT_FUNC     shift, and go to state 134
    WRITEREAL_FUNC    shift, and go to state 135

    $default  reduce using rule 2 (body)

    body             go to state 136
    more             go to state 137
    decl_list1       go to state 138
    decl             go to state 139
    ident_form_part  go to state 9
    printf_func      go to state 140
    cmd_line         go to state 141
    comment          go to state 142


State 130

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    2 body: . %empty  ['}']
    3     | . more
    4 more: . decl_list1
    5     | . printf_func
    6     | . more decl_list1
    7     | . more printf_func
    8 decl_list1: . cmd_line
    9           | . comment
   10           | . decl
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   45 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   46            | . WRITEINT_FUNC '(' expr ')' ';'
   47            | . WRITEREAL_FUNC '(' expr ')' ';'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    IDENTIFIER        shift, and go to state 3
    LINE_COMMENT      shift, and go to state 4
    MLINE_COMMENT     shift, and go to state 5
    WRITESTRING_FUNC  shift, and go to state 133
    WRITEINT_FUNC     shift, and go to state 134
    WRITEREAL_FUNC    shift, and go to state 135

    $default  reduce using rule 2 (body)

    body             go to state 143
    more             go to state 137
    decl_list1       go to state 138
    decl             go to state 139
    ident_form_part  go to state 9
    printf_func      go to state 140
    cmd_line         go to state 141
    comment          go to state 142


State 131

   23 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 144


State 132

   22 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';' .

    $default  reduce using rule 22 (func_decl)


State 133

   45 printf_func: WRITESTRING_FUNC . '(' string ')' ';'

    '('  shift, and go to state 145


State 134

   46 printf_func: WRITEINT_FUNC . '(' expr ')' ';'

    '('  shift, and go to state 146


State 135

   47 printf_func: WRITEREAL_FUNC . '(' expr ')' ';'

    '('  shift, and go to state 147


State 136

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 148


State 137

    3 body: more .  ['}']
    6 more: more . decl_list1
    7     | more . printf_func
    8 decl_list1: . cmd_line
    9           | . comment
   10           | . decl
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   45 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   46            | . WRITEINT_FUNC '(' expr ')' ';'
   47            | . WRITEREAL_FUNC '(' expr ')' ';'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    IDENTIFIER        shift, and go to state 3
    LINE_COMMENT      shift, and go to state 4
    MLINE_COMMENT     shift, and go to state 5
    WRITESTRING_FUNC  shift, and go to state 133
    WRITEINT_FUNC     shift, and go to state 134
    WRITEREAL_FUNC    shift, and go to state 135

    $default  reduce using rule 3 (body)

    decl_list1       go to state 149
    decl             go to state 139
    ident_form_part  go to state 9
    printf_func      go to state 150
    cmd_line         go to state 141
    comment          go to state 142


State 138

    4 more: decl_list1 .

    $default  reduce using rule 4 (more)


State 139

   10 decl_list1: decl .

    $default  reduce using rule 10 (decl_list1)


State 140

    5 more: printf_func .

    $default  reduce using rule 5 (more)


State 141

    8 decl_list1: cmd_line .

    $default  reduce using rule 8 (decl_list1)


State 142

    9 decl_list1: comment .

    $default  reduce using rule 9 (decl_list1)


State 143

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 151


State 144

    2 body: . %empty  ['}']
    3     | . more
    4 more: . decl_list1
    5     | . printf_func
    6     | . more decl_list1
    7     | . more printf_func
    8 decl_list1: . cmd_line
    9           | . comment
   10           | . decl
   17 decl: . KW_LET decl_body_part
   18     | . KW_CONST decl_body_part_c
   19     | . KW_CONST func_decl
   23 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' . body '}'
   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   45 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   46            | . WRITEINT_FUNC '(' expr ')' ';'
   47            | . WRITEREAL_FUNC '(' expr ')' ';'
   52 cmd_line: . ident_form_part ASSIGN expr ';'
   53 comment: . LINE_COMMENT
   54        | . MLINE_COMMENT

    KW_CONST          shift, and go to state 1
    KW_LET            shift, and go to state 2
    IDENTIFIER        shift, and go to state 3
    LINE_COMMENT      shift, and go to state 4
    MLINE_COMMENT     shift, and go to state 5
    WRITESTRING_FUNC  shift, and go to state 133
    WRITEINT_FUNC     shift, and go to state 134
    WRITEREAL_FUNC    shift, and go to state 135

    $default  reduce using rule 2 (body)

    body             go to state 152
    more             go to state 137
    decl_list1       go to state 138
    decl             go to state 139
    ident_form_part  go to state 9
    printf_func      go to state 140
    cmd_line         go to state 141
    comment          go to state 142


State 145

   45 printf_func: WRITESTRING_FUNC '(' . string ')' ';'
   55 string: . STRING

    STRING  shift, and go to state 36

    string  go to state 153


State 146

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   46 printf_func: WRITEINT_FUNC '(' . expr ')' ';'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 154


State 147

   32 ident_form_part: . IDENTIFIER
   33                | . IDENTIFIER '[' ']'
   34                | . IDENTIFIER '[' expr ']'
   47 printf_func: WRITEREAL_FUNC '(' . expr ')' ';'
   48 function_call: . IDENTIFIER '(' func_parameters ')'
   49              | . READSTRING_FUNC '(' ')'
   50              | . READINT_FUNC '(' ')'
   51              | . READREAL_FUNC '(' ')'
   55 string: . STRING
   56 expr: . string
   57     | . function_call
   58     | . ident_form_part
   59     | . '+' expr
   60     | . '-' expr
   61     | . KW_NOT expr
   62     | . POSINT
   63     | . REAL
   64     | . '(' expr ')'
   65     | . expr '+' expr
   66     | . expr '-' expr
   67     | . expr '*' expr
   68     | . expr '/' expr
   69     | . expr '%' expr
   70     | . expr EQUAL_OP expr
   71     | . expr NOT_EQUAL_OP expr
   72     | . expr LESS_OP expr
   73     | . expr LESS_EQUAL_OP expr
   74     | . expr KW_AND expr
   75     | . expr KW_OR expr

    KW_NOT           shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    POSINT           shift, and go to state 35
    STRING           shift, and go to state 36
    REAL             shift, and go to state 37
    READSTRING_FUNC  shift, and go to state 38
    READINT_FUNC     shift, and go to state 39
    READREAL_FUNC    shift, and go to state 40
    '-'              shift, and go to state 41
    '+'              shift, and go to state 42
    '('              shift, and go to state 43

    ident_form_part  go to state 45
    function_call    go to state 46
    string           go to state 47
    expr             go to state 155


State 148

   20 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 20 (func_decl)


State 149

    6 more: more decl_list1 .

    $default  reduce using rule 6 (more)


State 150

    7 more: more printf_func .

    $default  reduce using rule 7 (more)


State 151

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 1 (input)


State 152

   23 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 156


State 153

   45 printf_func: WRITESTRING_FUNC '(' string . ')' ';'

    ')'  shift, and go to state 157


State 154

   46 printf_func: WRITEINT_FUNC '(' expr . ')' ';'
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80
    ')'            shift, and go to state 158


State 155

   47 printf_func: WRITEREAL_FUNC '(' expr . ')' ';'
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . EQUAL_OP expr
   71     | expr . NOT_EQUAL_OP expr
   72     | expr . LESS_OP expr
   73     | expr . LESS_EQUAL_OP expr
   74     | expr . KW_AND expr
   75     | expr . KW_OR expr

    KW_AND         shift, and go to state 70
    KW_OR          shift, and go to state 71
    NOT_EQUAL_OP   shift, and go to state 72
    LESS_OP        shift, and go to state 73
    LESS_EQUAL_OP  shift, and go to state 74
    EQUAL_OP       shift, and go to state 75
    '-'            shift, and go to state 76
    '+'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79
    '%'            shift, and go to state 80
    ')'            shift, and go to state 159


State 156

   23 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 23 (func_decl)


State 157

   45 printf_func: WRITESTRING_FUNC '(' string ')' . ';'

    ';'  shift, and go to state 160


State 158

   46 printf_func: WRITEINT_FUNC '(' expr ')' . ';'

    ';'  shift, and go to state 161


State 159

   47 printf_func: WRITEREAL_FUNC '(' expr ')' . ';'

    ';'  shift, and go to state 162


State 160

   45 printf_func: WRITESTRING_FUNC '(' string ')' ';' .

    $default  reduce using rule 45 (printf_func)


State 161

   46 printf_func: WRITEINT_FUNC '(' expr ')' ';' .

    $default  reduce using rule 46 (printf_func)


State 162

   47 printf_func: WRITEREAL_FUNC '(' expr ')' ';' .

    $default  reduce using rule 47 (printf_func)
