Terminals unused in grammar

   KW_TRUE
   KW_FALSE


Grammar

    0 $accept: input $end

    1 input: final_form

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    3           | decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    4 body: %empty
    5     | more

    6 more: while_loop
    7     | if_stmt
    8     | decl_list1
    9     | printf_func
   10     | more while_loop
   11     | more if_stmt
   12     | more decl_list1
   13     | more printf_func

   14 decl_list1: cmd_line
   15           | comment
   16           | decl

   17 decl_list: cmd_line
   18          | comment
   19          | decl
   20          | decl_list decl
   21          | decl_list cmd_line
   22          | decl_list comment

   23 decl: KW_LET decl_body_part
   24     | KW_CONST decl_body_part_c
   25     | KW_CONST func_decl

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   28          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'

   30 decl_body_part: decl_form ':' data_type ';'

   31 decl_body_part_c: decl_form_c ':' data_type ';'

   32 decl_form_c: ident_form_part ASSIGN expr
   33            | decl_form_c ',' ident_form_part ASSIGN expr

   34 decl_form: decl_assign
   35          | decl_form ',' decl_assign

   36 decl_assign: ident_form_part
   37            | ident_form_part ASSIGN expr

   38 ident_form_part: IDENTIFIER
   39                | IDENTIFIER '[' ']'
   40                | IDENTIFIER '[' expr ']'

   41 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | KW_IF expr KW_THEN body KW_FI ';'

   43 while_loop: KW_WHILE expr KW_LOOP body KW_POOL ';'

   44 func_parameters: %empty
   45                | expr
   46                | func_parameters ',' expr

   47 func_parameters_decl: %empty
   48                     | ident_form_part ':' data_type
   49                     | func_parameters_decl ',' ident_form_part ':' data_type

   50 data_type: KW_INT
   51          | KW_BOOL
   52          | KW_REAL
   53          | KW_STRING

   54 printf_func: WRITESTRING_FUNC '(' string ')' ';'
   55            | "teaclib.h" '(' expr ')' ';'
   56            | WRITEREAL_FUNC '(' expr ')' ';'

   57 function_call: IDENTIFIER '(' func_parameters ')'
   58              | READSTRING_FUNC '(' ')'
   59              | READINT_FUNC '(' ')'
   60              | READREAL_FUNC '(' ')'

   61 cmd_line: function_call ';'
   62         | ident_form_part ASSIGN expr ';'
   63         | KW_RETURN expr ';'

   64 comment: LINE_COMMENT
   65        | MLINE_COMMENT

   66 string: STRING

   67 expr: string
   68     | function_call
   69     | ident_form_part
   70     | '+' expr
   71     | '-' expr
   72     | KW_NOT expr
   73     | POSINT
   74     | REAL
   75     | '(' expr ')'
   76     | expr '+' expr
   77     | expr '-' expr
   78     | expr '*' expr
   79     | expr '/' expr
   80     | expr '%' expr
   81     | expr EQUAL_OP expr
   82     | expr NOT_EQUAL_OP expr
   83     | expr LESS_OP expr
   84     | expr LESS_EQUAL_OP expr
   85     | expr KW_AND expr
   86     | expr KW_OR expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 80
'(' (40) 2 3 26 27 28 29 54 55 56 57 58 59 60 75
')' (41) 2 3 26 27 28 29 54 55 56 57 58 59 60 75
'*' (42) 78
'+' (43) 70 76
',' (44) 33 35 46 49
'-' (45) 71 77
'/' (47) 79
':' (58) 2 3 26 27 28 29 30 31 48 49
';' (59) 26 27 28 29 30 31 41 42 43 54 55 56 61 62 63
'[' (91) 28 29 39 40
']' (93) 28 29 39 40
'{' (123) 2 3 26 29
'}' (125) 2 3 26 29
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 2 3 50
KW_REAL (261) 52
KW_BOOL (262) 51
KW_STRING (263) 53
KW_ELSE (264) 41
KW_IF (265) 41 42
KW_THEN (266) 41 42
KW_FI (267) 41 42
KW_WHILE (268) 43
KW_LOOP (269) 43
KW_POOL (270) 43
KW_CONST (271) 2 3 24 25
KW_LET (272) 23
KW_RETURN (273) 63
KW_NOT (274) 72
KW_AND (275) 85
KW_OR (276) 86
NOT_EQUAL_OP (277) 82
LESS_OP (278) 83
LESS_EQUAL_OP (279) 84
FUNC_START_ARROW (280) 2 3 26 29
KW_START (281) 2 3
IDENTIFIER (282) 38 39 40 57
POSINT (283) 73
STRING (284) 66
REAL (285) 74
ASSIGN (286) 2 3 26 27 28 29 32 33 37 62
LINE_COMMENT (287) 64
MLINE_COMMENT (288) 65
READSTRING_FUNC (289) 58
READINT_FUNC (290) 59
READREAL_FUNC (291) 60
WRITESTRING_FUNC (292) 54
"teaclib.h" (293) 55
WRITEREAL_FUNC (294) 56
EQUAL_OP (295) 81


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1, on right: 0
final_form (57)
    on left: 2 3, on right: 1
body (58)
    on left: 4 5, on right: 2 3 26 29 41 42 43
more (59)
    on left: 6 7 8 9 10 11 12 13, on right: 5 10 11 12 13
decl_list1 (60)
    on left: 14 15 16, on right: 8 12
decl_list (61)
    on left: 17 18 19 20 21 22, on right: 3 20 21 22
decl (62)
    on left: 23 24 25, on right: 16 19 20
func_decl (63)
    on left: 26 27 28 29, on right: 25
decl_body_part (64)
    on left: 30, on right: 23
decl_body_part_c (65)
    on left: 31, on right: 24
decl_form_c (66)
    on left: 32 33, on right: 31 33
decl_form (67)
    on left: 34 35, on right: 30 35
decl_assign (68)
    on left: 36 37, on right: 34 35
ident_form_part (69)
    on left: 38 39 40, on right: 26 27 28 29 32 33 36 37 48 49 62 69
if_stmt (70)
    on left: 41 42, on right: 7 11
while_loop (71)
    on left: 43, on right: 6 10
func_parameters (72)
    on left: 44 45 46, on right: 46 57
func_parameters_decl (73)
    on left: 47 48 49, on right: 26 27 28 29 49
data_type (74)
    on left: 50 51 52 53, on right: 26 27 28 29 30 31 48 49
printf_func (75)
    on left: 54 55 56, on right: 9 13
function_call (76)
    on left: 57 58 59 60, on right: 61 68
cmd_line (77)
    on left: 61 62 63, on right: 14 17 21
comment (78)
    on left: 64 65, on right: 15 18 22
string (79)
    on left: 66, on right: 54 67
expr (80)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86, on right: 32 33 37 40 41 42 43 45 46 55 56 62 63 70 71 72
    75 76 77 78 79 80 81 82 83 84 85 86


State 0

    0 $accept: . input $end
    1 input: . final_form
    2 final_form: . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    3           | . decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   17 decl_list: . cmd_line
   18          | . comment
   19          | . decl
   20          | . decl_list decl
   21          | . decl_list cmd_line
   22          | . decl_list comment
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_CONST         shift, and go to state 1
    KW_LET           shift, and go to state 2
    KW_RETURN        shift, and go to state 3
    IDENTIFIER       shift, and go to state 4
    LINE_COMMENT     shift, and go to state 5
    MLINE_COMMENT    shift, and go to state 6
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9

    input            go to state 10
    final_form       go to state 11
    decl_list        go to state 12
    decl             go to state 13
    ident_form_part  go to state 14
    function_call    go to state 15
    cmd_line         go to state 16
    comment          go to state 17


State 1

    2 final_form: KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   24 decl: KW_CONST . decl_body_part_c
   25     | KW_CONST . func_decl
   26 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   28          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   31 decl_body_part_c: . decl_form_c ':' data_type ';'
   32 decl_form_c: . ident_form_part ASSIGN expr
   33            | . decl_form_c ',' ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    KW_START    shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    func_decl         go to state 20
    decl_body_part_c  go to state 21
    decl_form_c       go to state 22
    ident_form_part   go to state 23


State 2

   23 decl: KW_LET . decl_body_part
   30 decl_body_part: . decl_form ':' data_type ';'
   34 decl_form: . decl_assign
   35          | . decl_form ',' decl_assign
   36 decl_assign: . ident_form_part
   37            | . ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 19

    decl_body_part   go to state 24
    decl_form        go to state 25
    decl_assign      go to state 26
    ident_form_part  go to state 27


State 3

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   63 cmd_line: KW_RETURN . expr ';'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 38


State 4

   38 ident_form_part: IDENTIFIER .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, ASSIGN, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   39                | IDENTIFIER . '[' ']'
   40                | IDENTIFIER . '[' expr ']'
   57 function_call: IDENTIFIER . '(' func_parameters ')'

    '('  shift, and go to state 39
    '['  shift, and go to state 40

    $default  reduce using rule 38 (ident_form_part)


State 5

   64 comment: LINE_COMMENT .

    $default  reduce using rule 64 (comment)


State 6

   65 comment: MLINE_COMMENT .

    $default  reduce using rule 65 (comment)


State 7

   58 function_call: READSTRING_FUNC . '(' ')'

    '('  shift, and go to state 41


State 8

   59 function_call: READINT_FUNC . '(' ')'

    '('  shift, and go to state 42


State 9

   60 function_call: READREAL_FUNC . '(' ')'

    '('  shift, and go to state 43


State 10

    0 $accept: input . $end

    $end  shift, and go to state 44


State 11

    1 input: final_form .

    $default  reduce using rule 1 (input)


State 12

    3 final_form: decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   20 decl_list: decl_list . decl
   21          | decl_list . cmd_line
   22          | decl_list . comment
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_CONST         shift, and go to state 45
    KW_LET           shift, and go to state 2
    KW_RETURN        shift, and go to state 3
    IDENTIFIER       shift, and go to state 4
    LINE_COMMENT     shift, and go to state 5
    MLINE_COMMENT    shift, and go to state 6
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9

    decl             go to state 46
    ident_form_part  go to state 14
    function_call    go to state 15
    cmd_line         go to state 47
    comment          go to state 48


State 13

   19 decl_list: decl .

    $default  reduce using rule 19 (decl_list)


State 14

   62 cmd_line: ident_form_part . ASSIGN expr ';'

    ASSIGN  shift, and go to state 49


State 15

   61 cmd_line: function_call . ';'

    ';'  shift, and go to state 50


State 16

   17 decl_list: cmd_line .

    $default  reduce using rule 17 (decl_list)


State 17

   18 decl_list: comment .

    $default  reduce using rule 18 (decl_list)


State 18

    2 final_form: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 51


State 19

   38 ident_form_part: IDENTIFIER .  [ASSIGN, ':', ',']
   39                | IDENTIFIER . '[' ']'
   40                | IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 40

    $default  reduce using rule 38 (ident_form_part)


State 20

   25 decl: KW_CONST func_decl .

    $default  reduce using rule 25 (decl)


State 21

   24 decl: KW_CONST decl_body_part_c .

    $default  reduce using rule 24 (decl)


State 22

   31 decl_body_part_c: decl_form_c . ':' data_type ';'
   33 decl_form_c: decl_form_c . ',' ident_form_part ASSIGN expr

    ':'  shift, and go to state 52
    ','  shift, and go to state 53


State 23

   26 func_decl: ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   28          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | ident_form_part . ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   32 decl_form_c: ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 54


State 24

   23 decl: KW_LET decl_body_part .

    $default  reduce using rule 23 (decl)


State 25

   30 decl_body_part: decl_form . ':' data_type ';'
   35 decl_form: decl_form . ',' decl_assign

    ':'  shift, and go to state 55
    ','  shift, and go to state 56


State 26

   34 decl_form: decl_assign .

    $default  reduce using rule 34 (decl_form)


State 27

   36 decl_assign: ident_form_part .  [':', ',']
   37            | ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 57

    $default  reduce using rule 36 (decl_assign)


State 28

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   72     | KW_NOT . expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 58


State 29

   73 expr: POSINT .

    $default  reduce using rule 73 (expr)


State 30

   66 string: STRING .

    $default  reduce using rule 66 (string)


State 31

   74 expr: REAL .

    $default  reduce using rule 74 (expr)


State 32

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   71     | '-' . expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 59


State 33

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   70     | '+' . expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 60


State 34

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   75     | '(' . expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 61


State 35

   69 expr: ident_form_part .

    $default  reduce using rule 69 (expr)


State 36

   68 expr: function_call .

    $default  reduce using rule 68 (expr)


State 37

   67 expr: string .

    $default  reduce using rule 67 (expr)


State 38

   63 cmd_line: KW_RETURN expr . ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ';'            shift, and go to state 73


State 39

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   44 func_parameters: . %empty  [')', ',']
   45                | . expr
   46                | . func_parameters ',' expr
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   57              | IDENTIFIER '(' . func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    $default  reduce using rule 44 (func_parameters)

    ident_form_part  go to state 35
    func_parameters  go to state 74
    function_call    go to state 36
    string           go to state 37
    expr             go to state 75


State 40

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   39                | IDENTIFIER '[' . ']'
   40                | . IDENTIFIER '[' expr ']'
   40                | IDENTIFIER '[' . expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34
    ']'              shift, and go to state 76

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 77


State 41

   58 function_call: READSTRING_FUNC '(' . ')'

    ')'  shift, and go to state 78


State 42

   59 function_call: READINT_FUNC '(' . ')'

    ')'  shift, and go to state 79


State 43

   60 function_call: READREAL_FUNC '(' . ')'

    ')'  shift, and go to state 80


State 44

    0 $accept: input $end .

    $default  accept


State 45

    3 final_form: decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
   24 decl: KW_CONST . decl_body_part_c
   25     | KW_CONST . func_decl
   26 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   28          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   31 decl_body_part_c: . decl_form_c ':' data_type ';'
   32 decl_form_c: . ident_form_part ASSIGN expr
   33            | . decl_form_c ',' ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    KW_START    shift, and go to state 81
    IDENTIFIER  shift, and go to state 19

    func_decl         go to state 20
    decl_body_part_c  go to state 21
    decl_form_c       go to state 22
    ident_form_part   go to state 23


State 46

   20 decl_list: decl_list decl .

    $default  reduce using rule 20 (decl_list)


State 47

   21 decl_list: decl_list cmd_line .

    $default  reduce using rule 21 (decl_list)


State 48

   22 decl_list: decl_list comment .

    $default  reduce using rule 22 (decl_list)


State 49

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   62 cmd_line: ident_form_part ASSIGN . expr ';'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 82


State 50

   61 cmd_line: function_call ';' .

    $default  reduce using rule 61 (cmd_line)


State 51

    2 final_form: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 83


State 52

   31 decl_body_part_c: decl_form_c ':' . data_type ';'
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    data_type  go to state 88


State 53

   33 decl_form_c: decl_form_c ',' . ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 19

    ident_form_part  go to state 89


State 54

   26 func_decl: ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' data_type ';'
   28          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | ident_form_part ASSIGN . '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   32 decl_form_c: ident_form_part ASSIGN . expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 90

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 91


State 55

   30 decl_body_part: decl_form ':' . data_type ';'
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    data_type  go to state 92


State 56

   35 decl_form: decl_form ',' . decl_assign
   36 decl_assign: . ident_form_part
   37            | . ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 19

    decl_assign      go to state 93
    ident_form_part  go to state 27


State 57

   37 decl_assign: ident_form_part ASSIGN . expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 94


State 58

   72 expr: KW_NOT expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    $default  reduce using rule 72 (expr)

    Conflict between rule 72 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 72 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 72 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < KW_NOT).
    Conflict between rule 72 and token LESS_OP resolved as reduce (LESS_OP < KW_NOT).
    Conflict between rule 72 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < KW_NOT).
    Conflict between rule 72 and token EQUAL_OP resolved as reduce (EQUAL_OP < KW_NOT).
    Conflict between rule 72 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 72 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 72 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 72 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 72 and token '%' resolved as reduce ('%' < KW_NOT).


State 59

   71 expr: '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 71 (expr)

    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 71 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 71 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 71 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 71 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 71 and token '-' resolved as reduce (%left '-').
    Conflict between rule 71 and token '+' resolved as reduce (%left '+').
    Conflict between rule 71 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 71 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 71 and token '%' resolved as shift ('-' < '%').


State 60

   70 expr: '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 70 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 70 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 70 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 70 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 70 and token '-' resolved as reduce (%left '-').
    Conflict between rule 70 and token '+' resolved as reduce (%left '+').
    Conflict between rule 70 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 70 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 70 and token '%' resolved as shift ('+' < '%').


State 61

   75 expr: '(' expr . ')'
   76     | expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ')'            shift, and go to state 95


State 62

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   85     | expr KW_AND . expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 96


State 63

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr
   86     | expr KW_OR . expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 97


State 64

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   82     | expr NOT_EQUAL_OP . expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 98


State 65

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   83     | expr LESS_OP . expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 99


State 66

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   84     | expr LESS_EQUAL_OP . expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 100


State 67

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   81     | expr EQUAL_OP . expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 101


State 68

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   77     | expr '-' . expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 102


State 69

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   76     | expr '+' . expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 103


State 70

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   78     | expr '*' . expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 104


State 71

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   79     | expr '/' . expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 105


State 72

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   80     | expr '%' . expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 106


State 73

   63 cmd_line: KW_RETURN expr ';' .

    $default  reduce using rule 63 (cmd_line)


State 74

   46 func_parameters: func_parameters . ',' expr
   57 function_call: IDENTIFIER '(' func_parameters . ')'

    ')'  shift, and go to state 107
    ','  shift, and go to state 108


State 75

   45 func_parameters: expr .  [')', ',']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 45 (func_parameters)


State 76

   39 ident_form_part: IDENTIFIER '[' ']' .

    $default  reduce using rule 39 (ident_form_part)


State 77

   40 ident_form_part: IDENTIFIER '[' expr . ']'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ']'            shift, and go to state 109


State 78

   58 function_call: READSTRING_FUNC '(' ')' .

    $default  reduce using rule 58 (function_call)


State 79

   59 function_call: READINT_FUNC '(' ')' .

    $default  reduce using rule 59 (function_call)


State 80

   60 function_call: READREAL_FUNC '(' ')' .

    $default  reduce using rule 60 (function_call)


State 81

    3 final_form: decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 110


State 82

   62 cmd_line: ident_form_part ASSIGN expr . ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ';'            shift, and go to state 111


State 83

    2 final_form: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 112


State 84

   50 data_type: KW_INT .

    $default  reduce using rule 50 (data_type)


State 85

   52 data_type: KW_REAL .

    $default  reduce using rule 52 (data_type)


State 86

   51 data_type: KW_BOOL .

    $default  reduce using rule 51 (data_type)


State 87

   53 data_type: KW_STRING .

    $default  reduce using rule 53 (data_type)


State 88

   31 decl_body_part_c: decl_form_c ':' data_type . ';'

    ';'  shift, and go to state 113


State 89

   33 decl_form_c: decl_form_c ',' ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 114


State 90

   26 func_decl: ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' data_type ';'
   28          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | ident_form_part ASSIGN '(' . func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   47 func_parameters_decl: . %empty  [')', ',']
   48                     | . ident_form_part ':' data_type
   49                     | . func_parameters_decl ',' ident_form_part ':' data_type
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   75     | '(' . expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    $default  reduce using rule 47 (func_parameters_decl)

    ident_form_part       go to state 115
    func_parameters_decl  go to state 116
    function_call         go to state 36
    string                go to state 37
    expr                  go to state 61


State 91

   32 decl_form_c: ident_form_part ASSIGN expr .  [':', ',']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 32 (decl_form_c)


State 92

   30 decl_body_part: decl_form ':' data_type . ';'

    ';'  shift, and go to state 117


State 93

   35 decl_form: decl_form ',' decl_assign .

    $default  reduce using rule 35 (decl_form)


State 94

   37 decl_assign: ident_form_part ASSIGN expr .  [':', ',']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 37 (decl_assign)


State 95

   75 expr: '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 96

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   85     | expr KW_AND expr .  [KW_THEN, KW_LOOP, KW_AND, ')', ':', ';', ']', ',']
   86     | expr . KW_OR expr

    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 85 (expr)

    Conflict between rule 85 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 85 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 85 and token NOT_EQUAL_OP resolved as shift (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 85 and token LESS_OP resolved as shift (KW_AND < LESS_OP).
    Conflict between rule 85 and token LESS_EQUAL_OP resolved as shift (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 85 and token EQUAL_OP resolved as shift (KW_AND < EQUAL_OP).
    Conflict between rule 85 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 85 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 85 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 85 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 85 and token '%' resolved as shift (KW_AND < '%').


State 97

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr
   86     | expr KW_OR expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ']', ',']

    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 86 (expr)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 86 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 86 and token NOT_EQUAL_OP resolved as shift (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 86 and token LESS_OP resolved as shift (KW_OR < LESS_OP).
    Conflict between rule 86 and token LESS_EQUAL_OP resolved as shift (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 86 and token EQUAL_OP resolved as shift (KW_OR < EQUAL_OP).
    Conflict between rule 86 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 86 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 86 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 86 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 86 and token '%' resolved as shift (KW_OR < '%').


State 98

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   82     | expr NOT_EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < NOT_EQUAL_OP).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < NOT_EQUAL_OP).
    Conflict between rule 82 and token NOT_EQUAL_OP resolved as reduce (%left NOT_EQUAL_OP).
    Conflict between rule 82 and token LESS_OP resolved as shift (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 82 and token LESS_EQUAL_OP resolved as shift (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 82 and token EQUAL_OP resolved as reduce (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 82 and token '-' resolved as shift (NOT_EQUAL_OP < '-').
    Conflict between rule 82 and token '+' resolved as shift (NOT_EQUAL_OP < '+').
    Conflict between rule 82 and token '*' resolved as shift (NOT_EQUAL_OP < '*').
    Conflict between rule 82 and token '/' resolved as shift (NOT_EQUAL_OP < '/').
    Conflict between rule 82 and token '%' resolved as shift (NOT_EQUAL_OP < '%').


State 99

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   83     | expr LESS_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    LESS_EQUAL_OP  shift, and go to state 66
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < LESS_OP).
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < LESS_OP).
    Conflict between rule 83 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_OP).
    Conflict between rule 83 and token LESS_OP resolved as reduce (%left LESS_OP).
    Conflict between rule 83 and token LESS_EQUAL_OP resolved as shift (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 83 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_OP).
    Conflict between rule 83 and token '-' resolved as shift (LESS_OP < '-').
    Conflict between rule 83 and token '+' resolved as shift (LESS_OP < '+').
    Conflict between rule 83 and token '*' resolved as shift (LESS_OP < '*').
    Conflict between rule 83 and token '/' resolved as shift (LESS_OP < '/').
    Conflict between rule 83 and token '%' resolved as shift (LESS_OP < '%').


State 100

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   84     | expr LESS_EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, ')', ':', ';', ']', ',']
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    '-'  shift, and go to state 68
    '+'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 84 (expr)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < LESS_EQUAL_OP).
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < LESS_EQUAL_OP).
    Conflict between rule 84 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 84 and token LESS_OP resolved as reduce (LESS_OP < LESS_EQUAL_OP).
    Conflict between rule 84 and token LESS_EQUAL_OP resolved as reduce (%left LESS_EQUAL_OP).
    Conflict between rule 84 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 84 and token '-' resolved as shift (LESS_EQUAL_OP < '-').
    Conflict between rule 84 and token '+' resolved as shift (LESS_EQUAL_OP < '+').
    Conflict between rule 84 and token '*' resolved as shift (LESS_EQUAL_OP < '*').
    Conflict between rule 84 and token '/' resolved as shift (LESS_EQUAL_OP < '/').
    Conflict between rule 84 and token '%' resolved as shift (LESS_EQUAL_OP < '%').


State 101

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   81     | expr EQUAL_OP expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, EQUAL_OP, ')', ':', ';', ']', ',']
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < EQUAL_OP).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < EQUAL_OP).
    Conflict between rule 81 and token NOT_EQUAL_OP resolved as shift (EQUAL_OP < NOT_EQUAL_OP).
    Conflict between rule 81 and token LESS_OP resolved as shift (EQUAL_OP < LESS_OP).
    Conflict between rule 81 and token LESS_EQUAL_OP resolved as shift (EQUAL_OP < LESS_EQUAL_OP).
    Conflict between rule 81 and token EQUAL_OP resolved as reduce (%left EQUAL_OP).
    Conflict between rule 81 and token '-' resolved as shift (EQUAL_OP < '-').
    Conflict between rule 81 and token '+' resolved as shift (EQUAL_OP < '+').
    Conflict between rule 81 and token '*' resolved as shift (EQUAL_OP < '*').
    Conflict between rule 81 and token '/' resolved as shift (EQUAL_OP < '/').
    Conflict between rule 81 and token '%' resolved as shift (EQUAL_OP < '%').


State 102

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   77     | expr '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 77 (expr)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 77 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '-').
    Conflict between rule 77 and token LESS_OP resolved as reduce (LESS_OP < '-').
    Conflict between rule 77 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '-').
    Conflict between rule 77 and token EQUAL_OP resolved as reduce (EQUAL_OP < '-').
    Conflict between rule 77 and token '-' resolved as reduce (%left '-').
    Conflict between rule 77 and token '+' resolved as reduce (%left '+').
    Conflict between rule 77 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 77 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 77 and token '%' resolved as shift ('-' < '%').


State 103

   76 expr: expr . '+' expr
   76     | expr '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', ')', ':', ';', ']', ',']
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 76 (expr)

    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 76 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '+').
    Conflict between rule 76 and token LESS_OP resolved as reduce (LESS_OP < '+').
    Conflict between rule 76 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '+').
    Conflict between rule 76 and token EQUAL_OP resolved as reduce (EQUAL_OP < '+').
    Conflict between rule 76 and token '-' resolved as reduce (%left '-').
    Conflict between rule 76 and token '+' resolved as reduce (%left '+').
    Conflict between rule 76 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 76 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 76 and token '%' resolved as shift ('+' < '%').


State 104

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   78     | expr '*' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    $default  reduce using rule 78 (expr)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 78 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '*').
    Conflict between rule 78 and token LESS_OP resolved as reduce (LESS_OP < '*').
    Conflict between rule 78 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '*').
    Conflict between rule 78 and token EQUAL_OP resolved as reduce (EQUAL_OP < '*').
    Conflict between rule 78 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 78 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 78 and token '*' resolved as reduce (%left '*').
    Conflict between rule 78 and token '/' resolved as reduce (%left '/').
    Conflict between rule 78 and token '%' resolved as reduce (%left '%').


State 105

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   79     | expr '/' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 79 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '/').
    Conflict between rule 79 and token LESS_OP resolved as reduce (LESS_OP < '/').
    Conflict between rule 79 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '/').
    Conflict between rule 79 and token EQUAL_OP resolved as reduce (EQUAL_OP < '/').
    Conflict between rule 79 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 79 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 79 and token '*' resolved as reduce (%left '*').
    Conflict between rule 79 and token '/' resolved as reduce (%left '/').
    Conflict between rule 79 and token '%' resolved as reduce (%left '%').


State 106

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   80     | expr '%' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')', ':', ';', ']', ',']
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 80 and token NOT_EQUAL_OP resolved as reduce (NOT_EQUAL_OP < '%').
    Conflict between rule 80 and token LESS_OP resolved as reduce (LESS_OP < '%').
    Conflict between rule 80 and token LESS_EQUAL_OP resolved as reduce (LESS_EQUAL_OP < '%').
    Conflict between rule 80 and token EQUAL_OP resolved as reduce (EQUAL_OP < '%').
    Conflict between rule 80 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 80 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 80 and token '*' resolved as reduce (%left '*').
    Conflict between rule 80 and token '/' resolved as reduce (%left '/').
    Conflict between rule 80 and token '%' resolved as reduce (%left '%').


State 107

   57 function_call: IDENTIFIER '(' func_parameters ')' .

    $default  reduce using rule 57 (function_call)


State 108

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   46 func_parameters: func_parameters ',' . expr
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 118


State 109

   40 ident_form_part: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 40 (ident_form_part)


State 110

    3 final_form: decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 119


State 111

   62 cmd_line: ident_form_part ASSIGN expr ';' .

    $default  reduce using rule 62 (cmd_line)


State 112

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 120


State 113

   31 decl_body_part_c: decl_form_c ':' data_type ';' .

    $default  reduce using rule 31 (decl_body_part_c)


State 114

   33 decl_form_c: decl_form_c ',' ident_form_part ASSIGN . expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 121


State 115

   48 func_parameters_decl: ident_form_part . ':' data_type
   69 expr: ident_form_part .  [KW_AND, KW_OR, NOT_EQUAL_OP, LESS_OP, LESS_EQUAL_OP, EQUAL_OP, '-', '+', '*', '/', '%', ')']

    ':'  shift, and go to state 122

    $default  reduce using rule 69 (expr)


State 116

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' data_type ';'
   28          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl . ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   49 func_parameters_decl: func_parameters_decl . ',' ident_form_part ':' data_type

    ')'  shift, and go to state 123
    ','  shift, and go to state 124


State 117

   30 decl_body_part: decl_form ':' data_type ';' .

    $default  reduce using rule 30 (decl_body_part)


State 118

   46 func_parameters: func_parameters ',' expr .  [')', ',']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 46 (func_parameters)


State 119

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 125


State 120

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 126


State 121

   33 decl_form_c: decl_form_c ',' ident_form_part ASSIGN expr .  [':', ',']
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72

    $default  reduce using rule 33 (decl_form_c)


State 122

   48 func_parameters_decl: ident_form_part ':' . data_type
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    data_type  go to state 127


State 123

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' data_type ';'
   28          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' . ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'

    ':'  shift, and go to state 128


State 124

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   49 func_parameters_decl: func_parameters_decl ',' . ident_form_part ':' data_type

    IDENTIFIER  shift, and go to state 19

    ident_form_part  go to state 129


State 125

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 130


State 126

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 131


State 127

   48 func_parameters_decl: ident_form_part ':' data_type .

    $default  reduce using rule 48 (func_parameters_decl)


State 128

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . data_type ';'
   28          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' . '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87
    '['        shift, and go to state 132

    data_type  go to state 133


State 129

   49 func_parameters_decl: func_parameters_decl ',' ident_form_part . ':' data_type

    ':'  shift, and go to state 134


State 130

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 135


State 131

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 136


State 132

   28 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' . ']' data_type FUNC_START_ARROW '{' body '}' ';'

    ']'  shift, and go to state 137


State 133

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . FUNC_START_ARROW '{' body '}' ';'
   27          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type . ';'

    FUNC_START_ARROW  shift, and go to state 138
    ';'               shift, and go to state 139


State 134

   49 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' . data_type
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    data_type  go to state 140


State 135

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 141


State 136

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    4 body: . %empty  ['}']
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 148
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 137

   28 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' . data_type FUNC_START_ARROW '{' body '}' ';'
   50 data_type: . KW_INT
   51          | . KW_BOOL
   52          | . KW_REAL
   53          | . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87

    data_type  go to state 157


State 138

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW . '{' body '}' ';'

    '{'  shift, and go to state 158


State 139

   27 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';' .

    $default  reduce using rule 27 (func_decl)


State 140

   49 func_parameters_decl: func_parameters_decl ',' ident_form_part ':' data_type .

    $default  reduce using rule 49 (func_parameters_decl)


State 141

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 159


State 142

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: KW_IF . expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | KW_IF . expr KW_THEN body KW_FI ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 160


State 143

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   43 while_loop: KW_WHILE . expr KW_LOOP body KW_POOL ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 161


State 144

   24 decl: KW_CONST . decl_body_part_c
   25     | KW_CONST . func_decl
   26 func_decl: . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';'
   27          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type ';'
   28          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';'
   29          | . ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';'
   31 decl_body_part_c: . decl_form_c ':' data_type ';'
   32 decl_form_c: . ident_form_part ASSIGN expr
   33            | . decl_form_c ',' ident_form_part ASSIGN expr
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'

    IDENTIFIER  shift, and go to state 19

    func_decl         go to state 20
    decl_body_part_c  go to state 21
    decl_form_c       go to state 22
    ident_form_part   go to state 23


State 145

   54 printf_func: WRITESTRING_FUNC . '(' string ')' ';'

    '('  shift, and go to state 162


State 146

   55 printf_func: "teaclib.h" . '(' expr ')' ';'

    '('  shift, and go to state 163


State 147

   56 printf_func: WRITEREAL_FUNC . '(' expr ')' ';'

    '('  shift, and go to state 164


State 148

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 165


State 149

    5 body: more .  [KW_ELSE, KW_FI, KW_POOL, '}']
   10 more: more . while_loop
   11     | more . if_stmt
   12     | more . decl_list1
   13     | more . printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 5 (body)

    decl_list1       go to state 166
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 167
    while_loop       go to state 168
    printf_func      go to state 169
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 150

    8 more: decl_list1 .

    $default  reduce using rule 8 (more)


State 151

   16 decl_list1: decl .

    $default  reduce using rule 16 (decl_list1)


State 152

    7 more: if_stmt .

    $default  reduce using rule 7 (more)


State 153

    6 more: while_loop .

    $default  reduce using rule 6 (more)


State 154

    9 more: printf_func .

    $default  reduce using rule 9 (more)


State 155

   14 decl_list1: cmd_line .

    $default  reduce using rule 14 (decl_list1)


State 156

   15 decl_list1: comment .

    $default  reduce using rule 15 (decl_list1)


State 157

   28 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . ';'
   29          | ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type . FUNC_START_ARROW '{' body '}' ';'

    FUNC_START_ARROW  shift, and go to state 170
    ';'               shift, and go to state 171


State 158

    4 body: . %empty  ['}']
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' . body '}' ';'
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 172
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 159

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    4 body: . %empty  ['}']
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 173
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 160

   41 if_stmt: KW_IF expr . KW_THEN body KW_ELSE body KW_FI ';'
   42        | KW_IF expr . KW_THEN body KW_FI ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_THEN        shift, and go to state 174
    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72


State 161

   43 while_loop: KW_WHILE expr . KW_LOOP body KW_POOL ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_LOOP        shift, and go to state 175
    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72


State 162

   54 printf_func: WRITESTRING_FUNC '(' . string ')' ';'
   66 string: . STRING

    STRING  shift, and go to state 30

    string  go to state 176


State 163

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   55 printf_func: "teaclib.h" '(' . expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 177


State 164

   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   56 printf_func: WRITEREAL_FUNC '(' . expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   66 string: . STRING
   67 expr: . string
   68     | . function_call
   69     | . ident_form_part
   70     | . '+' expr
   71     | . '-' expr
   72     | . KW_NOT expr
   73     | . POSINT
   74     | . REAL
   75     | . '(' expr ')'
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr '*' expr
   79     | . expr '/' expr
   80     | . expr '%' expr
   81     | . expr EQUAL_OP expr
   82     | . expr NOT_EQUAL_OP expr
   83     | . expr LESS_OP expr
   84     | . expr LESS_EQUAL_OP expr
   85     | . expr KW_AND expr
   86     | . expr KW_OR expr

    KW_NOT           shift, and go to state 28
    IDENTIFIER       shift, and go to state 4
    POSINT           shift, and go to state 29
    STRING           shift, and go to state 30
    REAL             shift, and go to state 31
    READSTRING_FUNC  shift, and go to state 7
    READINT_FUNC     shift, and go to state 8
    READREAL_FUNC    shift, and go to state 9
    '-'              shift, and go to state 32
    '+'              shift, and go to state 33
    '('              shift, and go to state 34

    ident_form_part  go to state 35
    function_call    go to state 36
    string           go to state 37
    expr             go to state 178


State 165

    2 final_form: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 2 (final_form)


State 166

   12 more: more decl_list1 .

    $default  reduce using rule 12 (more)


State 167

   11 more: more if_stmt .

    $default  reduce using rule 11 (more)


State 168

   10 more: more while_loop .

    $default  reduce using rule 10 (more)


State 169

   13 more: more printf_func .

    $default  reduce using rule 13 (more)


State 170

   29 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW . '{' body '}' ';'

    '{'  shift, and go to state 179


State 171

   28 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type ';' .

    $default  reduce using rule 28 (func_decl)


State 172

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body . '}' ';'

    '}'  shift, and go to state 180


State 173

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 181


State 174

    4 body: . %empty  [KW_ELSE, KW_FI]
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   41        | KW_IF expr KW_THEN . body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   42        | KW_IF expr KW_THEN . body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 182
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 175

    4 body: . %empty  [KW_POOL]
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   43           | KW_WHILE expr KW_LOOP . body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 183
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 176

   54 printf_func: WRITESTRING_FUNC '(' string . ')' ';'

    ')'  shift, and go to state 184


State 177

   55 printf_func: "teaclib.h" '(' expr . ')' ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ')'            shift, and go to state 185


State 178

   56 printf_func: WRITEREAL_FUNC '(' expr . ')' ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . EQUAL_OP expr
   82     | expr . NOT_EQUAL_OP expr
   83     | expr . LESS_OP expr
   84     | expr . LESS_EQUAL_OP expr
   85     | expr . KW_AND expr
   86     | expr . KW_OR expr

    KW_AND         shift, and go to state 62
    KW_OR          shift, and go to state 63
    NOT_EQUAL_OP   shift, and go to state 64
    LESS_OP        shift, and go to state 65
    LESS_EQUAL_OP  shift, and go to state 66
    EQUAL_OP       shift, and go to state 67
    '-'            shift, and go to state 68
    '+'            shift, and go to state 69
    '*'            shift, and go to state 70
    '/'            shift, and go to state 71
    '%'            shift, and go to state 72
    ')'            shift, and go to state 186


State 179

    4 body: . %empty  ['}']
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   29 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' . body '}' ';'
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 187
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 180

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' . ';'

    ';'  shift, and go to state 188


State 181

    3 final_form: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 3 (final_form)


State 182

   41 if_stmt: KW_IF expr KW_THEN body . KW_ELSE body KW_FI ';'
   42        | KW_IF expr KW_THEN body . KW_FI ';'

    KW_ELSE  shift, and go to state 189
    KW_FI    shift, and go to state 190


State 183

   43 while_loop: KW_WHILE expr KW_LOOP body . KW_POOL ';'

    KW_POOL  shift, and go to state 191


State 184

   54 printf_func: WRITESTRING_FUNC '(' string ')' . ';'

    ';'  shift, and go to state 192


State 185

   55 printf_func: "teaclib.h" '(' expr ')' . ';'

    ';'  shift, and go to state 193


State 186

   56 printf_func: WRITEREAL_FUNC '(' expr ')' . ';'

    ';'  shift, and go to state 194


State 187

   29 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body . '}' ';'

    '}'  shift, and go to state 195


State 188

   26 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' data_type FUNC_START_ARROW '{' body '}' ';' .

    $default  reduce using rule 26 (func_decl)


State 189

    4 body: . %empty  [KW_FI]
    5     | . more
    6 more: . while_loop
    7     | . if_stmt
    8     | . decl_list1
    9     | . printf_func
   10     | . more while_loop
   11     | . more if_stmt
   12     | . more decl_list1
   13     | . more printf_func
   14 decl_list1: . cmd_line
   15           | . comment
   16           | . decl
   23 decl: . KW_LET decl_body_part
   24     | . KW_CONST decl_body_part_c
   25     | . KW_CONST func_decl
   38 ident_form_part: . IDENTIFIER
   39                | . IDENTIFIER '[' ']'
   40                | . IDENTIFIER '[' expr ']'
   41 if_stmt: . KW_IF expr KW_THEN body KW_ELSE body KW_FI ';'
   41        | KW_IF expr KW_THEN body KW_ELSE . body KW_FI ';'
   42        | . KW_IF expr KW_THEN body KW_FI ';'
   43 while_loop: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   54 printf_func: . WRITESTRING_FUNC '(' string ')' ';'
   55            | . "teaclib.h" '(' expr ')' ';'
   56            | . WRITEREAL_FUNC '(' expr ')' ';'
   57 function_call: . IDENTIFIER '(' func_parameters ')'
   58              | . READSTRING_FUNC '(' ')'
   59              | . READINT_FUNC '(' ')'
   60              | . READREAL_FUNC '(' ')'
   61 cmd_line: . function_call ';'
   62         | . ident_form_part ASSIGN expr ';'
   63         | . KW_RETURN expr ';'
   64 comment: . LINE_COMMENT
   65        | . MLINE_COMMENT

    KW_IF             shift, and go to state 142
    KW_WHILE          shift, and go to state 143
    KW_CONST          shift, and go to state 144
    KW_LET            shift, and go to state 2
    KW_RETURN         shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    LINE_COMMENT      shift, and go to state 5
    MLINE_COMMENT     shift, and go to state 6
    READSTRING_FUNC   shift, and go to state 7
    READINT_FUNC      shift, and go to state 8
    READREAL_FUNC     shift, and go to state 9
    WRITESTRING_FUNC  shift, and go to state 145
    "teaclib.h"       shift, and go to state 146
    WRITEREAL_FUNC    shift, and go to state 147

    $default  reduce using rule 4 (body)

    body             go to state 196
    more             go to state 149
    decl_list1       go to state 150
    decl             go to state 151
    ident_form_part  go to state 14
    if_stmt          go to state 152
    while_loop       go to state 153
    printf_func      go to state 154
    function_call    go to state 15
    cmd_line         go to state 155
    comment          go to state 156


State 190

   42 if_stmt: KW_IF expr KW_THEN body KW_FI . ';'

    ';'  shift, and go to state 197


State 191

   43 while_loop: KW_WHILE expr KW_LOOP body KW_POOL . ';'

    ';'  shift, and go to state 198


State 192

   54 printf_func: WRITESTRING_FUNC '(' string ')' ';' .

    $default  reduce using rule 54 (printf_func)


State 193

   55 printf_func: "teaclib.h" '(' expr ')' ';' .

    $default  reduce using rule 55 (printf_func)


State 194

   56 printf_func: WRITEREAL_FUNC '(' expr ')' ';' .

    $default  reduce using rule 56 (printf_func)


State 195

   29 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' . ';'

    ';'  shift, and go to state 199


State 196

   41 if_stmt: KW_IF expr KW_THEN body KW_ELSE body . KW_FI ';'

    KW_FI  shift, and go to state 200


State 197

   42 if_stmt: KW_IF expr KW_THEN body KW_FI ';' .

    $default  reduce using rule 42 (if_stmt)


State 198

   43 while_loop: KW_WHILE expr KW_LOOP body KW_POOL ';' .

    $default  reduce using rule 43 (while_loop)


State 199

   29 func_decl: ident_form_part ASSIGN '(' func_parameters_decl ')' ':' '[' ']' data_type FUNC_START_ARROW '{' body '}' ';' .

    $default  reduce using rule 29 (func_decl)


State 200

   41 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI . ';'

    ';'  shift, and go to state 201


State 201

   41 if_stmt: KW_IF expr KW_THEN body KW_ELSE body KW_FI ';' .

    $default  reduce using rule 41 (if_stmt)
