Nonterminals useless in grammar

   assignment
   more


Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_REAL
   KW_BOOL
   KW_STRING
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_CONST
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   KW_START
   NOT_EQUAL_OP
   LESS_OP
   LESS_EQUAL_OP
   FUNC_START_ARROW
   STRING


Rules useless in grammar

   20 assignment: IDENTIFIER ASSIGN expr ';'
   21           | assignment IDENTIFIER ASSIGN expr ';'


Grammar

    0 $accept: input $end

    1 input: main

    2 main: IDENTIFIER '(' ')' '{' var_decl '}'

    3 var_decl: KW_LET multiple_ident ':' data_type ';'
    4         | KW_LET var_decl_part ',' multiple_ident ':' data_type ';'
    5         | KW_LET var_decl_part ':' data_type ';'
    6         | var_decl KW_LET var_decl_part ':' data_type ';'

    7 var_decl_part: multiple_ident ASSIGN expr
    8              | var_decl_part ',' multiple_ident ASSIGN expr

    9 multiple_ident: IDENTIFIER
   10               | multiple_ident ',' IDENTIFIER

   11 data_type: KW_INT
   12          | KW_CHAR

   13 expr: POSINT
   14     | REAL
   15     | '(' expr ')'
   16     | expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 15
')' (41) 2 15
'*' (42) 18
'+' (43) 16
',' (44) 4 8 10
'-' (45) 17
'/' (47) 19
':' (58) 3 4 5 6
';' (59) 3 4 5 6
'{' (123) 2
'}' (125) 2
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 11
KW_CHAR (261) 12
KW_REAL (262)
KW_BOOL (263)
KW_STRING (264)
KW_ELSE (265)
KW_IF (266)
KW_THEN (267)
KW_FI (268)
KW_WHILE (269)
KW_LOOP (270)
KW_POOL (271)
KW_CONST (272)
KW_LET (273) 3 4 5 6
KW_RETURN (274)
KW_NOT (275)
KW_AND (276)
KW_OR (277)
KW_START (278)
NOT_EQUAL_OP (279)
LESS_OP (280)
LESS_EQUAL_OP (281)
FUNC_START_ARROW (282)
IDENTIFIER (283) 2 9 10
POSINT (284) 13
STRING (285)
REAL (286) 14
ASSIGN (287) 7 8


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
input (45)
    on left: 1, on right: 0
main (46)
    on left: 2, on right: 1
var_decl (47)
    on left: 3 4 5 6, on right: 2 6
var_decl_part (48)
    on left: 7 8, on right: 4 5 6 8
multiple_ident (49)
    on left: 9 10, on right: 3 4 7 8 10
data_type (50)
    on left: 11 12, on right: 3 4 5 6
expr (51)
    on left: 13 14 15 16 17 18 19, on right: 7 8 15 16 17 18 19


State 0

    0 $accept: . input $end
    1 input: . main
    2 main: . IDENTIFIER '(' ')' '{' var_decl '}'

    IDENTIFIER  shift, and go to state 1

    input  go to state 2
    main   go to state 3


State 1

    2 main: IDENTIFIER . '(' ')' '{' var_decl '}'

    '('  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    1 input: main .

    $default  reduce using rule 1 (input)


State 4

    2 main: IDENTIFIER '(' . ')' '{' var_decl '}'

    ')'  shift, and go to state 6


State 5

    0 $accept: input $end .

    $default  accept


State 6

    2 main: IDENTIFIER '(' ')' . '{' var_decl '}'

    '{'  shift, and go to state 7


State 7

    2 main: IDENTIFIER '(' ')' '{' . var_decl '}'
    3 var_decl: . KW_LET multiple_ident ':' data_type ';'
    4         | . KW_LET var_decl_part ',' multiple_ident ':' data_type ';'
    5         | . KW_LET var_decl_part ':' data_type ';'
    6         | . var_decl KW_LET var_decl_part ':' data_type ';'

    KW_LET  shift, and go to state 8

    var_decl  go to state 9


State 8

    3 var_decl: KW_LET . multiple_ident ':' data_type ';'
    4         | KW_LET . var_decl_part ',' multiple_ident ':' data_type ';'
    5         | KW_LET . var_decl_part ':' data_type ';'
    7 var_decl_part: . multiple_ident ASSIGN expr
    8              | . var_decl_part ',' multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . multiple_ident ',' IDENTIFIER

    IDENTIFIER  shift, and go to state 10

    var_decl_part   go to state 11
    multiple_ident  go to state 12


State 9

    2 main: IDENTIFIER '(' ')' '{' var_decl . '}'
    6 var_decl: var_decl . KW_LET var_decl_part ':' data_type ';'

    KW_LET  shift, and go to state 13
    '}'     shift, and go to state 14


State 10

    9 multiple_ident: IDENTIFIER .

    $default  reduce using rule 9 (multiple_ident)


State 11

    4 var_decl: KW_LET var_decl_part . ',' multiple_ident ':' data_type ';'
    5         | KW_LET var_decl_part . ':' data_type ';'
    8 var_decl_part: var_decl_part . ',' multiple_ident ASSIGN expr

    ':'  shift, and go to state 15
    ','  shift, and go to state 16


State 12

    3 var_decl: KW_LET multiple_ident . ':' data_type ';'
    7 var_decl_part: multiple_ident . ASSIGN expr
   10 multiple_ident: multiple_ident . ',' IDENTIFIER

    ASSIGN  shift, and go to state 17
    ':'     shift, and go to state 18
    ','     shift, and go to state 19


State 13

    6 var_decl: var_decl KW_LET . var_decl_part ':' data_type ';'
    7 var_decl_part: . multiple_ident ASSIGN expr
    8              | . var_decl_part ',' multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . multiple_ident ',' IDENTIFIER

    IDENTIFIER  shift, and go to state 10

    var_decl_part   go to state 20
    multiple_ident  go to state 21


State 14

    2 main: IDENTIFIER '(' ')' '{' var_decl '}' .

    $default  reduce using rule 2 (main)


State 15

    5 var_decl: KW_LET var_decl_part ':' . data_type ';'
   11 data_type: . KW_INT
   12          | . KW_CHAR

    KW_INT   shift, and go to state 22
    KW_CHAR  shift, and go to state 23

    data_type  go to state 24


State 16

    4 var_decl: KW_LET var_decl_part ',' . multiple_ident ':' data_type ';'
    8 var_decl_part: var_decl_part ',' . multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . multiple_ident ',' IDENTIFIER

    IDENTIFIER  shift, and go to state 10

    multiple_ident  go to state 25


State 17

    7 var_decl_part: multiple_ident ASSIGN . expr
   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 29


State 18

    3 var_decl: KW_LET multiple_ident ':' . data_type ';'
   11 data_type: . KW_INT
   12          | . KW_CHAR

    KW_INT   shift, and go to state 22
    KW_CHAR  shift, and go to state 23

    data_type  go to state 30


State 19

   10 multiple_ident: multiple_ident ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 31


State 20

    6 var_decl: var_decl KW_LET var_decl_part . ':' data_type ';'
    8 var_decl_part: var_decl_part . ',' multiple_ident ASSIGN expr

    ':'  shift, and go to state 32
    ','  shift, and go to state 33


State 21

    7 var_decl_part: multiple_ident . ASSIGN expr
   10 multiple_ident: multiple_ident . ',' IDENTIFIER

    ASSIGN  shift, and go to state 17
    ','     shift, and go to state 19


State 22

   11 data_type: KW_INT .

    $default  reduce using rule 11 (data_type)


State 23

   12 data_type: KW_CHAR .

    $default  reduce using rule 12 (data_type)


State 24

    5 var_decl: KW_LET var_decl_part ':' data_type . ';'

    ';'  shift, and go to state 34


State 25

    4 var_decl: KW_LET var_decl_part ',' multiple_ident . ':' data_type ';'
    8 var_decl_part: var_decl_part ',' multiple_ident . ASSIGN expr
   10 multiple_ident: multiple_ident . ',' IDENTIFIER

    ASSIGN  shift, and go to state 35
    ':'     shift, and go to state 36
    ','     shift, and go to state 19


State 26

   13 expr: POSINT .

    $default  reduce using rule 13 (expr)


State 27

   14 expr: REAL .

    $default  reduce using rule 14 (expr)


State 28

   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   15     | '(' . expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 37


State 29

    7 var_decl_part: multiple_ident ASSIGN expr .  [':', ',']
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 7 (var_decl_part)


State 30

    3 var_decl: KW_LET multiple_ident ':' data_type . ';'

    ';'  shift, and go to state 42


State 31

   10 multiple_ident: multiple_ident ',' IDENTIFIER .

    $default  reduce using rule 10 (multiple_ident)


State 32

    6 var_decl: var_decl KW_LET var_decl_part ':' . data_type ';'
   11 data_type: . KW_INT
   12          | . KW_CHAR

    KW_INT   shift, and go to state 22
    KW_CHAR  shift, and go to state 23

    data_type  go to state 43


State 33

    8 var_decl_part: var_decl_part ',' . multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . multiple_ident ',' IDENTIFIER

    IDENTIFIER  shift, and go to state 10

    multiple_ident  go to state 44


State 34

    5 var_decl: KW_LET var_decl_part ':' data_type ';' .

    $default  reduce using rule 5 (var_decl)


State 35

    8 var_decl_part: var_decl_part ',' multiple_ident ASSIGN . expr
   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 45


State 36

    4 var_decl: KW_LET var_decl_part ',' multiple_ident ':' . data_type ';'
   11 data_type: . KW_INT
   12          | . KW_CHAR

    KW_INT   shift, and go to state 22
    KW_CHAR  shift, and go to state 23

    data_type  go to state 46


State 37

   15 expr: '(' expr . ')'
   16     | expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ')'  shift, and go to state 47


State 38

   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   17     | expr '-' . expr
   18     | . expr '*' expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 48


State 39

   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   16     | expr '+' . expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 49


State 40

   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   18     | expr '*' . expr
   19     | . expr '/' expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 50


State 41

   13 expr: . POSINT
   14     | . REAL
   15     | . '(' expr ')'
   16     | . expr '+' expr
   17     | . expr '-' expr
   18     | . expr '*' expr
   19     | . expr '/' expr
   19     | expr '/' . expr

    POSINT  shift, and go to state 26
    REAL    shift, and go to state 27
    '('     shift, and go to state 28

    expr  go to state 51


State 42

    3 var_decl: KW_LET multiple_ident ':' data_type ';' .

    $default  reduce using rule 3 (var_decl)


State 43

    6 var_decl: var_decl KW_LET var_decl_part ':' data_type . ';'

    ';'  shift, and go to state 52


State 44

    8 var_decl_part: var_decl_part ',' multiple_ident . ASSIGN expr
   10 multiple_ident: multiple_ident . ',' IDENTIFIER

    ASSIGN  shift, and go to state 35
    ','     shift, and go to state 19


State 45

    8 var_decl_part: var_decl_part ',' multiple_ident ASSIGN expr .  [':', ',']
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 8 (var_decl_part)


State 46

    4 var_decl: KW_LET var_decl_part ',' multiple_ident ':' data_type . ';'

    ';'  shift, and go to state 53


State 47

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


State 48

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .  ['-', '+', ')', ':', ',']
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 17 (expr)

    Conflict between rule 17 and token '-' resolved as reduce (%left '-').
    Conflict between rule 17 and token '+' resolved as reduce (%left '+').
    Conflict between rule 17 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 17 and token '/' resolved as shift ('-' < '/').


State 49

   16 expr: expr . '+' expr
   16     | expr '+' expr .  ['-', '+', ')', ':', ',']
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 16 (expr)

    Conflict between rule 16 and token '-' resolved as reduce (%left '-').
    Conflict between rule 16 and token '+' resolved as reduce (%left '+').
    Conflict between rule 16 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 16 and token '/' resolved as shift ('+' < '/').


State 50

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .  ['-', '+', '*', '/', ')', ':', ',']
   19     | expr . '/' expr

    $default  reduce using rule 18 (expr)

    Conflict between rule 18 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 18 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 18 and token '*' resolved as reduce (%left '*').
    Conflict between rule 18 and token '/' resolved as reduce (%left '/').


State 51

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .  ['-', '+', '*', '/', ')', ':', ',']

    $default  reduce using rule 19 (expr)

    Conflict between rule 19 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 19 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 19 and token '*' resolved as reduce (%left '*').
    Conflict between rule 19 and token '/' resolved as reduce (%left '/').


State 52

    6 var_decl: var_decl KW_LET var_decl_part ':' data_type ';' .

    $default  reduce using rule 6 (var_decl)


State 53

    4 var_decl: KW_LET var_decl_part ',' multiple_ident ':' data_type ';' .

    $default  reduce using rule 4 (var_decl)
