Terminals unused in grammar

   KW_FALSE
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_CONST
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   KW_START
   NOT_EQUAL_OP
   LESS_OP
   LESS_EQUAL_OP
   FUNC_START_ARROW
   STRING


Grammar

    0 $accept: input $end

    1 input: main

    2 main: IDENTIFIER '(' ')' '{' main_internals '}'

    3 main_internals: var_decl ';'
    4               | if_st ';'
    5               | main_internals if_st ';'
    6               | main_internals var_decl ';'

    7 if_st: KW_TRUE

    8 var_decl: IDENTIFIER ASSIGN expr
    9         | KW_LET multiple_ident ':' data_type
   10         | KW_LET var_decl_part ':' data_type
   11         | KW_LET var_decl_part ',' multiple_ident ':' data_type

   12 var_decl_part: multiple_ident ASSIGN expr
   13              | var_decl_part ',' multiple_ident ASSIGN expr

   14 multiple_ident: IDENTIFIER
   15               | IDENTIFIER '[' POSINT ']'
   16               | multiple_ident ',' IDENTIFIER
   17               | multiple_ident ',' IDENTIFIER '[' POSINT ']'

   18 data_type: KW_INT
   19          | KW_BOOL
   20          | KW_REAL
   21          | KW_STRING

   22 expr: POSINT
   23     | REAL
   24     | '(' expr ')'
   25     | expr '+' expr
   26     | expr '-' expr
   27     | expr '*' expr
   28     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 24
')' (41) 2 24
'*' (42) 27
'+' (43) 25
',' (44) 11 13 16 17
'-' (45) 26
'/' (47) 28
':' (58) 9 10 11
';' (59) 3 4 5 6
'[' (91) 15 17
']' (93) 15 17
'{' (123) 2
'}' (125) 2
error (256)
KW_TRUE (258) 7
KW_FALSE (259)
KW_INT (260) 18
KW_REAL (261) 20
KW_BOOL (262) 19
KW_STRING (263) 21
KW_ELSE (264)
KW_IF (265)
KW_THEN (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271)
KW_LET (272) 9 10 11
KW_RETURN (273)
KW_NOT (274)
KW_AND (275)
KW_OR (276)
KW_START (277)
NOT_EQUAL_OP (278)
LESS_OP (279)
LESS_EQUAL_OP (280)
FUNC_START_ARROW (281)
IDENTIFIER (282) 2 8 14 15 16 17
POSINT (283) 15 17 22
STRING (284)
REAL (285) 23
ASSIGN (286) 8 12 13


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
input (46)
    on left: 1, on right: 0
main (47)
    on left: 2, on right: 1
main_internals (48)
    on left: 3 4 5 6, on right: 2 5 6
if_st (49)
    on left: 7, on right: 4 5
var_decl (50)
    on left: 8 9 10 11, on right: 3 6
var_decl_part (51)
    on left: 12 13, on right: 10 11 13
multiple_ident (52)
    on left: 14 15 16 17, on right: 9 11 12 13 16 17
data_type (53)
    on left: 18 19 20 21, on right: 9 10 11
expr (54)
    on left: 22 23 24 25 26 27 28, on right: 8 12 13 24 25 26 27 28


State 0

    0 $accept: . input $end
    1 input: . main
    2 main: . IDENTIFIER '(' ')' '{' main_internals '}'

    IDENTIFIER  shift, and go to state 1

    input  go to state 2
    main   go to state 3


State 1

    2 main: IDENTIFIER . '(' ')' '{' main_internals '}'

    '('  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    1 input: main .

    $default  reduce using rule 1 (input)


State 4

    2 main: IDENTIFIER '(' . ')' '{' main_internals '}'

    ')'  shift, and go to state 6


State 5

    0 $accept: input $end .

    $default  accept


State 6

    2 main: IDENTIFIER '(' ')' . '{' main_internals '}'

    '{'  shift, and go to state 7


State 7

    2 main: IDENTIFIER '(' ')' '{' . main_internals '}'
    3 main_internals: . var_decl ';'
    4               | . if_st ';'
    5               | . main_internals if_st ';'
    6               | . main_internals var_decl ';'
    7 if_st: . KW_TRUE
    8 var_decl: . IDENTIFIER ASSIGN expr
    9         | . KW_LET multiple_ident ':' data_type
   10         | . KW_LET var_decl_part ':' data_type
   11         | . KW_LET var_decl_part ',' multiple_ident ':' data_type

    KW_TRUE     shift, and go to state 8
    KW_LET      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    main_internals  go to state 11
    if_st           go to state 12
    var_decl        go to state 13


State 8

    7 if_st: KW_TRUE .

    $default  reduce using rule 7 (if_st)


State 9

    9 var_decl: KW_LET . multiple_ident ':' data_type
   10         | KW_LET . var_decl_part ':' data_type
   11         | KW_LET . var_decl_part ',' multiple_ident ':' data_type
   12 var_decl_part: . multiple_ident ASSIGN expr
   13              | . var_decl_part ',' multiple_ident ASSIGN expr
   14 multiple_ident: . IDENTIFIER
   15               | . IDENTIFIER '[' POSINT ']'
   16               | . multiple_ident ',' IDENTIFIER
   17               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 14

    var_decl_part   go to state 15
    multiple_ident  go to state 16


State 10

    8 var_decl: IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 17


State 11

    2 main: IDENTIFIER '(' ')' '{' main_internals . '}'
    5 main_internals: main_internals . if_st ';'
    6               | main_internals . var_decl ';'
    7 if_st: . KW_TRUE
    8 var_decl: . IDENTIFIER ASSIGN expr
    9         | . KW_LET multiple_ident ':' data_type
   10         | . KW_LET var_decl_part ':' data_type
   11         | . KW_LET var_decl_part ',' multiple_ident ':' data_type

    KW_TRUE     shift, and go to state 8
    KW_LET      shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    '}'         shift, and go to state 18

    if_st     go to state 19
    var_decl  go to state 20


State 12

    4 main_internals: if_st . ';'

    ';'  shift, and go to state 21


State 13

    3 main_internals: var_decl . ';'

    ';'  shift, and go to state 22


State 14

   14 multiple_ident: IDENTIFIER .  [ASSIGN, ':', ',']
   15               | IDENTIFIER . '[' POSINT ']'

    '['  shift, and go to state 23

    $default  reduce using rule 14 (multiple_ident)


State 15

   10 var_decl: KW_LET var_decl_part . ':' data_type
   11         | KW_LET var_decl_part . ',' multiple_ident ':' data_type
   13 var_decl_part: var_decl_part . ',' multiple_ident ASSIGN expr

    ':'  shift, and go to state 24
    ','  shift, and go to state 25


State 16

    9 var_decl: KW_LET multiple_ident . ':' data_type
   12 var_decl_part: multiple_ident . ASSIGN expr
   16 multiple_ident: multiple_ident . ',' IDENTIFIER
   17               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 26
    ':'     shift, and go to state 27
    ','     shift, and go to state 28


State 17

    8 var_decl: IDENTIFIER ASSIGN . expr
   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 32


State 18

    2 main: IDENTIFIER '(' ')' '{' main_internals '}' .

    $default  reduce using rule 2 (main)


State 19

    5 main_internals: main_internals if_st . ';'

    ';'  shift, and go to state 33


State 20

    6 main_internals: main_internals var_decl . ';'

    ';'  shift, and go to state 34


State 21

    4 main_internals: if_st ';' .

    $default  reduce using rule 4 (main_internals)


State 22

    3 main_internals: var_decl ';' .

    $default  reduce using rule 3 (main_internals)


State 23

   15 multiple_ident: IDENTIFIER '[' . POSINT ']'

    POSINT  shift, and go to state 35


State 24

   10 var_decl: KW_LET var_decl_part ':' . data_type
   18 data_type: . KW_INT
   19          | . KW_BOOL
   20          | . KW_REAL
   21          | . KW_STRING

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_BOOL    shift, and go to state 38
    KW_STRING  shift, and go to state 39

    data_type  go to state 40


State 25

   11 var_decl: KW_LET var_decl_part ',' . multiple_ident ':' data_type
   13 var_decl_part: var_decl_part ',' . multiple_ident ASSIGN expr
   14 multiple_ident: . IDENTIFIER
   15               | . IDENTIFIER '[' POSINT ']'
   16               | . multiple_ident ',' IDENTIFIER
   17               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 14

    multiple_ident  go to state 41


State 26

   12 var_decl_part: multiple_ident ASSIGN . expr
   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 42


State 27

    9 var_decl: KW_LET multiple_ident ':' . data_type
   18 data_type: . KW_INT
   19          | . KW_BOOL
   20          | . KW_REAL
   21          | . KW_STRING

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_BOOL    shift, and go to state 38
    KW_STRING  shift, and go to state 39

    data_type  go to state 43


State 28

   16 multiple_ident: multiple_ident ',' . IDENTIFIER
   17               | multiple_ident ',' . IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 44


State 29

   22 expr: POSINT .

    $default  reduce using rule 22 (expr)


State 30

   23 expr: REAL .

    $default  reduce using rule 23 (expr)


State 31

   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   24     | '(' . expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 45


State 32

    8 var_decl: IDENTIFIER ASSIGN expr .  [';']
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 8 (var_decl)


State 33

    5 main_internals: main_internals if_st ';' .

    $default  reduce using rule 5 (main_internals)


State 34

    6 main_internals: main_internals var_decl ';' .

    $default  reduce using rule 6 (main_internals)


State 35

   15 multiple_ident: IDENTIFIER '[' POSINT . ']'

    ']'  shift, and go to state 50


State 36

   18 data_type: KW_INT .

    $default  reduce using rule 18 (data_type)


State 37

   20 data_type: KW_REAL .

    $default  reduce using rule 20 (data_type)


State 38

   19 data_type: KW_BOOL .

    $default  reduce using rule 19 (data_type)


State 39

   21 data_type: KW_STRING .

    $default  reduce using rule 21 (data_type)


State 40

   10 var_decl: KW_LET var_decl_part ':' data_type .

    $default  reduce using rule 10 (var_decl)


State 41

   11 var_decl: KW_LET var_decl_part ',' multiple_ident . ':' data_type
   13 var_decl_part: var_decl_part ',' multiple_ident . ASSIGN expr
   16 multiple_ident: multiple_ident . ',' IDENTIFIER
   17               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 51
    ':'     shift, and go to state 52
    ','     shift, and go to state 28


State 42

   12 var_decl_part: multiple_ident ASSIGN expr .  [':', ',']
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 12 (var_decl_part)


State 43

    9 var_decl: KW_LET multiple_ident ':' data_type .

    $default  reduce using rule 9 (var_decl)


State 44

   16 multiple_ident: multiple_ident ',' IDENTIFIER .  [ASSIGN, ':', ',']
   17               | multiple_ident ',' IDENTIFIER . '[' POSINT ']'

    '['  shift, and go to state 53

    $default  reduce using rule 16 (multiple_ident)


State 45

   24 expr: '(' expr . ')'
   25     | expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ')'  shift, and go to state 54


State 46

   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   26     | expr '-' . expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 55


State 47

   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   25     | expr '+' . expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 56


State 48

   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   27     | expr '*' . expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 57


State 49

   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr
   28     | expr '/' . expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 58


State 50

   15 multiple_ident: IDENTIFIER '[' POSINT ']' .

    $default  reduce using rule 15 (multiple_ident)


State 51

   13 var_decl_part: var_decl_part ',' multiple_ident ASSIGN . expr
   22 expr: . POSINT
   23     | . REAL
   24     | . '(' expr ')'
   25     | . expr '+' expr
   26     | . expr '-' expr
   27     | . expr '*' expr
   28     | . expr '/' expr

    POSINT  shift, and go to state 29
    REAL    shift, and go to state 30
    '('     shift, and go to state 31

    expr  go to state 59


State 52

   11 var_decl: KW_LET var_decl_part ',' multiple_ident ':' . data_type
   18 data_type: . KW_INT
   19          | . KW_BOOL
   20          | . KW_REAL
   21          | . KW_STRING

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_BOOL    shift, and go to state 38
    KW_STRING  shift, and go to state 39

    data_type  go to state 60


State 53

   17 multiple_ident: multiple_ident ',' IDENTIFIER '[' . POSINT ']'

    POSINT  shift, and go to state 61


State 54

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


State 55

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   26     | expr '-' expr .  ['-', '+', ')', ';', ':', ',']
   27     | expr . '*' expr
   28     | expr . '/' expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '-' resolved as reduce (%left '-').
    Conflict between rule 26 and token '+' resolved as reduce (%left '+').
    Conflict between rule 26 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 26 and token '/' resolved as shift ('-' < '/').


State 56

   25 expr: expr . '+' expr
   25     | expr '+' expr .  ['-', '+', ')', ';', ':', ',']
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token '-' resolved as reduce (%left '-').
    Conflict between rule 25 and token '+' resolved as reduce (%left '+').
    Conflict between rule 25 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 25 and token '/' resolved as shift ('+' < '/').


State 57

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   27     | expr '*' expr .  ['-', '+', '*', '/', ')', ';', ':', ',']
   28     | expr . '/' expr

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 27 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 27 and token '*' resolved as reduce (%left '*').
    Conflict between rule 27 and token '/' resolved as reduce (%left '/').


State 58

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   28     | expr '/' expr .  ['-', '+', '*', '/', ')', ';', ':', ',']

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 28 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 28 and token '*' resolved as reduce (%left '*').
    Conflict between rule 28 and token '/' resolved as reduce (%left '/').


State 59

   13 var_decl_part: var_decl_part ',' multiple_ident ASSIGN expr .  [':', ',']
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 13 (var_decl_part)


State 60

   11 var_decl: KW_LET var_decl_part ',' multiple_ident ':' data_type .

    $default  reduce using rule 11 (var_decl)


State 61

   17 multiple_ident: multiple_ident ',' IDENTIFIER '[' POSINT . ']'

    ']'  shift, and go to state 62


State 62

   17 multiple_ident: multiple_ident ',' IDENTIFIER '[' POSINT ']' .

    $default  reduce using rule 17 (multiple_ident)
