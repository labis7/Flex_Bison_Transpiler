Nonterminals useless in grammar

   assignment
   more


Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_BOOL
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_CONST
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   KW_START
   NOT_EQUAL_OP
   LESS_OP
   LESS_EQUAL_OP
   FUNC_START_ARROW
   STRING


Rules useless in grammar

   24 assignment: IDENTIFIER ASSIGN expr ';'
   25           | assignment IDENTIFIER ASSIGN expr ';'


Grammar

    0 $accept: input $end

    1 input: main

    2 main: IDENTIFIER '(' ')' '{' var_decl '}'

    3 var_decl: KW_LET multiple_ident ':' data_type ';'
    4         | KW_LET var_decl_part ':' data_type ';'
    5         | KW_LET var_decl_part ',' multiple_ident ':' data_type ';'
    6         | var_decl KW_LET var_decl_part ':' data_type ';'

    7 var_decl_part: multiple_ident ASSIGN expr
    8              | var_decl_part ',' multiple_ident ASSIGN expr

    9 multiple_ident: IDENTIFIER
   10               | IDENTIFIER '[' POSINT ']'
   11               | multiple_ident ',' IDENTIFIER
   12               | multiple_ident ',' IDENTIFIER '[' POSINT ']'

   13 data_type: KW_INT
   14          | KW_CHAR
   15          | KW_REAL
   16          | KW_STRING

   17 expr: POSINT
   18     | REAL
   19     | '(' expr ')'
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 19
')' (41) 2 19
'*' (42) 22
'+' (43) 20
',' (44) 5 8 11 12
'-' (45) 21
'/' (47) 23
':' (58) 3 4 5 6
';' (59) 3 4 5 6
'[' (91) 10 12
']' (93) 10 12
'{' (123) 2
'}' (125) 2
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 13
KW_CHAR (261) 14
KW_REAL (262) 15
KW_BOOL (263)
KW_STRING (264) 16
KW_ELSE (265)
KW_IF (266)
KW_THEN (267)
KW_FI (268)
KW_WHILE (269)
KW_LOOP (270)
KW_POOL (271)
KW_CONST (272)
KW_LET (273) 3 4 5 6
KW_RETURN (274)
KW_NOT (275)
KW_AND (276)
KW_OR (277)
KW_START (278)
NOT_EQUAL_OP (279)
LESS_OP (280)
LESS_EQUAL_OP (281)
FUNC_START_ARROW (282)
IDENTIFIER (283) 2 9 10 11 12
POSINT (284) 10 12 17
STRING (285)
REAL (286) 18
ASSIGN (287) 7 8


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
input (47)
    on left: 1, on right: 0
main (48)
    on left: 2, on right: 1
var_decl (49)
    on left: 3 4 5 6, on right: 2 6
var_decl_part (50)
    on left: 7 8, on right: 4 5 6 8
multiple_ident (51)
    on left: 9 10 11 12, on right: 3 5 7 8 11 12
data_type (52)
    on left: 13 14 15 16, on right: 3 4 5 6
expr (53)
    on left: 17 18 19 20 21 22 23, on right: 7 8 19 20 21 22 23


State 0

    0 $accept: . input $end
    1 input: . main
    2 main: . IDENTIFIER '(' ')' '{' var_decl '}'

    IDENTIFIER  shift, and go to state 1

    input  go to state 2
    main   go to state 3


State 1

    2 main: IDENTIFIER . '(' ')' '{' var_decl '}'

    '('  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    1 input: main .

    $default  reduce using rule 1 (input)


State 4

    2 main: IDENTIFIER '(' . ')' '{' var_decl '}'

    ')'  shift, and go to state 6


State 5

    0 $accept: input $end .

    $default  accept


State 6

    2 main: IDENTIFIER '(' ')' . '{' var_decl '}'

    '{'  shift, and go to state 7


State 7

    2 main: IDENTIFIER '(' ')' '{' . var_decl '}'
    3 var_decl: . KW_LET multiple_ident ':' data_type ';'
    4         | . KW_LET var_decl_part ':' data_type ';'
    5         | . KW_LET var_decl_part ',' multiple_ident ':' data_type ';'
    6         | . var_decl KW_LET var_decl_part ':' data_type ';'

    KW_LET  shift, and go to state 8

    var_decl  go to state 9


State 8

    3 var_decl: KW_LET . multiple_ident ':' data_type ';'
    4         | KW_LET . var_decl_part ':' data_type ';'
    5         | KW_LET . var_decl_part ',' multiple_ident ':' data_type ';'
    7 var_decl_part: . multiple_ident ASSIGN expr
    8              | . var_decl_part ',' multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . IDENTIFIER '[' POSINT ']'
   11               | . multiple_ident ',' IDENTIFIER
   12               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 10

    var_decl_part   go to state 11
    multiple_ident  go to state 12


State 9

    2 main: IDENTIFIER '(' ')' '{' var_decl . '}'
    6 var_decl: var_decl . KW_LET var_decl_part ':' data_type ';'

    KW_LET  shift, and go to state 13
    '}'     shift, and go to state 14


State 10

    9 multiple_ident: IDENTIFIER .  [ASSIGN, ':', ',']
   10               | IDENTIFIER . '[' POSINT ']'

    '['  shift, and go to state 15

    $default  reduce using rule 9 (multiple_ident)


State 11

    4 var_decl: KW_LET var_decl_part . ':' data_type ';'
    5         | KW_LET var_decl_part . ',' multiple_ident ':' data_type ';'
    8 var_decl_part: var_decl_part . ',' multiple_ident ASSIGN expr

    ':'  shift, and go to state 16
    ','  shift, and go to state 17


State 12

    3 var_decl: KW_LET multiple_ident . ':' data_type ';'
    7 var_decl_part: multiple_ident . ASSIGN expr
   11 multiple_ident: multiple_ident . ',' IDENTIFIER
   12               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 18
    ':'     shift, and go to state 19
    ','     shift, and go to state 20


State 13

    6 var_decl: var_decl KW_LET . var_decl_part ':' data_type ';'
    7 var_decl_part: . multiple_ident ASSIGN expr
    8              | . var_decl_part ',' multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . IDENTIFIER '[' POSINT ']'
   11               | . multiple_ident ',' IDENTIFIER
   12               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 10

    var_decl_part   go to state 21
    multiple_ident  go to state 22


State 14

    2 main: IDENTIFIER '(' ')' '{' var_decl '}' .

    $default  reduce using rule 2 (main)


State 15

   10 multiple_ident: IDENTIFIER '[' . POSINT ']'

    POSINT  shift, and go to state 23


State 16

    4 var_decl: KW_LET var_decl_part ':' . data_type ';'
   13 data_type: . KW_INT
   14          | . KW_CHAR
   15          | . KW_REAL
   16          | . KW_STRING

    KW_INT     shift, and go to state 24
    KW_CHAR    shift, and go to state 25
    KW_REAL    shift, and go to state 26
    KW_STRING  shift, and go to state 27

    data_type  go to state 28


State 17

    5 var_decl: KW_LET var_decl_part ',' . multiple_ident ':' data_type ';'
    8 var_decl_part: var_decl_part ',' . multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . IDENTIFIER '[' POSINT ']'
   11               | . multiple_ident ',' IDENTIFIER
   12               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 10

    multiple_ident  go to state 29


State 18

    7 var_decl_part: multiple_ident ASSIGN . expr
   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 33


State 19

    3 var_decl: KW_LET multiple_ident ':' . data_type ';'
   13 data_type: . KW_INT
   14          | . KW_CHAR
   15          | . KW_REAL
   16          | . KW_STRING

    KW_INT     shift, and go to state 24
    KW_CHAR    shift, and go to state 25
    KW_REAL    shift, and go to state 26
    KW_STRING  shift, and go to state 27

    data_type  go to state 34


State 20

   11 multiple_ident: multiple_ident ',' . IDENTIFIER
   12               | multiple_ident ',' . IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 35


State 21

    6 var_decl: var_decl KW_LET var_decl_part . ':' data_type ';'
    8 var_decl_part: var_decl_part . ',' multiple_ident ASSIGN expr

    ':'  shift, and go to state 36
    ','  shift, and go to state 37


State 22

    7 var_decl_part: multiple_ident . ASSIGN expr
   11 multiple_ident: multiple_ident . ',' IDENTIFIER
   12               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 18
    ','     shift, and go to state 20


State 23

   10 multiple_ident: IDENTIFIER '[' POSINT . ']'

    ']'  shift, and go to state 38


State 24

   13 data_type: KW_INT .

    $default  reduce using rule 13 (data_type)


State 25

   14 data_type: KW_CHAR .

    $default  reduce using rule 14 (data_type)


State 26

   15 data_type: KW_REAL .

    $default  reduce using rule 15 (data_type)


State 27

   16 data_type: KW_STRING .

    $default  reduce using rule 16 (data_type)


State 28

    4 var_decl: KW_LET var_decl_part ':' data_type . ';'

    ';'  shift, and go to state 39


State 29

    5 var_decl: KW_LET var_decl_part ',' multiple_ident . ':' data_type ';'
    8 var_decl_part: var_decl_part ',' multiple_ident . ASSIGN expr
   11 multiple_ident: multiple_ident . ',' IDENTIFIER
   12               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 40
    ':'     shift, and go to state 41
    ','     shift, and go to state 20


State 30

   17 expr: POSINT .

    $default  reduce using rule 17 (expr)


State 31

   18 expr: REAL .

    $default  reduce using rule 18 (expr)


State 32

   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   19     | '(' . expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 42


State 33

    7 var_decl_part: multiple_ident ASSIGN expr .  [':', ',']
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '-'  shift, and go to state 43
    '+'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 7 (var_decl_part)


State 34

    3 var_decl: KW_LET multiple_ident ':' data_type . ';'

    ';'  shift, and go to state 47


State 35

   11 multiple_ident: multiple_ident ',' IDENTIFIER .  [ASSIGN, ':', ',']
   12               | multiple_ident ',' IDENTIFIER . '[' POSINT ']'

    '['  shift, and go to state 48

    $default  reduce using rule 11 (multiple_ident)


State 36

    6 var_decl: var_decl KW_LET var_decl_part ':' . data_type ';'
   13 data_type: . KW_INT
   14          | . KW_CHAR
   15          | . KW_REAL
   16          | . KW_STRING

    KW_INT     shift, and go to state 24
    KW_CHAR    shift, and go to state 25
    KW_REAL    shift, and go to state 26
    KW_STRING  shift, and go to state 27

    data_type  go to state 49


State 37

    8 var_decl_part: var_decl_part ',' . multiple_ident ASSIGN expr
    9 multiple_ident: . IDENTIFIER
   10               | . IDENTIFIER '[' POSINT ']'
   11               | . multiple_ident ',' IDENTIFIER
   12               | . multiple_ident ',' IDENTIFIER '[' POSINT ']'

    IDENTIFIER  shift, and go to state 10

    multiple_ident  go to state 50


State 38

   10 multiple_ident: IDENTIFIER '[' POSINT ']' .

    $default  reduce using rule 10 (multiple_ident)


State 39

    4 var_decl: KW_LET var_decl_part ':' data_type ';' .

    $default  reduce using rule 4 (var_decl)


State 40

    8 var_decl_part: var_decl_part ',' multiple_ident ASSIGN . expr
   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 51


State 41

    5 var_decl: KW_LET var_decl_part ',' multiple_ident ':' . data_type ';'
   13 data_type: . KW_INT
   14          | . KW_CHAR
   15          | . KW_REAL
   16          | . KW_STRING

    KW_INT     shift, and go to state 24
    KW_CHAR    shift, and go to state 25
    KW_REAL    shift, and go to state 26
    KW_STRING  shift, and go to state 27

    data_type  go to state 52


State 42

   19 expr: '(' expr . ')'
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '-'  shift, and go to state 43
    '+'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 53


State 43

   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   21     | expr '-' . expr
   22     | . expr '*' expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 54


State 44

   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   20     | expr '+' . expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 55


State 45

   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   22     | expr '*' . expr
   23     | . expr '/' expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 56


State 46

   17 expr: . POSINT
   18     | . REAL
   19     | . '(' expr ')'
   20     | . expr '+' expr
   21     | . expr '-' expr
   22     | . expr '*' expr
   23     | . expr '/' expr
   23     | expr '/' . expr

    POSINT  shift, and go to state 30
    REAL    shift, and go to state 31
    '('     shift, and go to state 32

    expr  go to state 57


State 47

    3 var_decl: KW_LET multiple_ident ':' data_type ';' .

    $default  reduce using rule 3 (var_decl)


State 48

   12 multiple_ident: multiple_ident ',' IDENTIFIER '[' . POSINT ']'

    POSINT  shift, and go to state 58


State 49

    6 var_decl: var_decl KW_LET var_decl_part ':' data_type . ';'

    ';'  shift, and go to state 59


State 50

    8 var_decl_part: var_decl_part ',' multiple_ident . ASSIGN expr
   11 multiple_ident: multiple_ident . ',' IDENTIFIER
   12               | multiple_ident . ',' IDENTIFIER '[' POSINT ']'

    ASSIGN  shift, and go to state 40
    ','     shift, and go to state 20


State 51

    8 var_decl_part: var_decl_part ',' multiple_ident ASSIGN expr .  [':', ',']
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '-'  shift, and go to state 43
    '+'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 8 (var_decl_part)


State 52

    5 var_decl: KW_LET var_decl_part ',' multiple_ident ':' data_type . ';'

    ';'  shift, and go to state 60


State 53

   19 expr: '(' expr ')' .

    $default  reduce using rule 19 (expr)


State 54

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .  ['-', '+', ')', ':', ',']
   22     | expr . '*' expr
   23     | expr . '/' expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 21 (expr)

    Conflict between rule 21 and token '-' resolved as reduce (%left '-').
    Conflict between rule 21 and token '+' resolved as reduce (%left '+').
    Conflict between rule 21 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 21 and token '/' resolved as shift ('-' < '/').


State 55

   20 expr: expr . '+' expr
   20     | expr '+' expr .  ['-', '+', ')', ':', ',']
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 20 (expr)

    Conflict between rule 20 and token '-' resolved as reduce (%left '-').
    Conflict between rule 20 and token '+' resolved as reduce (%left '+').
    Conflict between rule 20 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 20 and token '/' resolved as shift ('+' < '/').


State 56

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .  ['-', '+', '*', '/', ')', ':', ',']
   23     | expr . '/' expr

    $default  reduce using rule 22 (expr)

    Conflict between rule 22 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 22 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 22 and token '*' resolved as reduce (%left '*').
    Conflict between rule 22 and token '/' resolved as reduce (%left '/').


State 57

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .  ['-', '+', '*', '/', ')', ':', ',']

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 23 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 23 and token '*' resolved as reduce (%left '*').
    Conflict between rule 23 and token '/' resolved as reduce (%left '/').


State 58

   12 multiple_ident: multiple_ident ',' IDENTIFIER '[' POSINT . ']'

    ']'  shift, and go to state 61


State 59

    6 var_decl: var_decl KW_LET var_decl_part ':' data_type ';' .

    $default  reduce using rule 6 (var_decl)


State 60

    5 var_decl: KW_LET var_decl_part ',' multiple_ident ':' data_type ';' .

    $default  reduce using rule 5 (var_decl)


State 61

   12 multiple_ident: multiple_ident ',' IDENTIFIER '[' POSINT ']' .

    $default  reduce using rule 12 (multiple_ident)
