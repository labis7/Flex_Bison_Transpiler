Nonterminals useless in grammar

   func_body_part
   func_decl1
   if_st
   main
   main_decl
   main_decl_part
   main_internals
   multiple_ident


Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   NOT_EQUAL_OP
   LESS_OP
   LESS_EQUAL_OP
   STRING


Grammar

    0 $accept: input $end

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    2 body: %empty
    3     | decl_list

    4 decl_list: decl
    5          | decl_list decl

    6 decl: KW_LET decl_body_part
    7     | KW_CONST decl_body_part_c
    8     | KW_CONST func_decl

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' func_parameters ')' ':' data_type ';'
   11          | ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'

   13 decl_body_part: decl_form ':' data_type ';'

   14 decl_body_part_c: decl_form_c ':' data_type ';'

   15 decl_form_c: ident_form_part ASSIGN expr
   16            | decl_form_c ',' ident_form_part ASSIGN expr

   17 decl_form: decl_assign
   18          | decl_form ',' decl_assign

   19 decl_assign: ident_form_part
   20            | ident_form_part ASSIGN expr

   21 ident_form_part: IDENTIFIER
   22                | IDENTIFIER '[' ']'

   23 func_parameters: %empty
   24                | ident_form_part ':' data_type
   25                | func_parameters ',' ident_form_part ':' data_type

   26 data_type: KW_INT
   27          | KW_BOOL
   28          | KW_REAL
   29          | KW_STRING

   30 expr: POSINT
   31     | REAL
   32     | '(' expr ')'
   33     | expr '+' expr
   34     | expr '-' expr
   35     | expr '*' expr
   36     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 9 10 11 12 32
')' (41) 1 9 10 11 12 32
'*' (42) 35
'+' (43) 33
',' (44) 16 18 25
'-' (45) 34
'/' (47) 36
':' (58) 1 9 10 11 12 13 14 24 25
';' (59) 10 11 13 14
'[' (91) 11 12 22
']' (93) 11 12 22
'{' (123) 1 9 12
'}' (125) 1 9 12
error (256)
KW_TRUE (258)
KW_FALSE (259)
KW_INT (260) 1 26
KW_REAL (261) 28
KW_BOOL (262) 27
KW_STRING (263) 29
KW_ELSE (264)
KW_IF (265)
KW_THEN (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271) 1 7 8
KW_LET (272) 6
KW_RETURN (273)
KW_NOT (274)
KW_AND (275)
KW_OR (276)
KW_START (277) 1
NOT_EQUAL_OP (278)
LESS_OP (279)
LESS_EQUAL_OP (280)
FUNC_START_ARROW (281) 1 9 12
IDENTIFIER (282) 21 22
POSINT (283) 30
STRING (284)
REAL (285) 31
ASSIGN (286) 1 9 10 11 12 15 16 20


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
input (46)
    on left: 1, on right: 0
body (47)
    on left: 2 3, on right: 1
decl_list (48)
    on left: 4 5, on right: 1 3 5
decl (49)
    on left: 6 7 8, on right: 4 5
func_decl (50)
    on left: 9 10 11 12, on right: 8
decl_body_part (51)
    on left: 13, on right: 6
decl_body_part_c (52)
    on left: 14, on right: 7
decl_form_c (53)
    on left: 15 16, on right: 14 16
decl_form (54)
    on left: 17 18, on right: 13 18
decl_assign (55)
    on left: 19 20, on right: 17 18
ident_form_part (56)
    on left: 21 22, on right: 9 10 11 12 15 16 19 20 24 25
func_parameters (57)
    on left: 23 24 25, on right: 9 10 11 12 25
data_type (58)
    on left: 26 27 28 29, on right: 9 10 11 12 13 14 24 25
expr (59)
    on left: 30 31 32 33 34 35 36, on right: 15 16 20 32 33 34 35 36


State 0

    0 $accept: . input $end
    1 input: . decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    4 decl_list: . decl
    5          | . decl_list decl
    6 decl: . KW_LET decl_body_part
    7     | . KW_CONST decl_body_part_c
    8     | . KW_CONST func_decl

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    input      go to state 3
    decl_list  go to state 4
    decl       go to state 5


State 1

    7 decl: KW_CONST . decl_body_part_c
    8     | KW_CONST . func_decl
    9 func_decl: . ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | . ident_form_part ASSIGN '(' func_parameters ')' ':' data_type ';'
   11          | . ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type ';'
   12          | . ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   14 decl_body_part_c: . decl_form_c ':' data_type ';'
   15 decl_form_c: . ident_form_part ASSIGN expr
   16            | . decl_form_c ',' ident_form_part ASSIGN expr
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 6

    func_decl         go to state 7
    decl_body_part_c  go to state 8
    decl_form_c       go to state 9
    ident_form_part   go to state 10


State 2

    6 decl: KW_LET . decl_body_part
   13 decl_body_part: . decl_form ':' data_type ';'
   17 decl_form: . decl_assign
   18          | . decl_form ',' decl_assign
   19 decl_assign: . ident_form_part
   20            | . ident_form_part ASSIGN expr
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 6

    decl_body_part   go to state 11
    decl_form        go to state 12
    decl_assign      go to state 13
    ident_form_part  go to state 14


State 3

    0 $accept: input . $end

    $end  shift, and go to state 15


State 4

    1 input: decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    5 decl_list: decl_list . decl
    6 decl: . KW_LET decl_body_part
    7     | . KW_CONST decl_body_part_c
    8     | . KW_CONST func_decl

    KW_CONST  shift, and go to state 16
    KW_LET    shift, and go to state 2

    decl  go to state 17


State 5

    4 decl_list: decl .

    $default  reduce using rule 4 (decl_list)


State 6

   21 ident_form_part: IDENTIFIER .  [ASSIGN, ':', ',']
   22                | IDENTIFIER . '[' ']'

    '['  shift, and go to state 18

    $default  reduce using rule 21 (ident_form_part)


State 7

    8 decl: KW_CONST func_decl .

    $default  reduce using rule 8 (decl)


State 8

    7 decl: KW_CONST decl_body_part_c .

    $default  reduce using rule 7 (decl)


State 9

   14 decl_body_part_c: decl_form_c . ':' data_type ';'
   16 decl_form_c: decl_form_c . ',' ident_form_part ASSIGN expr

    ':'  shift, and go to state 19
    ','  shift, and go to state 20


State 10

    9 func_decl: ident_form_part . ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part . ASSIGN '(' func_parameters ')' ':' data_type ';'
   11          | ident_form_part . ASSIGN '(' func_parameters ')' ':' '[' ']' data_type ';'
   12          | ident_form_part . ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   15 decl_form_c: ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 21


State 11

    6 decl: KW_LET decl_body_part .

    $default  reduce using rule 6 (decl)


State 12

   13 decl_body_part: decl_form . ':' data_type ';'
   18 decl_form: decl_form . ',' decl_assign

    ':'  shift, and go to state 22
    ','  shift, and go to state 23


State 13

   17 decl_form: decl_assign .

    $default  reduce using rule 17 (decl_form)


State 14

   19 decl_assign: ident_form_part .  [':', ',']
   20            | ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 19 (decl_assign)


State 15

    0 $accept: input $end .

    $default  accept


State 16

    1 input: decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'
    7 decl: KW_CONST . decl_body_part_c
    8     | KW_CONST . func_decl
    9 func_decl: . ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | . ident_form_part ASSIGN '(' func_parameters ')' ':' data_type ';'
   11          | . ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type ';'
   12          | . ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   14 decl_body_part_c: . decl_form_c ':' data_type ';'
   15 decl_form_c: . ident_form_part ASSIGN expr
   16            | . decl_form_c ',' ident_form_part ASSIGN expr
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'

    KW_START    shift, and go to state 25
    IDENTIFIER  shift, and go to state 6

    func_decl         go to state 7
    decl_body_part_c  go to state 8
    decl_form_c       go to state 9
    ident_form_part   go to state 10


State 17

    5 decl_list: decl_list decl .

    $default  reduce using rule 5 (decl_list)


State 18

   22 ident_form_part: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 26


State 19

   14 decl_body_part_c: decl_form_c ':' . data_type ';'
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30

    data_type  go to state 31


State 20

   16 decl_form_c: decl_form_c ',' . ident_form_part ASSIGN expr
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 6

    ident_form_part  go to state 32


State 21

    9 func_decl: ident_form_part ASSIGN . '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN . '(' func_parameters ')' ':' data_type ';'
   11          | ident_form_part ASSIGN . '(' func_parameters ')' ':' '[' ']' data_type ';'
   12          | ident_form_part ASSIGN . '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   15 decl_form_c: ident_form_part ASSIGN . expr
   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 35

    expr  go to state 36


State 22

   13 decl_body_part: decl_form ':' . data_type ';'
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30

    data_type  go to state 37


State 23

   18 decl_form: decl_form ',' . decl_assign
   19 decl_assign: . ident_form_part
   20            | . ident_form_part ASSIGN expr
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 6

    decl_assign      go to state 38
    ident_form_part  go to state 14


State 24

   20 decl_assign: ident_form_part ASSIGN . expr
   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 40


State 25

    1 input: decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ASSIGN  shift, and go to state 41


State 26

   22 ident_form_part: IDENTIFIER '[' ']' .

    $default  reduce using rule 22 (ident_form_part)


State 27

   26 data_type: KW_INT .

    $default  reduce using rule 26 (data_type)


State 28

   28 data_type: KW_REAL .

    $default  reduce using rule 28 (data_type)


State 29

   27 data_type: KW_BOOL .

    $default  reduce using rule 27 (data_type)


State 30

   29 data_type: KW_STRING .

    $default  reduce using rule 29 (data_type)


State 31

   14 decl_body_part_c: decl_form_c ':' data_type . ';'

    ';'  shift, and go to state 42


State 32

   16 decl_form_c: decl_form_c ',' ident_form_part . ASSIGN expr

    ASSIGN  shift, and go to state 43


State 33

   30 expr: POSINT .

    $default  reduce using rule 30 (expr)


State 34

   31 expr: REAL .

    $default  reduce using rule 31 (expr)


State 35

    9 func_decl: ident_form_part ASSIGN '(' . func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' . func_parameters ')' ':' data_type ';'
   11          | ident_form_part ASSIGN '(' . func_parameters ')' ':' '[' ']' data_type ';'
   12          | ident_form_part ASSIGN '(' . func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'
   23 func_parameters: . %empty  [')', ',']
   24                | . ident_form_part ':' data_type
   25                | . func_parameters ',' ident_form_part ':' data_type
   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   32     | '(' . expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    IDENTIFIER  shift, and go to state 6
    POSINT      shift, and go to state 33
    REAL        shift, and go to state 34
    '('         shift, and go to state 39

    $default  reduce using rule 23 (func_parameters)

    ident_form_part  go to state 44
    func_parameters  go to state 45
    expr             go to state 46


State 36

   15 decl_form_c: ident_form_part ASSIGN expr .  [':', ',']
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 15 (decl_form_c)


State 37

   13 decl_body_part: decl_form ':' data_type . ';'

    ';'  shift, and go to state 51


State 38

   18 decl_form: decl_form ',' decl_assign .

    $default  reduce using rule 18 (decl_form)


State 39

   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   32     | '(' . expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 46


State 40

   20 decl_assign: ident_form_part ASSIGN expr .  [':', ',']
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 20 (decl_assign)


State 41

    1 input: decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    '('  shift, and go to state 52


State 42

   14 decl_body_part_c: decl_form_c ':' data_type ';' .

    $default  reduce using rule 14 (decl_body_part_c)


State 43

   16 decl_form_c: decl_form_c ',' ident_form_part ASSIGN . expr
   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 53


State 44

   24 func_parameters: ident_form_part . ':' data_type

    ':'  shift, and go to state 54


State 45

    9 func_decl: ident_form_part ASSIGN '(' func_parameters . ')' ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' func_parameters . ')' ':' data_type ';'
   11          | ident_form_part ASSIGN '(' func_parameters . ')' ':' '[' ']' data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters . ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}'
   25 func_parameters: func_parameters . ',' ident_form_part ':' data_type

    ')'  shift, and go to state 55
    ','  shift, and go to state 56


State 46

   32 expr: '(' expr . ')'
   33     | expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    ')'  shift, and go to state 57


State 47

   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   34     | expr '-' . expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 58


State 48

   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   33     | expr '+' . expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 59


State 49

   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   35     | expr '*' . expr
   36     | . expr '/' expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 60


State 50

   30 expr: . POSINT
   31     | . REAL
   32     | . '(' expr ')'
   33     | . expr '+' expr
   34     | . expr '-' expr
   35     | . expr '*' expr
   36     | . expr '/' expr
   36     | expr '/' . expr

    POSINT  shift, and go to state 33
    REAL    shift, and go to state 34
    '('     shift, and go to state 39

    expr  go to state 61


State 51

   13 decl_body_part: decl_form ':' data_type ';' .

    $default  reduce using rule 13 (decl_body_part)


State 52

    1 input: decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT FUNC_START_ARROW '{' body '}'

    ')'  shift, and go to state 62


State 53

   16 decl_form_c: decl_form_c ',' ident_form_part ASSIGN expr .  [':', ',']
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 16 (decl_form_c)


State 54

   24 func_parameters: ident_form_part ':' . data_type
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30

    data_type  go to state 63


State 55

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' . ':' data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' func_parameters ')' . ':' data_type ';'
   11          | ident_form_part ASSIGN '(' func_parameters ')' . ':' '[' ']' data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' . ':' '[' ']' data_type FUNC_START_ARROW '{' '}'

    ':'  shift, and go to state 64


State 56

   21 ident_form_part: . IDENTIFIER
   22                | . IDENTIFIER '[' ']'
   25 func_parameters: func_parameters ',' . ident_form_part ':' data_type

    IDENTIFIER  shift, and go to state 6

    ident_form_part  go to state 65


State 57

   32 expr: '(' expr ')' .

    $default  reduce using rule 32 (expr)


State 58

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   34     | expr '-' expr .  ['-', '+', ')', ':', ',']
   35     | expr . '*' expr
   36     | expr . '/' expr

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token '-' resolved as reduce (%left '-').
    Conflict between rule 34 and token '+' resolved as reduce (%left '+').
    Conflict between rule 34 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('-' < '/').


State 59

   33 expr: expr . '+' expr
   33     | expr '+' expr .  ['-', '+', ')', ':', ',']
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token '-' resolved as reduce (%left '-').
    Conflict between rule 33 and token '+' resolved as reduce (%left '+').
    Conflict between rule 33 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 33 and token '/' resolved as shift ('+' < '/').


State 60

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   35     | expr '*' expr .  ['-', '+', '*', '/', ')', ':', ',']
   36     | expr . '/' expr

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 35 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 35 and token '*' resolved as reduce (%left '*').
    Conflict between rule 35 and token '/' resolved as reduce (%left '/').


State 61

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   36     | expr '/' expr .  ['-', '+', '*', '/', ')', ':', ',']

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 36 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 36 and token '*' resolved as reduce (%left '*').
    Conflict between rule 36 and token '/' resolved as reduce (%left '/').


State 62

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT FUNC_START_ARROW '{' body '}'

    ':'  shift, and go to state 66


State 63

   24 func_parameters: ident_form_part ':' data_type .

    $default  reduce using rule 24 (func_parameters)


State 64

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' . data_type FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' func_parameters ')' ':' . data_type ';'
   11          | ident_form_part ASSIGN '(' func_parameters ')' ':' . '[' ']' data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' ':' . '[' ']' data_type FUNC_START_ARROW '{' '}'
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30
    '['        shift, and go to state 67

    data_type  go to state 68


State 65

   25 func_parameters: func_parameters ',' ident_form_part . ':' data_type

    ':'  shift, and go to state 69


State 66

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT FUNC_START_ARROW '{' body '}'

    KW_INT  shift, and go to state 70


State 67

   11 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' . ']' data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' ':' '[' . ']' data_type FUNC_START_ARROW '{' '}'

    ']'  shift, and go to state 71


State 68

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type . FUNC_START_ARROW '{' '}'
   10          | ident_form_part ASSIGN '(' func_parameters ')' ':' data_type . ';'

    FUNC_START_ARROW  shift, and go to state 72
    ';'               shift, and go to state 73


State 69

   25 func_parameters: func_parameters ',' ident_form_part ':' . data_type
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30

    data_type  go to state 74


State 70

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . FUNC_START_ARROW '{' body '}'

    FUNC_START_ARROW  shift, and go to state 75


State 71

   11 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' . data_type ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' . data_type FUNC_START_ARROW '{' '}'
   26 data_type: . KW_INT
   27          | . KW_BOOL
   28          | . KW_REAL
   29          | . KW_STRING

    KW_INT     shift, and go to state 27
    KW_REAL    shift, and go to state 28
    KW_BOOL    shift, and go to state 29
    KW_STRING  shift, and go to state 30

    data_type  go to state 76


State 72

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW . '{' '}'

    '{'  shift, and go to state 77


State 73

   10 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type ';' .

    $default  reduce using rule 10 (func_decl)


State 74

   25 func_parameters: func_parameters ',' ident_form_part ':' data_type .

    $default  reduce using rule 25 (func_parameters)


State 75

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW . '{' body '}'

    '{'  shift, and go to state 78


State 76

   11 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type . ';'
   12          | ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type . FUNC_START_ARROW '{' '}'

    FUNC_START_ARROW  shift, and go to state 79
    ';'               shift, and go to state 80


State 77

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' . '}'

    '}'  shift, and go to state 81


State 78

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' . body '}'
    2 body: . %empty  ['}']
    3     | . decl_list
    4 decl_list: . decl
    5          | . decl_list decl
    6 decl: . KW_LET decl_body_part
    7     | . KW_CONST decl_body_part_c
    8     | . KW_CONST func_decl

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    $default  reduce using rule 2 (body)

    body       go to state 82
    decl_list  go to state 83
    decl       go to state 5


State 79

   12 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW . '{' '}'

    '{'  shift, and go to state 84


State 80

   11 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type ';' .

    $default  reduce using rule 11 (func_decl)


State 81

    9 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' data_type FUNC_START_ARROW '{' '}' .

    $default  reduce using rule 9 (func_decl)


State 82

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body . '}'

    '}'  shift, and go to state 85


State 83

    3 body: decl_list .  ['}']
    5 decl_list: decl_list . decl
    6 decl: . KW_LET decl_body_part
    7     | . KW_CONST decl_body_part_c
    8     | . KW_CONST func_decl

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    $default  reduce using rule 3 (body)

    decl  go to state 17


State 84

   12 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' . '}'

    '}'  shift, and go to state 86


State 85

    1 input: decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT FUNC_START_ARROW '{' body '}' .

    $default  reduce using rule 1 (input)


State 86

   12 func_decl: ident_form_part ASSIGN '(' func_parameters ')' ':' '[' ']' data_type FUNC_START_ARROW '{' '}' .

    $default  reduce using rule 12 (func_decl)
